[{"path":[]},{"path":"/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement .landau@gmail.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to brms.mmrm","title":"Contributing to brms.mmrm","text":"outlines propose change brms.mmrm. detailed info contributing , tidyverse packages, please see development contributing guide.","code":""},{"path":"/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to brms.mmrm","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to brms.mmrm","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to brms.mmrm","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"RConsortium/brms.mmrm\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to brms.mmrm","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to brms.mmrm","text":"Please note brms.mmrm project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 Eli Lilly Company, Boehringer-Ingelheim, Sage Therapeutics Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/archetypes.html","id":"constructing-an-archetype","dir":"Articles","previous_headings":"","what":"Constructing an archetype","title":"Informative prior archetypes","text":"begin simulated dataset. functions listed https://openpharma.github.io/brms.mmrm/reference/index.html#informative-prior-archetypes can create different kinds informative prior archetypes dataset like one . example, suppose want place informative priors successive differences adjacent time points. approach appropriate desirable many situations structure naturally captures prior correlations among adjacent visits clinical trial. , create instance “successive cells” archetype. instance archetype ordinary tibble, adds new columns. new columns constitute custom model matrix describe desired parameterization. effects interest express successive differences, nuisance variables. nuisance variables continuous covariates, others levels one-hot-encoded concomitant factors interactions concomitant factors baseline /subgroup. nuisance variables centered means reference level model “center” data implicitly conditional subset data.1 addition, nuisance variables automatically dropped order ensure model matrix full-rank. critically important preserve interpretation columns interest make sure informative priors behave expected. factors interest linearly map marginal means. see mapping, call summary() archetype. printed output helps build intuition archetype parameterized parameters .","code":"library(brms.mmrm) set.seed(0L) data <- brm_simulate_outline(   n_group = 2,   n_patient = 100,   n_time = 4,   rate_dropout = 0,   rate_lapse = 0 ) |>   dplyr::mutate(response = rnorm(n = dplyr::n())) |>   brm_data_change() |>   brm_simulate_continuous(names = c(\"biomarker1\", \"biomarker2\")) |>   brm_simulate_categorical(     names = c(\"status1\", \"status2\"),     levels = c(\"present\", \"absent\")   ) dplyr::select(   data,   group,   time,   patient,   starts_with(\"biomarker\"),   starts_with(\"status\") ) #> # A tibble: 600 × 7 #>    group   time   patient     biomarker1 biomarker2 status1 status2 #>    <chr>   <chr>  <chr>            <dbl>      <dbl> <chr>   <chr>   #>  1 group_1 time_2 patient_001     -1.42      -0.287 absent  present #>  2 group_1 time_3 patient_001     -1.42      -0.287 absent  present #>  3 group_1 time_4 patient_001     -1.42      -0.287 absent  present #>  4 group_1 time_2 patient_002     -1.67       1.84  absent  present #>  5 group_1 time_3 patient_002     -1.67       1.84  absent  present #>  6 group_1 time_4 patient_002     -1.67       1.84  absent  present #>  7 group_1 time_2 patient_003      1.38      -0.157 absent  absent  #>  8 group_1 time_3 patient_003      1.38      -0.157 absent  absent  #>  9 group_1 time_4 patient_003      1.38      -0.157 absent  absent  #> 10 group_1 time_2 patient_004     -0.920     -1.39  present present #> # ℹ 590 more rows archetype <- brm_archetype_successive_cells(data, baseline = FALSE) archetype #> # A tibble: 600 × 23 #>    x_group_1_time_2 x_group_1_time_3 x_group_1_time_4 x_group_2_time_2 #>  *            <dbl>            <dbl>            <dbl>            <dbl> #>  1                1                0                0                0 #>  2                1                1                0                0 #>  3                1                1                1                0 #>  4                1                0                0                0 #>  5                1                1                0                0 #>  6                1                1                1                0 #>  7                1                0                0                0 #>  8                1                1                0                0 #>  9                1                1                1                0 #> 10                1                0                0                0 #> # ℹ 590 more rows #> # ℹ 19 more variables: x_group_2_time_3 <dbl>, x_group_2_time_4 <dbl>, #> #   nuisance_biomarker1 <dbl>, nuisance_biomarker2 <dbl>, #> #   nuisance_status1_absent <dbl>, nuisance_status2_present <dbl>, #> #   nuisance_baseline.timetime_2 <dbl>, nuisance_baseline.timetime_3 <dbl>, #> #   nuisance_baseline.timetime_4 <dbl>, patient <chr>, time <chr>, #> #   change <dbl>, missing <lgl>, baseline <dbl>, group <chr>, … attr(archetype, \"brm_archetype_interest\") #> [1] \"x_group_1_time_2\" \"x_group_1_time_3\" \"x_group_1_time_4\" \"x_group_2_time_2\" #> [5] \"x_group_2_time_3\" \"x_group_2_time_4\" attr(archetype, \"brm_archetype_nuisance\") #> [1] \"nuisance_biomarker1\"          \"nuisance_biomarker2\"          #> [3] \"nuisance_status1_absent\"      \"nuisance_status2_present\"     #> [5] \"nuisance_baseline.timetime_2\" \"nuisance_baseline.timetime_3\" #> [7] \"nuisance_baseline.timetime_4\" summary(archetype) #> # This object is an informative prior archetype in brms.mmrm. #> # The fixed effect parameters of interest express the #> # marginal means as follows: #> #  #> #    group_1:time_2 = x_group_1_time_2 #> #    group_1:time_3 = x_group_1_time_2 + x_group_1_time_3 #> #    group_1:time_4 = x_group_1_time_2 + x_group_1_time_3 + x_group_1_time_4 #> #    group_2:time_2 = x_group_2_time_2 #> #    group_2:time_3 = x_group_2_time_2 + x_group_2_time_3 #> #    group_2:time_4 = x_group_2_time_2 + x_group_2_time_3 + x_group_2_time_4"},{"path":"/articles/archetypes.html","id":"informative-priors","dir":"Articles","previous_headings":"","what":"Informative priors","title":"Informative prior archetypes","text":"Let’s assume want assign informative priors fixed effect parameters interest declared archetype, x_group_1_time_2 x_group_2_time_3. priors may come expert elicitation, historical data, method, might consider distributional families recommended Stan team. Either way, brms.mmrm helps assign priors model without guess automatically-generated names model coefficients R. printed output summary(archetype), parameters interest x_group_1_time_2 x_group_2_time_3 always labeled using treatment groups time points data (subgroup levels, applicable). Even though different archetypes different parameterizations thus different ways expressing marginal means, labeling scheme remains consistent across archetypes. brms.mmrm helps assign priors. First, match priors levels data. group time labels map priors corresponding x_* parameters. brm_prior_archetype() accepts collection labeled priors returns brms prior object documented https://paul-buerkner.github.io/brms/reference/set_prior.html. less common situations, may wish assign priors nuisance parameters. example, model accounts interactions baseline discrete time, may reasonable assign priors slopes based high-quality historical data. requires thorough understanding fixed effect structure model, can done directly brms. First, check formula included nuisance parameters. brm_formula() automatically understands archetypes. \"nuisance_*\" terms nuisance variables, ones involving baseline nuisance_baseline.timetime_2, nuisance_baseline.timetime_3, nuisance_baseline.timetime_4. overall slope baseline, can interpret term linear rate change outcome variable per unit increase baseline given discrete time point. Suppose use interpretation construct informative priors student_t(4, 2.1, 4.8), student_t(4, 3.2, 5.2), student_t(4, 2.5, 5.7), respectively. Use brms::set_prior() c() append priors existing prior object: model still many parameters set priors, brms sets automatic defaults. can see defaults brms::default_prior(). https://paul-buerkner.github.io/brms/reference/set_prior.html documents many default priors set brms. particular, \"(flat)\" denotes improper uniform prior real numbers.","code":"label <- NULL |>   brm_prior_label(\"student_t(4, 0.98, 2.37)\", group = \"group_1\", time = \"time_2\") |>   brm_prior_label(\"student_t(4, 1.82, 3.32)\", group = \"group_1\", time = \"time_3\") |>   brm_prior_label(\"student_t(4, 2.35, 4.41)\", group = \"group_1\", time = \"time_4\") |>   brm_prior_label(\"student_t(4, 0.31, 2.22)\", group = \"group_2\", time = \"time_2\") |>   brm_prior_label(\"student_t(4, 1.94, 2.85)\", group = \"group_2\", time = \"time_3\") |>   brm_prior_label(\"student_t(4, 2.33, 3.41)\", group = \"group_2\", time = \"time_4\") label #> # A tibble: 6 × 3 #>   code                     group   time   #>   <chr>                    <chr>   <chr>  #> 1 student_t(4, 0.98, 2.37) group_1 time_2 #> 2 student_t(4, 1.82, 3.32) group_1 time_3 #> 3 student_t(4, 2.35, 4.41) group_1 time_4 #> 4 student_t(4, 0.31, 2.22) group_2 time_2 #> 5 student_t(4, 1.94, 2.85) group_2 time_3 #> 6 student_t(4, 2.33, 3.41) group_2 time_4 prior <- brm_prior_archetype(label = label, archetype = archetype) prior #>                     prior class             coef group resp dpar nlpar   lb #>  student_t(4, 0.98, 2.37)     b x_group_1_time_2                       <NA> #>  student_t(4, 1.82, 3.32)     b x_group_1_time_3                       <NA> #>  student_t(4, 2.35, 4.41)     b x_group_1_time_4                       <NA> #>  student_t(4, 0.31, 2.22)     b x_group_2_time_2                       <NA> #>  student_t(4, 1.94, 2.85)     b x_group_2_time_3                       <NA> #>  student_t(4, 2.33, 3.41)     b x_group_2_time_4                       <NA> #>    ub source #>  <NA>   user #>  <NA>   user #>  <NA>   user #>  <NA>   user #>  <NA>   user #>  <NA>   user brm_formula(archetype) #> change ~ 0 + x_group_1_time_2 + x_group_1_time_3 + x_group_1_time_4 + x_group_2_time_2 + x_group_2_time_3 + x_group_2_time_4 + nuisance_biomarker1 + nuisance_biomarker2 + nuisance_status1_absent + nuisance_status2_present + nuisance_baseline.timetime_2 + nuisance_baseline.timetime_3 + nuisance_baseline.timetime_4 + unstr(time = time, gr = patient)  #> sigma ~ 0 + time prior <- c(   prior,   set_prior(\"student_t(4, 2.17, 4.86)\", coef = \"nuisance_baseline.timetime_2\"),   set_prior(\"student_t(4, 3.22, 5.25)\", coef = \"nuisance_baseline.timetime_3\"),   set_prior(\"student_t(4, 2.53, 5.75)\", coef = \"nuisance_baseline.timetime_4\") ) prior #>                     prior class                         coef group resp dpar #>  student_t(4, 0.98, 2.37)     b             x_group_1_time_2                 #>  student_t(4, 1.82, 3.32)     b             x_group_1_time_3                 #>  student_t(4, 2.35, 4.41)     b             x_group_1_time_4                 #>  student_t(4, 0.31, 2.22)     b             x_group_2_time_2                 #>  student_t(4, 1.94, 2.85)     b             x_group_2_time_3                 #>  student_t(4, 2.33, 3.41)     b             x_group_2_time_4                 #>  student_t(4, 2.17, 4.86)     b nuisance_baseline.timetime_2                 #>  student_t(4, 3.22, 5.25)     b nuisance_baseline.timetime_3                 #>  student_t(4, 2.53, 5.75)     b nuisance_baseline.timetime_4                 #>  nlpar   lb   ub source #>        <NA> <NA>   user #>        <NA> <NA>   user #>        <NA> <NA>   user #>        <NA> <NA>   user #>        <NA> <NA>   user #>        <NA> <NA>   user #>        <NA> <NA>   user #>        <NA> <NA>   user #>        <NA> <NA>   user brms::default_prior(object = formula, data = archetype) #> Error in x$formula: object of type 'closure' is not subsettable"},{"path":"/articles/archetypes.html","id":"modeling-and-analysis","dir":"Articles","previous_headings":"","what":"Modeling and analysis","title":"Informative prior archetypes","text":"downstream methods brms.mmrm automatically understand work informative prior archetypes. Notably, formula uses custom interest nuisance variables instead original variables data. model can accept archetype, formula, prior. Usage non-archetype workflows. Marginal mean estimation, post-processing, visualization automatically understand archetype without user intervention. plot chunk archetype_compare_data","code":"formula <- brm_formula(archetype) formula #> change ~ 0 + x_group_1_time_2 + x_group_1_time_3 + x_group_1_time_4 + x_group_2_time_2 + x_group_2_time_3 + x_group_2_time_4 + nuisance_biomarker1 + nuisance_biomarker2 + nuisance_status1_absent + nuisance_status2_present + nuisance_baseline.timetime_2 + nuisance_baseline.timetime_3 + nuisance_baseline.timetime_4 + unstr(time = time, gr = patient)  #> sigma ~ 0 + time model <- brm_model(   data = archetype,   formula = formula,   prior = prior,   refresh = 0 ) #> Compiling Stan program... #> Start sampling brms::prior_summary(model) #>                     prior    class                         coef group resp #>                    (flat)        b                                         #>  student_t(4, 2.17, 4.86)        b nuisance_baseline.timetime_2            #>  student_t(4, 3.22, 5.25)        b nuisance_baseline.timetime_3            #>  student_t(4, 2.53, 5.75)        b nuisance_baseline.timetime_4            #>                    (flat)        b          nuisance_biomarker1            #>                    (flat)        b          nuisance_biomarker2            #>                    (flat)        b      nuisance_status1_absent            #>                    (flat)        b     nuisance_status2_present            #>  student_t(4, 0.98, 2.37)        b             x_group_1_time_2            #>  student_t(4, 1.82, 3.32)        b             x_group_1_time_3            #>  student_t(4, 2.35, 4.41)        b             x_group_1_time_4            #>  student_t(4, 0.31, 2.22)        b             x_group_2_time_2            #>  student_t(4, 1.94, 2.85)        b             x_group_2_time_3            #>  student_t(4, 2.33, 3.41)        b             x_group_2_time_4            #>                    (flat)        b                                         #>                    (flat)        b                   timetime_2            #>                    (flat)        b                   timetime_3            #>                    (flat)        b                   timetime_4            #>      lkj_corr_cholesky(1) Lcortime                                         #>   dpar nlpar lb ub       source #>                         default #>                            user #>                            user #>                            user #>                    (vectorized) #>                    (vectorized) #>                    (vectorized) #>                    (vectorized) #>                            user #>                            user #>                            user #>                            user #>                            user #>                            user #>  sigma                  default #>  sigma             (vectorized) #>  sigma             (vectorized) #>  sigma             (vectorized) #>                         default draws <- brm_marginal_draws(   data = archetype,   formula = formula,   model = model ) summaries_model <- brm_marginal_summaries(draws) summaries_data <- brm_marginal_data(data) brm_plot_compare(model = summaries_model, data = summaries_data)"},{"path":"/articles/archetypes.html","id":"other-archetypes","dir":"Articles","previous_headings":"","what":"Other archetypes","title":"Informative prior archetypes","text":"informative prior archetypes use different fixed effects. example, brms.mmrm supports simple cell mean treatment effect parameterizations. archetypes parameterize average across time points data. , x_group_1_time_2 average across time points group 1 algebraic result simplifying (group_1:time_2 + group_1:time_3 + group_1:time_3) / 3. also treatment effect version x_group_2_time_2 becomes time-averaged treatment effect group 2 relative group 1. addition, treatment effect version successive differences archetype earlier vignette.","code":"summary(brm_archetype_cells(data)) #> # This object is an informative prior archetype in brms.mmrm. #> # The fixed effect parameters of interest express the #> # marginal means as follows: #> #  #> #    group_1:time_2 = x_group_1_time_2 #> #    group_1:time_3 = x_group_1_time_3 #> #    group_1:time_4 = x_group_1_time_4 #> #    group_2:time_2 = x_group_2_time_2 #> #    group_2:time_3 = x_group_2_time_3 #> #    group_2:time_4 = x_group_2_time_4 summary(brm_archetype_effects(data)) #> # This object is an informative prior archetype in brms.mmrm. #> # The fixed effect parameters of interest express the #> # marginal means as follows: #> #  #> #    group_1:time_2 = x_group_1_time_2 #> #    group_1:time_3 = x_group_1_time_3 #> #    group_1:time_4 = x_group_1_time_4 #> #    group_2:time_2 = x_group_1_time_2 + x_group_2_time_2 #> #    group_2:time_3 = x_group_1_time_3 + x_group_2_time_3 #> #    group_2:time_4 = x_group_1_time_4 + x_group_2_time_4 summary(brm_archetype_average_cells(data)) #> # This object is an informative prior archetype in brms.mmrm. #> # The fixed effect parameters of interest express the #> # marginal means as follows: #> #  #> #    group_1:time_2 = 3*x_group_1_time_2 - x_group_1_time_3 - x_group_1_time_4 #> #    group_1:time_3 = x_group_1_time_3 #> #    group_1:time_4 = x_group_1_time_4 #> #    group_2:time_2 = 3*x_group_2_time_2 - x_group_2_time_3 - x_group_2_time_4 #> #    group_2:time_3 = x_group_2_time_3 #> #    group_2:time_4 = x_group_2_time_4 summary(brm_archetype_average_effects(data)) #> # This object is an informative prior archetype in brms.mmrm. #> # The fixed effect parameters of interest express the #> # marginal means as follows: #> #  #> #    group_1:time_2 = 3*x_group_1_time_2 - x_group_1_time_3 - x_group_1_time_4 #> #    group_1:time_3 = x_group_1_time_3 #> #    group_1:time_4 = x_group_1_time_4 #> #    group_2:time_2 = 3*x_group_1_time_2 - x_group_1_time_3 - x_group_1_time_4 + 3*x_group_2_time_2 - x_group_2_time_3 - x_group_2_time_4 #> #    group_2:time_3 = x_group_1_time_3 + x_group_2_time_3 #> #    group_2:time_4 = x_group_1_time_4 + x_group_2_time_4 summary(brm_archetype_successive_effects(data)) #> # This object is an informative prior archetype in brms.mmrm. #> # The fixed effect parameters of interest express the #> # marginal means as follows: #> #  #> #    group_1:time_2 = x_group_1_time_2 #> #    group_1:time_3 = x_group_1_time_2 + x_group_1_time_3 #> #    group_1:time_4 = x_group_1_time_2 + x_group_1_time_3 + x_group_1_time_4 #> #    group_2:time_2 = x_group_1_time_2 + x_group_2_time_2 #> #    group_2:time_3 = x_group_1_time_2 + x_group_1_time_3 + x_group_2_time_2 + x_group_2_time_3 #> #    group_2:time_4 = x_group_1_time_2 + x_group_1_time_3 + x_group_1_time_4 + x_group_2_time_2 + x_group_2_time_3 + x_group_2_time_4"},{"path":"/articles/bcva.html","id":"about","dir":"Articles","previous_headings":"","what":"About","title":"BCVA data comparison between Bayesian and frequentist MMRMs","text":"vignette uses bcva_data dataset mmrm package compare Bayesian MMRM fit, obtained brms.mmrm::brm_model(), frequentist MMRM fit, obtained mmrm::mmrm(). overview parameter estimates differences type MMRM given summary (Tables 4 5) end.","code":""},{"path":"/articles/bcva.html","id":"prerequisites","dir":"Articles","previous_headings":"","what":"Prerequisites","title":"BCVA data comparison between Bayesian and frequentist MMRMs","text":"comparison workflow requires following packages. set seed random number generator ensure statistical reproducibility.","code":"> packages <- c( +   \"dplyr\", +   \"tidyr\", +   \"ggplot2\", +   \"gt\", +   \"gtsummary\", +   \"purrr\", +   \"parallel\", +   \"brms.mmrm\", +   \"mmrm\", +   \"emmeans\", +   \"posterior\" + ) > invisible(lapply(packages, library, character.only = TRUE)) > set.seed(123L)"},{"path":[]},{"path":"/articles/bcva.html","id":"pre-processing","dir":"Articles","previous_headings":"Data","what":"Pre-processing","title":"BCVA data comparison between Bayesian and frequentist MMRMs","text":"analysis exercise uses bcva_data dataset contained mmrm package: According https://openpharma.github.io/mmrm/latest-tag/articles/mmrm_review_methods.html: BCVA dataset contains data randomized longitudinal ophthalmology trial evaluating change baseline corrected visual acuity (BCVA) course 10 visits. BCVA corresponds number letters read visual acuity chart. dataset tibble 800 rows 7 variables. primary endpoint analysis BCVA_CHG. USUBJID (subject ID) AVISITN (visit number, numeric) AVISIT (visit number, factor) ARMCD (treatment, TRT CTL) RACE (3-category race) BCVA_BL (BCVA baseline) BCVA_CHG (BCVA change baseline) rest pre-processing steps create factors study arm visit apply usual checking standardization steps brms.mmrm::brm_data(). following table shows first rows dataset. Table 1. First rows pre-processed bcva_data dataset.","code":"> data(bcva_data, package = \"mmrm\") > bcva_data <- brm_data( +   data = bcva_data, +   outcome = \"BCVA_CHG\", +   role = \"change\", +   group = \"ARMCD\", +   time = \"AVISIT\", +   patient = \"USUBJID\", +   baseline = \"BCVA_BL\", +   reference_group = \"CTL\", +   covariates = \"RACE\" + ) |> +   mutate(ARMCD = factor(ARMCD), AVISIT = factor(AVISIT)) > head(bcva_data) |> +   gt() |> +   tab_caption(caption = md(\"Table 1. First rows of the pre-processed `bcva_data` dataset.\"))"},{"path":"/articles/bcva.html","id":"descriptive-statistics","dir":"Articles","previous_headings":"Data","what":"Descriptive statistics","title":"BCVA data comparison between Bayesian and frequentist MMRMs","text":"Table baseline characteristics: Table 2. Baseline characteristics. Table change baseline BCVA 52 weeks: Table 3. Change baseline. following figure shows primary endpoint four study visits data. Figure 1. Change baseline BCVA 4 visit time points.","code":"> bcva_data |> +   select(ARMCD, USUBJID, RACE, BCVA_BL) |> +   distinct() |> +   select(-USUBJID) |> +   tbl_summary( +     by = c(ARMCD), +     statistic = list( +       all_continuous() ~ \"{mean} ({sd})\", +       all_categorical() ~ \"{n} / {N} ({p}%)\" +     ) +   ) |> +   modify_caption(\"Table 2. Baseline characteristics.\") > bcva_data |> +   pull(AVISIT) |> +   unique() |> +   sort() |> +   purrr::map( +     .f = ~ bcva_data |> +       filter(AVISIT %in% .x) |> +       tbl_summary( +         by = ARMCD, +         include = BCVA_CHG, +         type = BCVA_CHG ~ \"continuous2\", +         statistic = BCVA_CHG ~ c( +           \"{mean} ({sd})\", +           \"{median} ({p25}, {p75})\", +           \"{min}, {max}\" +         ), +         label = list(BCVA_CHG = paste(\"Visit \", .x)) +       ) +   ) |> +   tbl_stack(quiet = TRUE) |> +   modify_caption(\"Table 3. Change from baseline.\") > bcva_data |> +   group_by(ARMCD) |> +   ggplot(aes(x = AVISIT, y = BCVA_CHG, fill = factor(ARMCD))) + +   geom_hline(yintercept = 0, col = \"grey\", linewidth = 1.2) + +   geom_boxplot(na.rm = TRUE) + +   labs( +     x = \"Visit\", +     y = \"Change from baseline in BCVA\", +     fill = \"Treatment\" +   ) + +   scale_fill_manual(values = c(\"darkgoldenrod2\", \"coral2\")) + +   theme_bw()"},{"path":[]},{"path":"/articles/bcva.html","id":"bayesian-model","dir":"Articles","previous_headings":"Fitting MMRMs","what":"Bayesian model","title":"BCVA data comparison between Bayesian and frequentist MMRMs","text":"formula Bayesian model includes additive effects baseline, study visit, race, study-arm--visit interaction. fit model using brms.mmrm::brm_model(). computation takes several minutes size dataset. ensure good basis comparison frequentist model, put extremely diffuse prior intercept. parameters already diffuse flexible priors default. posterior summary model parameters, including fixed effects pairwise correlation among visits within patients.","code":"> b_mmrm_formula <- brm_formula( +   data = bcva_data, +   intercept = TRUE, +   baseline = TRUE, +   group = FALSE, +   time = TRUE, +   baseline_time = FALSE, +   group_time = TRUE, +   correlation = \"unstructured\" + ) > print(b_mmrm_formula) #> BCVA_CHG ~ BCVA_BL + ARMCD:AVISIT + AVISIT + RACE + unstr(time = AVISIT, gr = USUBJID)  #> sigma ~ 0 + AVISIT > b_mmrm_fit <- brm_model( +   data = filter(bcva_data, !is.na(BCVA_CHG)), +   formula = b_mmrm_formula, +   prior = brms::prior(class = \"Intercept\", prior = \"student_t(3, 0, 1000)\"), +   iter = 10000, +   warmup = 2000, +   chains = 4, +   cores = 4, +   refresh = 0 + ) > summary(b_mmrm_fit) #>  Family: gaussian  #>   Links: mu = identity; sigma = log  #> Formula: BCVA_CHG ~ BCVA_BL + ARMCD:AVISIT + AVISIT + RACE + unstr(time = AVISIT, gr = USUBJID)  #>          sigma ~ 0 + AVISIT #>    Data: data[!is.na(data[[attr(data, \"brm_outcome\")]]), ] (Number of observations: 8605)  #>   Draws: 4 chains, each with iter = 10000; warmup = 2000; thin = 1; #>          total post-warmup draws = 32000 #>  #> Correlation Structures: #>                      Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS #> cortime(VIS01,VIS02)     0.80      0.01     0.78     0.82 1.00    25814 #> cortime(VIS01,VIS03)     0.80      0.01     0.77     0.82 1.00    27894 #> cortime(VIS02,VIS03)     0.71      0.02     0.67     0.74 1.00    25786 #> cortime(VIS01,VIS04)     0.70      0.01     0.67     0.73 1.00    21340 #> cortime(VIS02,VIS04)     0.68      0.02     0.64     0.71 1.00    21716 #> cortime(VIS03,VIS04)     0.60      0.02     0.56     0.64 1.00    18655 #> cortime(VIS01,VIS05)     0.61      0.02     0.57     0.64 1.00    22549 #> cortime(VIS02,VIS05)     0.59      0.02     0.55     0.63 1.00    21432 #> cortime(VIS03,VIS05)     0.53      0.03     0.48     0.58 1.00    19140 #> cortime(VIS04,VIS05)     0.71      0.02     0.68     0.74 1.00    25313 #> cortime(VIS01,VIS06)     0.51      0.02     0.47     0.56 1.00    22245 #> cortime(VIS02,VIS06)     0.53      0.02     0.48     0.57 1.00    21179 #> cortime(VIS03,VIS06)     0.48      0.03     0.42     0.53 1.00    18362 #> cortime(VIS04,VIS06)     0.68      0.02     0.64     0.71 1.00    24781 #> cortime(VIS05,VIS06)     0.68      0.02     0.64     0.71 1.00    27072 #> cortime(VIS01,VIS07)     0.26      0.04     0.19     0.33 1.00    29308 #> cortime(VIS02,VIS07)     0.30      0.04     0.23     0.37 1.00    27723 #> cortime(VIS03,VIS07)     0.30      0.04     0.22     0.37 1.00    25913 #> cortime(VIS04,VIS07)     0.41      0.03     0.34     0.48 1.00    28633 #> cortime(VIS05,VIS07)     0.46      0.03     0.40     0.52 1.00    32096 #> cortime(VIS06,VIS07)     0.51      0.03     0.45     0.56 1.00    30156 #> cortime(VIS01,VIS08)     0.09      0.04     0.02     0.16 1.00    36119 #> cortime(VIS02,VIS08)     0.16      0.04     0.08     0.23 1.00    34156 #> cortime(VIS03,VIS08)     0.15      0.04     0.08     0.23 1.00    32502 #> cortime(VIS04,VIS08)     0.31      0.04     0.23     0.38 1.00    34914 #> cortime(VIS05,VIS08)     0.35      0.03     0.28     0.41 1.00    37071 #> cortime(VIS06,VIS08)     0.40      0.03     0.33     0.46 1.00    34382 #> cortime(VIS07,VIS08)     0.36      0.03     0.29     0.42 1.00    38088 #> cortime(VIS01,VIS09)    -0.05      0.03    -0.12     0.01 1.00    46334 #> cortime(VIS02,VIS09)    -0.01      0.04    -0.07     0.06 1.00    42920 #> cortime(VIS03,VIS09)     0.05      0.04    -0.03     0.12 1.00    42833 #> cortime(VIS04,VIS09)     0.16      0.04     0.09     0.23 1.00    44165 #> cortime(VIS05,VIS09)     0.21      0.03     0.14     0.27 1.00    46855 #> cortime(VIS06,VIS09)     0.33      0.03     0.27     0.39 1.00    47695 #> cortime(VIS07,VIS09)     0.29      0.03     0.23     0.36 1.00    49402 #> cortime(VIS08,VIS09)     0.39      0.03     0.33     0.44 1.00    50252 #> cortime(VIS01,VIS10)    -0.10      0.03    -0.16    -0.03 1.00    43885 #> cortime(VIS02,VIS10)    -0.00      0.03    -0.06     0.06 1.00    42961 #> cortime(VIS03,VIS10)     0.04      0.03    -0.03     0.10 1.00    40552 #> cortime(VIS04,VIS10)     0.22      0.03     0.16     0.28 1.00    44812 #> cortime(VIS05,VIS10)     0.27      0.03     0.21     0.33 1.00    49906 #> cortime(VIS06,VIS10)     0.38      0.03     0.32     0.44 1.00    49501 #> cortime(VIS07,VIS10)     0.33      0.03     0.27     0.39 1.00    53935 #> cortime(VIS08,VIS10)     0.41      0.03     0.36     0.47 1.00    53862 #> cortime(VIS09,VIS10)     0.44      0.03     0.39     0.49 1.00    54958 #>                      Tail_ESS #> cortime(VIS01,VIS02)    24405 #> cortime(VIS01,VIS03)    24039 #> cortime(VIS02,VIS03)    23777 #> cortime(VIS01,VIS04)    24870 #> cortime(VIS02,VIS04)    25165 #> cortime(VIS03,VIS04)    23933 #> cortime(VIS01,VIS05)    24830 #> cortime(VIS02,VIS05)    23805 #> cortime(VIS03,VIS05)    23943 #> cortime(VIS04,VIS05)    25526 #> cortime(VIS01,VIS06)    24409 #> cortime(VIS02,VIS06)    24107 #> cortime(VIS03,VIS06)    24098 #> cortime(VIS04,VIS06)    25983 #> cortime(VIS05,VIS06)    24029 #> cortime(VIS01,VIS07)    24355 #> cortime(VIS02,VIS07)    23774 #> cortime(VIS03,VIS07)    22936 #> cortime(VIS04,VIS07)    23514 #> cortime(VIS05,VIS07)    24212 #> cortime(VIS06,VIS07)    23912 #> cortime(VIS01,VIS08)    25501 #> cortime(VIS02,VIS08)    24810 #> cortime(VIS03,VIS08)    22271 #> cortime(VIS04,VIS08)    22823 #> cortime(VIS05,VIS08)    23153 #> cortime(VIS06,VIS08)    25061 #> cortime(VIS07,VIS08)    24467 #> cortime(VIS01,VIS09)    25154 #> cortime(VIS02,VIS09)    24271 #> cortime(VIS03,VIS09)    24686 #> cortime(VIS04,VIS09)    24026 #> cortime(VIS05,VIS09)    23467 #> cortime(VIS06,VIS09)    25686 #> cortime(VIS07,VIS09)    24723 #> cortime(VIS08,VIS09)    24237 #> cortime(VIS01,VIS10)    24788 #> cortime(VIS02,VIS10)    25198 #> cortime(VIS03,VIS10)    24858 #> cortime(VIS04,VIS10)    23634 #> cortime(VIS05,VIS10)    23341 #> cortime(VIS06,VIS10)    23791 #> cortime(VIS07,VIS10)    24641 #> cortime(VIS08,VIS10)    22307 #> cortime(VIS09,VIS10)    24701 #>  #> Regression Coefficients: #>                      Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS #> Intercept                7.27      0.27     6.74     7.80 1.00    53640 #> BCVA_BL                  0.00      0.00    -0.01     0.01 1.00    84617 #> AVISITVIS02              0.05      0.09    -0.13     0.23 1.00    18165 #> AVISITVIS03              0.12      0.10    -0.07     0.31 1.00    18271 #> AVISITVIS04              0.12      0.10    -0.07     0.32 1.00    18320 #> AVISITVIS05              0.11      0.10    -0.08     0.30 1.00    17714 #> AVISITVIS06              0.19      0.10    -0.01     0.39 1.00    17322 #> AVISITVIS07              0.02      0.11    -0.19     0.23 1.00    18801 #> AVISITVIS08              0.14      0.10    -0.06     0.35 1.00    18460 #> AVISITVIS09              0.25      0.11     0.03     0.47 1.00    21095 #> AVISITVIS10              0.02      0.12    -0.20     0.25 1.00    21735 #> RACEBlack                0.01      0.09    -0.16     0.18 1.00    47505 #> RACEWhite               -0.14      0.08    -0.29     0.02 1.00    47750 #> AVISITVIS01:ARMCDTRT     0.05      0.13    -0.21     0.31 1.00    11737 #> AVISITVIS02:ARMCDTRT    -0.01      0.13    -0.26     0.25 1.00    14570 #> AVISITVIS03:ARMCDTRT    -0.01      0.14    -0.28     0.26 1.00    14593 #> AVISITVIS04:ARMCDTRT    -0.06      0.14    -0.34     0.21 1.00    14824 #> AVISITVIS05:ARMCDTRT    -0.12      0.13    -0.38     0.14 1.00    14287 #> AVISITVIS06:ARMCDTRT    -0.27      0.13    -0.53    -0.00 1.00    14099 #> AVISITVIS07:ARMCDTRT     0.14      0.14    -0.15     0.41 1.00    16235 #> AVISITVIS08:ARMCDTRT    -0.04      0.14    -0.32     0.24 1.00    14965 #> AVISITVIS09:ARMCDTRT     0.01      0.16    -0.30     0.32 1.00    16977 #> AVISITVIS10:ARMCDTRT     0.12      0.16    -0.20     0.43 1.00    17595 #> sigma_AVISITVIS01        0.92      0.02     0.88     0.96 1.00    23844 #> sigma_AVISITVIS02        0.92      0.02     0.87     0.96 1.00    26609 #> sigma_AVISITVIS03        0.96      0.02     0.92     1.01 1.00    27236 #> sigma_AVISITVIS04        0.96      0.02     0.92     1.00 1.00    27047 #> sigma_AVISITVIS05        0.91      0.02     0.87     0.95 1.00    27612 #> sigma_AVISITVIS06        0.91      0.02     0.86     0.95 1.00    26448 #> sigma_AVISITVIS07        0.94      0.02     0.90     0.99 1.00    28187 #> sigma_AVISITVIS08        0.92      0.02     0.88     0.97 1.00    27560 #> sigma_AVISITVIS09        0.98      0.02     0.93     1.02 1.00    29896 #> sigma_AVISITVIS10        0.96      0.03     0.91     1.01 1.00    31353 #>                      Tail_ESS #> Intercept               22503 #> BCVA_BL                 22111 #> AVISITVIS02             21902 #> AVISITVIS03             22699 #> AVISITVIS04             23308 #> AVISITVIS05             21610 #> AVISITVIS06             21869 #> AVISITVIS07             22286 #> AVISITVIS08             23739 #> AVISITVIS09             23571 #> AVISITVIS10             23915 #> RACEBlack               25965 #> RACEWhite               27488 #> AVISITVIS01:ARMCDTRT    19550 #> AVISITVIS02:ARMCDTRT    20053 #> AVISITVIS03:ARMCDTRT    20491 #> AVISITVIS04:ARMCDTRT    21692 #> AVISITVIS05:ARMCDTRT    21524 #> AVISITVIS06:ARMCDTRT    21221 #> AVISITVIS07:ARMCDTRT    21230 #> AVISITVIS08:ARMCDTRT    20811 #> AVISITVIS09:ARMCDTRT    21823 #> AVISITVIS10:ARMCDTRT    22135 #> sigma_AVISITVIS01       23146 #> sigma_AVISITVIS02       23958 #> sigma_AVISITVIS03       23743 #> sigma_AVISITVIS04       23701 #> sigma_AVISITVIS05       22645 #> sigma_AVISITVIS06       23962 #> sigma_AVISITVIS07       23653 #> sigma_AVISITVIS08       23029 #> sigma_AVISITVIS09       22924 #> sigma_AVISITVIS10       23092 #>  #> Draws were sampled using sampling(NUTS). For each parameter, Bulk_ESS #> and Tail_ESS are effective sample size measures, and Rhat is the potential #> scale reduction factor on split chains (at convergence, Rhat = 1)."},{"path":"/articles/bcva.html","id":"frequentist-model","dir":"Articles","previous_headings":"Fitting MMRMs","what":"Frequentist model","title":"BCVA data comparison between Bayesian and frequentist MMRMs","text":"formula frequentist model , except different syntax specifying covariance structure MMRM. fit model . parameter summaries frequentist model .","code":"> f_mmrm_fit <- mmrm::mmrm( +   formula = BCVA_CHG ~ BCVA_BL + ARMCD:AVISIT + AVISIT + RACE + +     us(AVISIT | USUBJID), +   data = bcva_data + ) > summary(f_mmrm_fit) #> mmrm fit #>  #> Formula:     BCVA_CHG ~ BCVA_BL + ARMCD:AVISIT + AVISIT + RACE + us(AVISIT |   #>     USUBJID) #> Data:        bcva_data (used 8605 observations from 1000 subjects with maximum  #> 10 timepoints) #> Covariance:  unstructured (55 variance parameters) #> Method:      Satterthwaite #> Vcov Method: Asymptotic #> Inference:   REML #>  #> Model selection criteria: #>      AIC      BIC   logLik deviance  #>  32181.0  32451.0 -16035.5  32071.0  #>  #> Coefficients:  #>                        Estimate Std. Error         df t value Pr(>|t|)     #> (Intercept)           4.288e+00  1.709e-01  1.065e+03  25.086  < 2e-16 *** #> BCVA_BL              -9.933e-04  2.156e-03  9.906e+02  -0.461    0.645     #> AVISITVIS02           2.810e-01  7.067e-02  9.995e+02   3.976 7.51e-05 *** #> AVISITVIS03           4.573e-01  6.716e-02  9.747e+02   6.809 1.71e-11 *** #> AVISITVIS04           8.570e-01  7.637e-02  9.795e+02  11.221  < 2e-16 *** #> AVISITVIS05           9.638e-01  8.634e-02  9.629e+02  11.163  < 2e-16 *** #> AVISITVIS06           1.334e+00  8.650e-02  9.450e+02  15.421  < 2e-16 *** #> AVISITVIS07           1.417e+00  1.071e-01  8.698e+02  13.233  < 2e-16 *** #> AVISITVIS08           1.711e+00  1.145e-01  8.467e+02  14.943  < 2e-16 *** #> AVISITVIS09           1.996e+00  1.283e-01  7.784e+02  15.550  < 2e-16 *** #> AVISITVIS10           2.101e+00  1.400e-01  7.025e+02  15.003  < 2e-16 *** #> RACEBlack             1.038e+00  5.496e-02  1.011e+03  18.892  < 2e-16 *** #> RACEWhite             2.005e+00  5.198e-02  9.769e+02  38.574  < 2e-16 *** #> AVISITVIS01:ARMCDTRT  5.391e-01  6.281e-02  9.859e+02   8.583  < 2e-16 *** #> AVISITVIS02:ARMCDTRT  7.248e-01  7.984e-02  9.803e+02   9.078  < 2e-16 *** #> AVISITVIS03:ARMCDTRT  1.012e+00  9.163e-02  9.638e+02  11.039  < 2e-16 *** #> AVISITVIS04:ARMCDTRT  1.104e+00  1.004e-01  9.653e+02  11.003  < 2e-16 *** #> AVISITVIS05:ARMCDTRT  1.383e+00  1.147e-01  9.505e+02  12.065  < 2e-16 *** #> AVISITVIS06:ARMCDTRT  1.630e+00  1.189e-01  9.157e+02  13.715  < 2e-16 *** #> AVISITVIS07:ARMCDTRT  2.016e+00  1.382e-01  8.262e+02  14.592  < 2e-16 *** #> AVISITVIS08:ARMCDTRT  2.347e+00  1.474e-01  8.041e+02  15.924  < 2e-16 *** #> AVISITVIS09:ARMCDTRT  2.658e+00  1.644e-01  7.277e+02  16.173  < 2e-16 *** #> AVISITVIS10:ARMCDTRT  3.072e+00  1.815e-01  6.621e+02  16.929  < 2e-16 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Covariance estimate: #>        VIS01   VIS02   VIS03   VIS04   VIS05  VIS06   VIS07   VIS08   VIS09 #> VIS01 0.9712  0.0630  0.4371  0.3314  0.3055 0.4686  0.1324  0.1019  0.0610 #> VIS02 0.0630  1.5618  0.0871  0.2685  0.2635 0.4636  0.2180  0.2776 -0.0153 #> VIS03 0.4371  0.0871  2.0221 -0.0216 -0.0189 0.1102 -0.0048 -0.0993 -0.1322 #> VIS04 0.3314  0.2685 -0.0216  2.4114  1.0476 1.1409  0.4625  0.5660  0.4086 #> VIS05 0.3055  0.2635 -0.0189  1.0476  3.0915 1.2592  0.6909  0.6307  0.3593 #> VIS06 0.4686  0.4636  0.1102  1.1409  1.2592 3.1852  0.7539  0.6093  0.6821 #> VIS07 0.1324  0.2180 -0.0048  0.4625  0.6909 0.7539  3.9273  0.2306  0.0723 #> VIS08 0.1019  0.2776 -0.0993  0.5660  0.6307 0.6093  0.2306  4.3272  0.2682 #> VIS09 0.0610 -0.0153 -0.1322  0.4086  0.3593 0.6821  0.0723  0.2682  4.8635 #> VIS10 0.0585  0.3762  0.0719  1.1481  0.9999 1.2559  0.3017  0.4658  0.4138 #>        VIS10 #> VIS01 0.0585 #> VIS02 0.3762 #> VIS03 0.0719 #> VIS04 1.1481 #> VIS05 0.9999 #> VIS06 1.2559 #> VIS07 0.3017 #> VIS08 0.4658 #> VIS09 0.4138 #> VIS10 5.3520"},{"path":"/articles/bcva.html","id":"comparison","dir":"Articles","previous_headings":"","what":"Comparison","title":"BCVA data comparison between Bayesian and frequentist MMRMs","text":"section compares Bayesian posterior parameter estimates brms.mmrm frequentist parameter estimates mmrm package.","code":""},{"path":"/articles/bcva.html","id":"extract-estimates-from-bayesian-model","dir":"Articles","previous_headings":"Comparison","what":"Extract estimates from Bayesian model","title":"BCVA data comparison between Bayesian and frequentist MMRMs","text":"extract standardize Bayesian estimates.","code":"> b_mmrm_draws <- b_mmrm_fit |> +   as_draws_df() > visit_levels <- sort(unique(as.character(bcva_data$AVISIT))) > for (level in visit_levels) { +   name <- paste0(\"b_sigma_AVISIT\", level) +   b_mmrm_draws[[name]] <- exp(b_mmrm_draws[[name]]) + } > b_mmrm_summary <- b_mmrm_draws |> +   summarize_draws() |> +   select(variable, mean, sd) |> +   filter(!(variable %in% c(\"lprior\", \"lp__\"))) |> +   rename(bayes_estimate = mean, bayes_se = sd) |> +   mutate( +     variable = variable |> +       tolower() |> +       gsub(pattern = \"b_\", replacement = \"\") |> +       gsub(pattern = \"b_sigma_AVISIT\", replacement = \"sigma_\") |> +       gsub(pattern = \"cortime\", replacement = \"correlation\") |> +       gsub(pattern = \"__\", replacement = \"_\") +   )"},{"path":"/articles/bcva.html","id":"extract-estimates-from-frequentist-model","dir":"Articles","previous_headings":"Comparison","what":"Extract estimates from frequentist model","title":"BCVA data comparison between Bayesian and frequentist MMRMs","text":"extract standardize frequentist estimates.","code":"> f_mmrm_fixed <- summary(f_mmrm_fit)$coefficients |> +   as_tibble(rownames = \"variable\") |> +   mutate(variable = tolower(variable)) |> +   mutate(variable = gsub(\"(\", \"\", variable, fixed = TRUE)) |> +   mutate(variable = gsub(\")\", \"\", variable, fixed = TRUE)) |> +   rename(freq_estimate = Estimate, freq_se = `Std. Error`) |> +   select(variable, freq_estimate, freq_se) > f_mmrm_variance <- tibble( +   variable = paste0(\"sigma_AVISIT\", visit_levels) |> tolower(), +   freq_estimate = sqrt(diag(f_mmrm_fit$cov)) + ) > f_diagonal_factor <- diag(1 / sqrt(diag(f_mmrm_fit$cov))) > f_corr_matrix <- f_diagonal_factor %*% f_mmrm_fit$cov %*% f_diagonal_factor > colnames(f_corr_matrix) <- visit_levels > f_mmrm_correlation <- f_corr_matrix |> +   as.data.frame() |> +   as_tibble() |> +   mutate(x1 = visit_levels) |> +   pivot_longer( +     cols = -any_of(\"x1\"), +     names_to = \"x2\", +     values_to = \"freq_estimate\" +   ) |> +   filter( +     as.numeric(gsub(\"[^0-9]\", \"\", x1)) < as.numeric(gsub(\"[^0-9]\", \"\", x2)) +   ) |> +   mutate(variable = sprintf(\"correlation_%s_%s\", x1, x2)) |> +   select(variable, freq_estimate) > f_mmrm_summary <- bind_rows( +   f_mmrm_fixed, +   f_mmrm_variance, +   f_mmrm_correlation + ) |> +   mutate(variable = gsub(\"\\\\s+\", \"\", variable) |> tolower())"},{"path":"/articles/bcva.html","id":"Summary","dir":"Articles","previous_headings":"Comparison","what":"Summary","title":"BCVA data comparison between Bayesian and frequentist MMRMs","text":"first table summarizes parameter estimates model differences estimates (Bayesian minus frequentist). second table shows standard errors estimates differences standard errors. table, “Relative” column shows relative difference (difference divided frequentist quantity). different statistical paradigms estimation procedures, especially regarding covariance parameters, realistic expect Bayesian frequentist approaches yield virtually identical results. Nevertheless, absolute relative differences table show strong agreement brms.mmrm mmrm. Table 4. Comparison parameter estimates Bayesian frequentist MMRMs. Table 5. Comparison parameter standard errors Bayesian frequentist MMRMs.","code":"> b_f_comparison <- full_join( +   x = b_mmrm_summary, +   y = f_mmrm_summary, +   by = \"variable\" + ) |> +   mutate( +     diff_estimate = bayes_estimate - freq_estimate, +     diff_relative_estimate = diff_estimate / freq_estimate, +     diff_se = bayes_se - freq_se, +     diff_relative_se = diff_se / freq_se +   ) |> +   select(variable, ends_with(\"estimate\"), ends_with(\"se\")) > table_estimates <- b_f_comparison |> +   select(variable, ends_with(\"estimate\")) > gt(table_estimates) |> +   fmt_number(decimals = 4) |> +   tab_caption( +     caption = md( +       paste( +         \"Table 4. Comparison of parameter estimates between\", +         \"Bayesian and frequentist MMRMs.\" +       ) +     ) +   ) |> +   cols_label( +     variable = \"Variable\", +     bayes_estimate = \"Bayesian\", +     freq_estimate = \"Frequentist\", +     diff_estimate = \"Difference\", +     diff_relative_estimate = \"Relative\" +   ) > table_se <- b_f_comparison |> +   select(variable, ends_with(\"se\")) |> +   filter(!is.na(freq_se)) > gt(table_se) |> +   fmt_number(decimals = 4) |> +   tab_caption( +     caption = md( +       paste( +         \"Table 5. Comparison of parameter standard errors between\", +         \"Bayesian and frequentist MMRMs.\" +       ) +     ) +   ) |> +   cols_label( +     variable = \"Variable\", +     bayes_se = \"Bayesian\", +     freq_se = \"Frequentist\", +     diff_se = \"Difference\", +     diff_relative_se = \"Relative\" +   )"},{"path":"/articles/fev1.html","id":"about","dir":"Articles","previous_headings":"","what":"About","title":"FEV1 data comparison between Bayesian and frequentist MMRMs","text":"vignette provides example comparison Bayesian MMRM fit, obtained brms.mmrm::brm_model(), frequentist MMRM fit, obtained mmrm::mmrm(). overview parameter estimates differences type MMRM given summary (Tables 4 5) end.","code":""},{"path":"/articles/fev1.html","id":"prerequisites","dir":"Articles","previous_headings":"","what":"Prerequisites","title":"FEV1 data comparison between Bayesian and frequentist MMRMs","text":"comparison workflow requires following packages. set seed random number generator ensure statistical reproducibility.","code":"> packages <- c( +   \"dplyr\", +   \"tidyr\", +   \"ggplot2\", +   \"gt\", +   \"gtsummary\", +   \"purrr\", +   \"parallel\", +   \"brms.mmrm\", +   \"mmrm\", +   \"posterior\" + ) > invisible(lapply(packages, library, character.only = TRUE)) > set.seed(123L)"},{"path":[]},{"path":"/articles/fev1.html","id":"pre-processing","dir":"Articles","previous_headings":"Data","what":"Pre-processing","title":"FEV1 data comparison between Bayesian and frequentist MMRMs","text":"analysis exercise uses fev_dat dataset contained mmrm-package: artificial (simulated) dataset clinical trial investigating effect active treatment FEV1 (forced expired volume one second), compared placebo. FEV1 measure quickly lungs can emptied low levels may indicate chronic obstructive pulmonary disease (COPD). dataset tibble 800 rows 7 variables: USUBJID (subject ID), AVISIT (visit number), ARMCD (treatment, TRT PBO), RACE (3-category race), SEX (sex), FEV1_BL (FEV1 baseline, %), FEV1 (FEV1 study visits), WEIGHT (weighting variable). primary endpoint analysis change baseline FEV1, derive denote FEV1_CHG. rest pre-processing steps create factors study arm visit apply usual checking standardization steps brms.mmrm::brm_data(). following table shows first rows dataset. Table 1. First rows pre-processed fev_dat dataset.","code":"> data(fev_data, package = \"mmrm\") > fev_data <- fev_data |> +   mutate(\"FEV1_CHG\" = FEV1 - FEV1_BL) > fev_data <- brm_data( +   data = fev_data, +   outcome = \"FEV1_CHG\", +   role = \"change\", +   group = \"ARMCD\", +   time = \"AVISIT\", +   patient = \"USUBJID\", +   baseline = \"FEV1_BL\", +   reference_group = \"PBO\", +   covariates = c(\"RACE\", \"SEX\") + ) |> +   mutate(ARMCD = factor(ARMCD), AVISIT = factor(AVISIT)) > head(fev_data) |> +   gt() |> +   tab_caption(caption = md(\"Table 1. First rows of the pre-processed `fev_dat` dataset.\"))"},{"path":"/articles/fev1.html","id":"descriptive-statistics","dir":"Articles","previous_headings":"Data","what":"Descriptive statistics","title":"FEV1 data comparison between Bayesian and frequentist MMRMs","text":"Table baseline characteristics: Table 2. Baseline characteristics. Table change baseline FEV1 52 weeks: Table 3. Change baseline. following figure shows primary endpoint four study visits data. Figure 1. Change baseline FEV1 4 visit time points.","code":"> fev_data |> +   select(ARMCD, USUBJID, SEX, RACE, FEV1_BL) |> +   distinct() |> +   select(-USUBJID) |> +   tbl_summary( +     by = c(ARMCD), +     statistic = list( +       all_continuous() ~ \"{mean} ({sd})\", +       all_categorical() ~ \"{n} / {N} ({p}%)\" +     ) +   ) |> +   modify_caption(\"Table 2. Baseline characteristics.\") > fev_data |> +   pull(AVISIT) |> +   unique() |> +   sort() |> +   purrr::map( +     .f = ~ fev_data |> +       filter(AVISIT %in% .x) |> +       tbl_summary( +         by = ARMCD, +         include = FEV1_CHG, +         type = FEV1_CHG ~ \"continuous2\", +         statistic = FEV1_CHG ~ c( +           \"{mean} ({sd})\", +           \"{median} ({p25}, {p75})\", +           \"{min}, {max}\" +         ), +         label = list(FEV1_CHG = paste(\"Visit \", .x)) +       ) +   ) |> +   tbl_stack(quiet = TRUE) |> +   modify_caption(\"Table 3. Change from baseline.\") > fev_data |> +   group_by(ARMCD) |> +   ggplot(aes(x = AVISIT, y = FEV1_CHG, fill = factor(ARMCD))) + +   geom_hline(yintercept = 0, col = \"grey\", linewidth = 1.2) + +   geom_boxplot(na.rm = TRUE) + +   labs( +     x = \"Visit\", +     y = \"Change from baseline in FEV1\", +     fill = \"Treatment\" +   ) + +   scale_fill_manual(values = c(\"darkgoldenrod2\", \"coral2\")) + +   theme_bw()"},{"path":[]},{"path":"/articles/fev1.html","id":"bayesian-model","dir":"Articles","previous_headings":"Fitting MMRMs","what":"Bayesian model","title":"FEV1 data comparison between Bayesian and frequentist MMRMs","text":"formula Bayesian model includes additive effects baseline, study visit, race, sex, study-arm--visit interaction. fit model using brms.mmrm::brm_model(). ensure good basis comparison frequentist model, put extremely diffuse prior intercept. parameters already diffuse flexible priors default. posterior summary model parameters, including fixed effects pairwise correlation among visits within patients.","code":"> b_mmrm_formula <- brm_formula( +   data = fev_data, +   intercept = TRUE, +   baseline = TRUE, +   group = FALSE, +   time = TRUE, +   baseline_time = FALSE, +   group_time = TRUE, +   correlation = \"unstructured\" + ) > print(b_mmrm_formula) #> FEV1_CHG ~ FEV1_BL + ARMCD:AVISIT + AVISIT + RACE + SEX + unstr(time = AVISIT, gr = USUBJID)  #> sigma ~ 0 + AVISIT > b_mmrm_fit <- brm_model( +   data = filter(fev_data, !is.na(FEV1_CHG)), +   formula = b_mmrm_formula, +   prior = brms::prior(class = \"Intercept\", prior = \"student_t(3, 0, 1000)\"), +   iter = 10000, +   warmup = 2000, +   chains = 4, +   cores = 1 + (detectCores() > 1), +   refresh = 0 + ) > summary(b_mmrm_fit) #>  Family: gaussian  #>   Links: mu = identity; sigma = log  #> Formula: FEV1_CHG ~ FEV1_BL + ARMCD:AVISIT + AVISIT + RACE + SEX + unstr(time = AVISIT, gr = USUBJID)  #>          sigma ~ 0 + AVISIT #>    Data: data[!is.na(data[[attr(data, \"brm_outcome\")]]), ] (Number of observations: 537)  #>   Draws: 4 chains, each with iter = 10000; warmup = 2000; thin = 1; #>          total post-warmup draws = 32000 #>  #> Correlation Structures: #>                    Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS #> cortime(VIS1,VIS2)     0.36      0.08     0.19     0.51 1.00    59681    25267 #> cortime(VIS1,VIS3)     0.14      0.10    -0.06     0.33 1.00    60878    24816 #> cortime(VIS2,VIS3)     0.04      0.10    -0.16     0.23 1.00    59208    23789 #> cortime(VIS1,VIS4)     0.17      0.11    -0.06     0.38 1.00    57295    25702 #> cortime(VIS2,VIS4)     0.11      0.09    -0.06     0.28 1.00    58914    25513 #> cortime(VIS3,VIS4)     0.01      0.10    -0.19     0.21 1.00    52906    23211 #>  #> Regression Coefficients: #>                            Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS #> Intercept                     24.35      1.42    21.58    27.14 1.00    49544 #> FEV1_BL                       -0.84      0.03    -0.90    -0.79 1.00    66114 #> AVISITVIS2                     4.79      0.82     3.18     6.39 1.00    35068 #> AVISITVIS3                    10.37      0.83     8.75    12.00 1.00    31977 #> AVISITVIS4                    15.20      1.34    12.59    17.83 1.00    35841 #> RACEBlackorAfricanAmerican     1.41      0.58     0.26     2.56 1.00    51999 #> RACEWhite                      5.45      0.62     4.23     6.68 1.00    53854 #> SEXFemale                      0.34      0.51    -0.66     1.34 1.00    60991 #> AVISITVIS1:ARMCDTRT            3.99      1.07     1.89     6.09 1.00    32773 #> AVISITVIS2:ARMCDTRT            3.93      0.83     2.29     5.56 1.00    54328 #> AVISITVIS3:ARMCDTRT            2.98      0.68     1.64     4.32 1.00    60635 #> AVISITVIS4:ARMCDTRT            4.39      1.68     1.06     7.68 1.00    47093 #> sigma_AVISITVIS1               1.83      0.06     1.71     1.95 1.00    59887 #> sigma_AVISITVIS2               1.59      0.06     1.47     1.71 1.00    56189 #> sigma_AVISITVIS3               1.33      0.06     1.21     1.46 1.00    64405 #> sigma_AVISITVIS4               2.28      0.06     2.16     2.41 1.00    64076 #>                            Tail_ESS #> Intercept                     25214 #> FEV1_BL                       22810 #> AVISITVIS2                    26636 #> AVISITVIS3                    24889 #> AVISITVIS4                    25332 #> RACEBlackorAfricanAmerican    25640 #> RACEWhite                     27046 #> SEXFemale                     24915 #> AVISITVIS1:ARMCDTRT           26664 #> AVISITVIS2:ARMCDTRT           23415 #> AVISITVIS3:ARMCDTRT           22427 #> AVISITVIS4:ARMCDTRT           25813 #> sigma_AVISITVIS1              25393 #> sigma_AVISITVIS2              24131 #> sigma_AVISITVIS3              24263 #> sigma_AVISITVIS4              23997 #>  #> Draws were sampled using sampling(NUTS). For each parameter, Bulk_ESS #> and Tail_ESS are effective sample size measures, and Rhat is the potential #> scale reduction factor on split chains (at convergence, Rhat = 1)."},{"path":"/articles/fev1.html","id":"frequentist-model","dir":"Articles","previous_headings":"Fitting MMRMs","what":"Frequentist model","title":"FEV1 data comparison between Bayesian and frequentist MMRMs","text":"formula frequentist model , except different syntax specifying covariance structure MMRM. fit model . parameter summaries frequentist model .","code":"> f_mmrm_fit <- mmrm::mmrm( +   formula = FEV1_CHG ~ FEV1_BL + ARMCD:AVISIT + AVISIT + RACE + SEX + +     us(AVISIT | USUBJID), +   data = fev_data + ) > summary(f_mmrm_fit) #> mmrm fit #>  #> Formula:      #> FEV1_CHG ~ FEV1_BL + ARMCD:AVISIT + AVISIT + RACE + SEX + us(AVISIT |   #>     USUBJID) #> Data:        fev_data (used 537 observations from 197 subjects with maximum 4  #> timepoints) #> Covariance:  unstructured (10 variance parameters) #> Method:      Satterthwaite #> Vcov Method: Asymptotic #> Inference:   REML #>  #> Model selection criteria: #>      AIC      BIC   logLik deviance  #>   3381.4   3414.2  -1680.7   3361.4  #>  #> Coefficients:  #>                                Estimate Std. Error        df t value Pr(>|t|) #> (Intercept)                    24.35372    1.40754 257.97000  17.302  < 2e-16 #> FEV1_BL                        -0.84022    0.02777 190.27000 -30.251  < 2e-16 #> AVISITVIS2                      4.79036    0.79848 144.82000   5.999 1.51e-08 #> AVISITVIS3                     10.36601    0.81318 157.08000  12.748  < 2e-16 #> AVISITVIS4                     15.19231    1.30857 139.25000  11.610  < 2e-16 #> RACEBlack or African American   1.41921    0.57874 169.56000   2.452 0.015211 #> RACEWhite                       5.45679    0.61626 157.54000   8.855 1.65e-15 #> SEXFemale                       0.33812    0.49273 166.43000   0.686 0.493529 #> AVISITVIS1:ARMCDTRT             3.98329    1.04540 142.32000   3.810 0.000206 #> AVISITVIS2:ARMCDTRT             3.93076    0.81351 142.26000   4.832 3.46e-06 #> AVISITVIS3:ARMCDTRT             2.98372    0.66567 129.61000   4.482 1.61e-05 #> AVISITVIS4:ARMCDTRT             4.40400    1.66049 132.88000   2.652 0.008970 #>                                   #> (Intercept)                   *** #> FEV1_BL                       *** #> AVISITVIS2                    *** #> AVISITVIS3                    *** #> AVISITVIS4                    *** #> RACEBlack or African American *   #> RACEWhite                     *** #> SEXFemale                         #> AVISITVIS1:ARMCDTRT           *** #> AVISITVIS2:ARMCDTRT           *** #> AVISITVIS3:ARMCDTRT           *** #> AVISITVIS4:ARMCDTRT           **  #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Covariance estimate: #>         VIS1    VIS2    VIS3    VIS4 #> VIS1 37.8301 11.3255  3.4796 10.6844 #> VIS2 11.3255 23.5476  0.7760  5.5103 #> VIS3  3.4796  0.7760 13.8037  0.5683 #> VIS4 10.6844  5.5103  0.5683 92.9625"},{"path":"/articles/fev1.html","id":"comparison","dir":"Articles","previous_headings":"","what":"Comparison","title":"FEV1 data comparison between Bayesian and frequentist MMRMs","text":"section compares Bayesian posterior parameter estimates brms.mmrm frequentist parameter estimates mmrm package.","code":""},{"path":"/articles/fev1.html","id":"extract-estimates-from-bayesian-model","dir":"Articles","previous_headings":"Comparison","what":"Extract estimates from Bayesian model","title":"FEV1 data comparison between Bayesian and frequentist MMRMs","text":"extract standardize Bayesian estimates.","code":"> b_mmrm_draws <- b_mmrm_fit |> +   as_draws_df() > visit_levels <- sort(unique(as.character(fev_data$AVISIT))) > for (level in visit_levels) { +   name <- paste0(\"b_sigma_AVISIT\", level) +   b_mmrm_draws[[name]] <- exp(b_mmrm_draws[[name]]) + } > b_mmrm_summary <- b_mmrm_draws |> +   summarize_draws() |> +   select(variable, mean, sd) |> +   filter(!(variable %in% c(\"Intercept\", \"lprior\", \"lp__\"))) |> +   rename(bayes_estimate = mean, bayes_se = sd) |> +   mutate( +     variable = variable |> +       tolower() |> +       gsub(pattern = \"b_\", replacement = \"\") |> +       gsub(pattern = \"b_sigma_AVISIT\", replacement = \"sigma_\") |> +       gsub(pattern = \"cortime\", replacement = \"correlation\") |> +       gsub(pattern = \"__\", replacement = \"_\") +   )"},{"path":"/articles/fev1.html","id":"extract-estimates-from-frequentist-model","dir":"Articles","previous_headings":"Comparison","what":"Extract estimates from frequentist model","title":"FEV1 data comparison between Bayesian and frequentist MMRMs","text":"extract standardize frequentist estimates.","code":"> f_mmrm_fixed <- summary(f_mmrm_fit)$coefficients |> +   as_tibble(rownames = \"variable\") |> +   mutate(variable = tolower(variable)) |> +   mutate(variable = gsub(\"(\", \"\", variable, fixed = TRUE)) |> +   mutate(variable = gsub(\")\", \"\", variable, fixed = TRUE)) |> +   rename(freq_estimate = Estimate, freq_se = `Std. Error`) |> +   select(variable, freq_estimate, freq_se) > f_mmrm_variance <- tibble( +   variable = paste0(\"sigma_AVISIT\", visit_levels) |> tolower(), +   freq_estimate = sqrt(diag(f_mmrm_fit$cov)) + ) > f_diagonal_factor <- diag(1 / sqrt(diag(f_mmrm_fit$cov))) > f_corr_matrix <- f_diagonal_factor %*% f_mmrm_fit$cov %*% f_diagonal_factor > colnames(f_corr_matrix) <- visit_levels > f_mmrm_correlation <- f_corr_matrix |> +   as.data.frame() |> +   as_tibble() |> +   mutate(x1 = visit_levels) |> +   pivot_longer( +     cols = -any_of(\"x1\"), +     names_to = \"x2\", +     values_to = \"freq_estimate\" +   ) |> +   filter( +     as.numeric(gsub(\"[^0-9]\", \"\", x1)) < as.numeric(gsub(\"[^0-9]\", \"\", x2)) +   ) |> +   mutate(variable = sprintf(\"correlation_%s_%s\", x1, x2)) |> +   select(variable, freq_estimate) > f_mmrm_summary <- bind_rows( +   f_mmrm_fixed, +   f_mmrm_variance, +   f_mmrm_correlation + ) |> +   mutate(variable = gsub(\"\\\\s+\", \"\", variable) |> tolower())"},{"path":"/articles/fev1.html","id":"Summary","dir":"Articles","previous_headings":"Comparison","what":"Summary","title":"FEV1 data comparison between Bayesian and frequentist MMRMs","text":"first table summarizes parameter estimates model differences estimates (Bayesian minus frequentist). second table shows standard errors estimates differences standard errors. table, “Relative” column shows relative difference (difference divided frequentist quantity). different statistical paradigms estimation procedures, especially regarding covariance parameters, realistic expect Bayesian frequentist approaches yield virtually identical results. Nevertheless, absolute relative differences table show strong agreement brms.mmrm mmrm. Table 4. Comparison parameter estimates Bayesian frequentist MMRMs. Table 5. Comparison parameter standard errors Bayesian frequentist MMRMs.","code":"> b_f_comparison <- full_join( +   x = b_mmrm_summary, +   y = f_mmrm_summary, +   by = \"variable\" + ) |> +   mutate( +     diff_estimate = bayes_estimate - freq_estimate, +     diff_relative_estimate = diff_estimate / freq_estimate, +     diff_se = bayes_se - freq_se, +     diff_relative_se = diff_se / freq_se +   ) |> +   select(variable, ends_with(\"estimate\"), ends_with(\"se\")) > table_estimates <- b_f_comparison |> +   select(variable, ends_with(\"estimate\")) > gt(table_estimates) |> +   fmt_number(decimals = 4) |> +   tab_caption( +     caption = md( +       paste( +         \"Table 4. Comparison of parameter estimates between\", +         \"Bayesian and frequentist MMRMs.\" +       ) +     ) +   ) |> +   cols_label( +     variable = \"Variable\", +     bayes_estimate = \"Bayesian\", +     freq_estimate = \"Frequentist\", +     diff_estimate = \"Difference\", +     diff_relative_estimate = \"Relative\" +   ) > table_se <- b_f_comparison |> +   select(variable, ends_with(\"se\")) |> +   filter(!is.na(freq_se)) > gt(table_se) |> +   fmt_number(decimals = 4) |> +   tab_caption( +     caption = md( +       paste( +         \"Table 5. Comparison of parameter standard errors between\", +         \"Bayesian and frequentist MMRMs.\" +       ) +     ) +   ) |> +   cols_label( +     variable = \"Variable\", +     bayes_se = \"Bayesian\", +     freq_se = \"Frequentist\", +     diff_se = \"Difference\", +     diff_relative_se = \"Relative\" +   )"},{"path":"/articles/fev1.html","id":"session","dir":"Articles","previous_headings":"","what":"Session info","title":"FEV1 data comparison between Bayesian and frequentist MMRMs","text":"","code":"> sessionInfo() #> R version 4.4.0 (2024-04-24) #> Platform: aarch64-apple-darwin20 #> Running under: macOS Sonoma 14.5 #>  #> Matrix products: default #> BLAS:   /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRblas.0.dylib  #> LAPACK: /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.12.0 #>  #> locale: #> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 #>  #> time zone: America/Indiana/Indianapolis #> tzcode source: internal #>  #> attached base packages: #> [1] parallel  stats     graphics  grDevices utils     datasets  methods   #> [8] base      #>  #> other attached packages: #>  [1] posterior_1.5.0      mmrm_0.3.11          brms.mmrm_0.1.0.9005 #>  [4] purrr_1.0.2          gtsummary_1.7.2      gt_0.10.1            #>  [7] ggplot2_3.5.1        tidyr_1.3.1          dplyr_1.1.4          #> [10] knitr_1.46           #>  #> loaded via a namespace (and not attached): #>  [1] tidyselect_1.2.1     svUnit_1.0.6         farver_2.1.2         #>  [4] loo_2.7.0            tidybayes_3.0.6      fastmap_1.1.1        #>  [7] TH.data_1.1-2        tensorA_0.36.2.1     broom.helpers_1.15.0 #> [10] digest_0.6.35        estimability_1.5     lifecycle_1.0.4      #> [13] StanHeaders_2.32.8   processx_3.8.4       survival_3.5-8       #> [16] magrittr_2.0.3       compiler_4.4.0       rlang_1.1.3          #> [19] sass_0.4.9           tools_4.4.0          utf8_1.2.4           #> [22] labeling_0.4.3       bridgesampling_1.1-2 pkgbuild_1.4.4       #> [25] curl_5.2.1           plyr_1.8.9           xml2_1.3.6           #> [28] abind_1.4-5          multcomp_1.4-25      withr_3.0.0          #> [31] grid_4.4.0           stats4_4.4.0         fansi_1.0.6          #> [34] xtable_1.8-4         colorspace_2.1-0     inline_0.3.19        #> [37] emmeans_1.10.1       scales_1.3.0         gtools_3.9.5         #> [40] MASS_7.3-60.2        ggridges_0.5.6       cli_3.6.2            #> [43] mvtnorm_1.2-4        generics_0.1.3       RcppParallel_5.1.7   #> [46] binom_1.1-1.1        reshape2_1.4.4       commonmark_1.9.1     #> [49] rstan_2.32.6         stringr_1.5.1        splines_4.4.0        #> [52] bayesplot_1.11.1     matrixStats_1.3.0    brms_2.21.0          #> [55] vctrs_0.6.5          V8_4.4.2             Matrix_1.7-0         #> [58] sandwich_3.1-0       jsonlite_1.8.8       callr_3.7.6          #> [61] arrayhelpers_1.1-0   ggdist_3.3.2         glue_1.7.0           #> [64] ps_1.7.6             codetools_0.2-20     distributional_0.4.0 #> [67] stringi_1.8.4        gtable_0.3.5         QuickJSR_1.1.3       #> [70] munsell_0.5.1        tibble_3.2.1         pillar_1.9.0         #> [73] htmltools_0.5.8.1    Brobdingnag_1.2-9    TMB_1.9.11           #> [76] R6_2.5.1             Rdpack_2.6           evaluate_0.23        #> [79] lattice_0.22-6       highr_0.10           markdown_1.12        #> [82] rbibutils_2.2.16     backports_1.4.1      trialr_0.1.6         #> [85] rstantools_2.4.0     Rcpp_1.0.12          coda_0.19-4.1        #> [88] gridExtra_2.3        nlme_3.1-164         checkmate_2.3.1      #> [91] xfun_0.43            forcats_1.0.0        zoo_1.8-12           #> [94] pkgconfig_2.0.3"},{"path":"/articles/inference.html","id":"example-data","dir":"Articles","previous_headings":"","what":"Example data","title":"Inference","text":"Throughout vignette, use mmrm package’s fev_data dataset, simulation clinical trial chronic obstructive pulmonary disease (COPD) patients (variable USUBJID) randomized different treatment groups (variable ARMCD) measured across four discrete time points (variable AVISIT). given response variable forced expired volume one second (FEV1), interested FEV1 change baseline time point (derived variable FEV_CHG). vignette, impute missing responses order simplify discussion.","code":"library(dplyr) library(tidyr) data(fev_data, package = \"mmrm\") data <- fev_data |>   group_by(USUBJID) |>   complete(AVISIT) |>   arrange(AVISIT) |>   fill(     any_of(c(\"ARMCD\", \"FEV1_BL\", \"RACE\", \"SEX\", \"WEIGHT\")),     .direction = \"downup\"   ) |>   mutate(FEV1 = na.locf(FEV1, na.rm = FALSE)) |>   mutate(FEV1 = na.locf(FEV1, na.rm = FALSE, fromLast = TRUE)) |>   ungroup() |>   filter(!is.na(FEV1)) |>   mutate(FEV1_CHG = FEV1 - FEV1_BL, USUBJID = as.character(USUBJID)) |>   select(-FEV1) |>   as_tibble() |>   arrange(USUBJID, AVISIT) data #> # A tibble: 788 × 10 #>    USUBJID AVISIT ARMCD RACE        SEX   FEV1_BL WEIGHT VISITN VISITN2 FEV1_CHG #>    <chr>   <fct>  <fct> <fct>       <fct>   <dbl>  <dbl>  <int>   <dbl>    <dbl> #>  1 PT1     VIS1   TRT   Black or A… Fema…    25.3  0.677      1 -0.626     14.7  #>  2 PT1     VIS2   TRT   Black or A… Fema…    25.3  0.801      2  0.184     14.7  #>  3 PT1     VIS3   TRT   Black or A… Fema…    25.3  0.709      3 -0.836     14.7  #>  4 PT1     VIS4   TRT   Black or A… Fema…    25.3  0.809      4  1.60      -4.79 #>  5 PT10    VIS1   PBO   Black or A… Fema…    57.7  0.795      1 -0.394    -12.7  #>  6 PT10    VIS2   PBO   Black or A… Fema…    57.7  0.823      2 -0.0593   -12.7  #>  7 PT10    VIS3   PBO   Black or A… Fema…    57.7  0.594      3  1.10     -12.7  #>  8 PT10    VIS4   PBO   Black or A… Fema…    57.7  0.207      4  0.763    -12.7  #>  9 PT100   VIS1   PBO   Black or A… Fema…    51.8  0.362      1  1.59     -17.2  #> 10 PT100   VIS2   PBO   Black or A… Fema…    51.8  0.404      2  0.0450   -12.5  #> # ℹ 778 more rows"},{"path":"/articles/inference.html","id":"marginal-means-for-clinical-trials","dir":"Articles","previous_headings":"","what":"Marginal means for clinical trials","title":"Inference","text":"According Lenth (2016), marginal means (formerly “least-squares means”) predictions (usually averaged predictions) point reference grid. reference grid declares combinations levels factors interest. clinical trial repeated measures, often interested mean response combination treatment group discrete time point. FEV1 dataset, interested mean FEV1_CHG standard error combination treatment group time point.1 words, want estimate mean FEV1_CHG group \"TRT\" time \"VIS1\", mean FEV1_CHG group \"TRT\" time \"VIS2\", .2 represent goals reference one row per marginal mean interest columns levels factors interest. seldom trivial estimate marginal means. example, following parameterization includes intercept term, additive terms level factor, interactions capture non-additive relationships among factors, continuous covariates, different FEV1_BL slopes different time points. , model coefficient directly corresponds marginal mean interest. Even terms like AVISITVIS2:ARMCDTRT implicitly condition subset data variables involved. accomplish goals, need carefully construct linear transformation maps model coefficients marginal means interest. transformation evaluate contrasts interesting parameters average uninteresting parameters.","code":"reference_grid <- distinct(data, ARMCD, AVISIT) reference_grid #> # A tibble: 8 × 2 #>   ARMCD AVISIT #>   <fct> <fct>  #> 1 TRT   VIS1   #> 2 TRT   VIS2   #> 3 TRT   VIS3   #> 4 TRT   VIS4   #> 5 PBO   VIS1   #> 6 PBO   VIS2   #> 7 PBO   VIS3   #> 8 PBO   VIS4 formula <- FEV1_CHG ~ FEV1_BL * AVISIT + ARMCD * AVISIT + RACE + SEX + WEIGHT formula #> FEV1_CHG ~ FEV1_BL * AVISIT + ARMCD * AVISIT + RACE + SEX + WEIGHT colnames(model.matrix(object = formula, data = data)) #>  [1] \"(Intercept)\"                   \"FEV1_BL\"                       #>  [3] \"AVISITVIS2\"                    \"AVISITVIS3\"                    #>  [5] \"AVISITVIS4\"                    \"ARMCDTRT\"                      #>  [7] \"RACEBlack or African American\" \"RACEWhite\"                     #>  [9] \"SEXFemale\"                     \"WEIGHT\"                        #> [11] \"FEV1_BL:AVISITVIS2\"            \"FEV1_BL:AVISITVIS3\"            #> [13] \"FEV1_BL:AVISITVIS4\"            \"AVISITVIS2:ARMCDTRT\"           #> [15] \"AVISITVIS3:ARMCDTRT\"           \"AVISITVIS4:ARMCDTRT\""},{"path":"/articles/inference.html","id":"existing-capabilities","dir":"Articles","previous_headings":"","what":"Existing capabilities","title":"Inference","text":"brms.mmrm::brm_model() returns fitted brms model, brms already tools posterior inference. combination native functions S3 methods, brms integrates posterior loo, also emmeans estimation marginal means downstream contrasts. Despite existing features brms, brms.mmrm implements custom code transform model coefficients marginal means. reference grids emmeans can condition factors explicitly declared model formula supplied brms, whereas brms.mmrm needs flexibility order support informative prior archetypes (Bedrick et al. (1996), Bedrick et al. (1997), Christensen et al. (2010), Rosner et al. (2021)).","code":""},{"path":"/articles/inference.html","id":"how-brms-mmrm-estimates-marginal-means","dir":"Articles","previous_headings":"","what":"How brms.mmrm estimates marginal means","title":"Inference","text":"transform model coefficients marginal means, brms.mmrm follows technique similar emmeans.3 begin, let us fit simple regression model using complex formula . predictions support marginal mean estimation, condition means continuous covariates FEV1_BL WEIGHT, condition proportional averages levels concomitant factors RACE SEX. following settings emmeans accomplish . Behind scenes, emmeans creates transformation model coefficients marginal means, returns estimates marginal means. information, please consult Lenth (2016), Searle et al. (1980), emmeans package vignettes. replicate technique manually lm() fitted models, first create reference grid define factor levels interest means continuous variables condition . use grid construct model matrix desired interactions continuous variables factors interest. column represents model coefficient, row represents marginal mean interest. want predict “average” SEX RACE across data. Since SEX RACE factors, simply take means variables . Rather, construct model matrix turn factor level dummy variable, average dummy variables across entire dataset. process accounts observed frequencies levels data (ideal passive variables experiment directly control), guarding hidden confounding factors interest (can lead Simpson’s paradox).4 Finally, use transformation matrix map estimated model coefficients estimated marginal means. results extremely close estimated marginal mean emmeans. brms.mmrm follows procedure , Bayesian context. brm_transform_marginal() creates matrix , brm_marginal_draws() uses transform posterior draws brms model coefficients posterior draws marginal means. posterior draws marginal means support estimation treatment effects (via brm_marginal_draws() brm_marginal_summaries()) posterior probabilities treatment effects (via brm_marginal_probabilities()). fine-tune marginal mean estimation procedure niche use cases, can modify transformation returned brm_transform_marginal() supply transform argument brm_marginal_draws().","code":"formula #> FEV1_CHG ~ FEV1_BL * AVISIT + ARMCD * AVISIT + RACE + SEX + WEIGHT model <- lm(formula = formula, data = data) library(emmeans) #> Welcome to emmeans. #> Caution: You lose important information if you filter this package's results. #> See '? untidy' marginals_emmeans <- emmeans(   object = model,   specs = ~ARMCD:AVISIT,   wt.nuis = \"proportional\",   nuisance = c(\"USUBJID\", \"RACE\", \"SEX\") ) |>   as.data.frame() |>   as_tibble() |>   select(ARMCD, AVISIT, emmean) |>   arrange(ARMCD, AVISIT) marginals_emmeans #> # A tibble: 8 × 3 #>   ARMCD AVISIT emmean #>   <fct> <fct>   <dbl> #> 1 PBO   VIS1   -4.60  #> 2 PBO   VIS2   -2.54  #> 3 PBO   VIS3    0.984 #> 4 PBO   VIS4    5.60  #> 5 TRT   VIS1   -1.29  #> 6 TRT   VIS2    0.847 #> 7 TRT   VIS3    3.80  #> 8 TRT   VIS4   10.1 grid <- data |>   mutate(FEV1_BL = mean(FEV1_BL), WEIGHT = mean(WEIGHT)) |>   distinct(ARMCD, AVISIT, FEV1_BL, WEIGHT) |>   arrange(ARMCD, AVISIT) grid #> # A tibble: 8 × 4 #>   ARMCD AVISIT FEV1_BL WEIGHT #>   <fct> <fct>    <dbl>  <dbl> #> 1 PBO   VIS1      40.1  0.519 #> 2 PBO   VIS2      40.1  0.519 #> 3 PBO   VIS3      40.1  0.519 #> 4 PBO   VIS4      40.1  0.519 #> 5 TRT   VIS1      40.1  0.519 #> 6 TRT   VIS2      40.1  0.519 #> 7 TRT   VIS3      40.1  0.519 #> 8 TRT   VIS4      40.1  0.519 transform <- model.matrix(   object = ~ FEV1_BL * AVISIT + ARMCD * AVISIT + WEIGHT,   data = grid ) rownames(transform) <- paste(grid$ARMCD, grid$AVISIT) transform #>          (Intercept)  FEV1_BL AVISITVIS2 AVISITVIS3 AVISITVIS4 ARMCDTRT #> PBO VIS1           1 40.12532          0          0          0        0 #> PBO VIS2           1 40.12532          1          0          0        0 #> PBO VIS3           1 40.12532          0          1          0        0 #> PBO VIS4           1 40.12532          0          0          1        0 #> TRT VIS1           1 40.12532          0          0          0        1 #> TRT VIS2           1 40.12532          1          0          0        1 #> TRT VIS3           1 40.12532          0          1          0        1 #> TRT VIS4           1 40.12532          0          0          1        1 #>             WEIGHT FEV1_BL:AVISITVIS2 FEV1_BL:AVISITVIS3 FEV1_BL:AVISITVIS4 #> PBO VIS1 0.5185461            0.00000            0.00000            0.00000 #> PBO VIS2 0.5185461           40.12532            0.00000            0.00000 #> PBO VIS3 0.5185461            0.00000           40.12532            0.00000 #> PBO VIS4 0.5185461            0.00000            0.00000           40.12532 #> TRT VIS1 0.5185461            0.00000            0.00000            0.00000 #> TRT VIS2 0.5185461           40.12532            0.00000            0.00000 #> TRT VIS3 0.5185461            0.00000           40.12532            0.00000 #> TRT VIS4 0.5185461            0.00000            0.00000           40.12532 #>          AVISITVIS2:ARMCDTRT AVISITVIS3:ARMCDTRT AVISITVIS4:ARMCDTRT #> PBO VIS1                   0                   0                   0 #> PBO VIS2                   0                   0                   0 #> PBO VIS3                   0                   0                   0 #> PBO VIS4                   0                   0                   0 #> TRT VIS1                   0                   0                   0 #> TRT VIS2                   1                   0                   0 #> TRT VIS3                   0                   1                   0 #> TRT VIS4                   0                   0                   1 #> attr(,\"assign\") #>  [1] 0 1 2 2 2 3 4 5 5 5 6 6 6 #> attr(,\"contrasts\") #> attr(,\"contrasts\")$AVISIT #> [1] \"contr.treatment\" #>  #> attr(,\"contrasts\")$ARMCD #> [1] \"contr.treatment\" proportional_factors <- data |>   model.matrix(object = ~ 0 + SEX + RACE) |>   colMeans() |>   t() proportional_factors #>        SEXMale SEXFemale RACEBlack or African American RACEWhite #> [1,] 0.4670051 0.5329949                     0.3756345 0.2690355 transform <- transform |>   bind_cols(proportional_factors) |>   as.matrix() transform <- transform[, names(coef(model))] rownames(transform) <- paste(grid$ARMCD, grid$AVISIT) transform #>          (Intercept)  FEV1_BL AVISITVIS2 AVISITVIS3 AVISITVIS4 ARMCDTRT #> PBO VIS1           1 40.12532          0          0          0        0 #> PBO VIS2           1 40.12532          1          0          0        0 #> PBO VIS3           1 40.12532          0          1          0        0 #> PBO VIS4           1 40.12532          0          0          1        0 #> TRT VIS1           1 40.12532          0          0          0        1 #> TRT VIS2           1 40.12532          1          0          0        1 #> TRT VIS3           1 40.12532          0          1          0        1 #> TRT VIS4           1 40.12532          0          0          1        1 #>          RACEBlack or African American RACEWhite SEXFemale    WEIGHT #> PBO VIS1                     0.3756345 0.2690355 0.5329949 0.5185461 #> PBO VIS2                     0.3756345 0.2690355 0.5329949 0.5185461 #> PBO VIS3                     0.3756345 0.2690355 0.5329949 0.5185461 #> PBO VIS4                     0.3756345 0.2690355 0.5329949 0.5185461 #> TRT VIS1                     0.3756345 0.2690355 0.5329949 0.5185461 #> TRT VIS2                     0.3756345 0.2690355 0.5329949 0.5185461 #> TRT VIS3                     0.3756345 0.2690355 0.5329949 0.5185461 #> TRT VIS4                     0.3756345 0.2690355 0.5329949 0.5185461 #>          FEV1_BL:AVISITVIS2 FEV1_BL:AVISITVIS3 FEV1_BL:AVISITVIS4 #> PBO VIS1            0.00000            0.00000            0.00000 #> PBO VIS2           40.12532            0.00000            0.00000 #> PBO VIS3            0.00000           40.12532            0.00000 #> PBO VIS4            0.00000            0.00000           40.12532 #> TRT VIS1            0.00000            0.00000            0.00000 #> TRT VIS2           40.12532            0.00000            0.00000 #> TRT VIS3            0.00000           40.12532            0.00000 #> TRT VIS4            0.00000            0.00000           40.12532 #>          AVISITVIS2:ARMCDTRT AVISITVIS3:ARMCDTRT AVISITVIS4:ARMCDTRT #> PBO VIS1                   0                   0                   0 #> PBO VIS2                   0                   0                   0 #> PBO VIS3                   0                   0                   0 #> PBO VIS4                   0                   0                   0 #> TRT VIS1                   0                   0                   0 #> TRT VIS2                   1                   0                   0 #> TRT VIS3                   0                   1                   0 #> TRT VIS4                   0                   0                   1 marginals_custom <- transform %*% coef(model) marginals_custom #>                [,1] #> PBO VIS1 -4.5998295 #> PBO VIS2 -2.5445943 #> PBO VIS3  0.9841880 #> PBO VIS4  5.6013241 #> TRT VIS1 -1.2858526 #> TRT VIS2  0.8466639 #> TRT VIS3  3.8011416 #> TRT VIS4 10.0521521 marginals_emmeans |>   bind_cols(custom = as.numeric(marginals_custom)) |>   mutate(difference = custom - emmean) #> # A tibble: 8 × 5 #>   ARMCD AVISIT emmean custom difference #>   <fct> <fct>   <dbl>  <dbl>      <dbl> #> 1 PBO   VIS1   -4.60  -4.60    0        #> 2 PBO   VIS2   -2.54  -2.54   -8.88e-16 #> 3 PBO   VIS3    0.984  0.984  -8.88e-16 #> 4 PBO   VIS4    5.60   5.60    0        #> 5 TRT   VIS1   -1.29  -1.29    2.22e-16 #> 6 TRT   VIS2    0.847  0.847   0        #> 7 TRT   VIS3    3.80   3.80   -8.88e-16 #> 8 TRT   VIS4   10.1   10.1     1.78e-15"},{"path":"/articles/inference.html","id":"subgroup-analysis","dir":"Articles","previous_headings":"","what":"Subgroup analysis","title":"Inference","text":"Subgroup analysis raises important questions nuisance variables averaged, user responsible choosing approach best suits situation. illustrate, suppose SEX pre-specified subgroup. estimating marginal means, now wish condition \"Female\" vs \"Male\" averaging RACE across whole dataset. emmeans, similar calculated marginals_emmeans , now move SEX nuisance specs: may reasonable cases, mitigates kind hidden confounding subgroup variables may otherwise cause Simpson’s paradox. However, subgroup-specific marginal means, may realistic condition single point estimate levels reference grid. example, model regress pregnancy variable, marginal means SEX = \"Male\" always condition pregnancy = 0 instead mean(data$pregnancy). general, may reasonable condition subgroup-specific averages nuisance variables. However, , responsibility investigate understand hidden interactions confounding dataset. https://cran.r-project.org/package=emmeans/vignettes/interactions.html edifying vignette topic. opt subgroup-specific averages nuisance variables brms.mmrm, set average_within_subgroup = TRUE brm_transform_marginal(), supply output transform argument brm_marginal_draws(). replicate brm_transform_marginal(average_within_subgroup = TRUE) scratch, first create reference grid includes subgroup levels. continuous variable, append corresponding subgroup-specific averages grid. Begin creating variable transformation matrix using new grid. sure include subgroup formula exactly appears formula used fit model. Append subgroup-specific averages levels nuisance factors (case, just RACE). Complete transformation matrix assigning correct row names aligning column order model coefficients. Finally, use custom transform matrix estimate subgroup-specific marginal means. averaged FEV1_BL, WEIGHT, RACE within subgroup levels, results differ emmeans.","code":"emmeans(   object = model,   specs = ~SEX:ARMCD:AVISIT,   wt.nuis = \"proportional\",   nuisance = c(\"USUBJID\", \"RACE\") ) #>  SEX    ARMCD AVISIT emmean    SE  df lower.CL upper.CL #>  Male   PBO   VIS1   -5.014 0.752 772   -6.490   -3.538 #>  Female PBO   VIS1   -4.237 0.743 772   -5.696   -2.778 #>  Male   TRT   VIS1   -1.700 0.800 772   -3.270   -0.130 #>  Female TRT   VIS1   -0.923 0.786 772   -2.466    0.620 #>  Male   PBO   VIS2   -2.959 0.752 772   -4.435   -1.482 #>  Female PBO   VIS2   -2.182 0.743 772   -3.640   -0.723 #>  Male   TRT   VIS2    0.433 0.800 772   -1.137    2.003 #>  Female TRT   VIS2    1.209 0.786 772   -0.333    2.752 #>  Male   PBO   VIS3    0.570 0.752 772   -0.906    2.046 #>  Female PBO   VIS3    1.347 0.743 772   -0.112    2.806 #>  Male   TRT   VIS3    3.387 0.800 772    1.816    4.958 #>  Female TRT   VIS3    4.164 0.786 772    2.621    5.707 #>  Male   PBO   VIS4    5.187 0.752 772    3.712    6.663 #>  Female PBO   VIS4    5.964 0.743 772    4.506    7.422 #>  Male   TRT   VIS4    9.638 0.800 772    8.067   11.209 #>  Female TRT   VIS4   10.415 0.786 772    8.872   11.958 #>  #> Results are averaged over the levels of: 1 nuisance factors  #> Confidence level used: 0.95 grid <- data |>   distinct(ARMCD, SEX, AVISIT) |>   arrange(ARMCD, SEX, AVISIT) grid #> # A tibble: 16 × 3 #>    ARMCD SEX    AVISIT #>    <fct> <fct>  <fct>  #>  1 PBO   Male   VIS1   #>  2 PBO   Male   VIS2   #>  3 PBO   Male   VIS3   #>  4 PBO   Male   VIS4   #>  5 PBO   Female VIS1   #>  6 PBO   Female VIS2   #>  7 PBO   Female VIS3   #>  8 PBO   Female VIS4   #>  9 TRT   Male   VIS1   #> 10 TRT   Male   VIS2   #> 11 TRT   Male   VIS3   #> 12 TRT   Male   VIS4   #> 13 TRT   Female VIS1   #> 14 TRT   Female VIS2   #> 15 TRT   Female VIS3   #> 16 TRT   Female VIS4 means <- data |>   group_by(SEX) |>   summarize(FEV1_BL = mean(FEV1_BL), WEIGHT = mean(WEIGHT), .groups = \"drop\") grid <- left_join(x = grid, y = means, by = \"SEX\") grid #> # A tibble: 16 × 5 #>    ARMCD SEX    AVISIT FEV1_BL WEIGHT #>    <fct> <fct>  <fct>    <dbl>  <dbl> #>  1 PBO   Male   VIS1      40.3  0.516 #>  2 PBO   Male   VIS2      40.3  0.516 #>  3 PBO   Male   VIS3      40.3  0.516 #>  4 PBO   Male   VIS4      40.3  0.516 #>  5 PBO   Female VIS1      39.9  0.521 #>  6 PBO   Female VIS2      39.9  0.521 #>  7 PBO   Female VIS3      39.9  0.521 #>  8 PBO   Female VIS4      39.9  0.521 #>  9 TRT   Male   VIS1      40.3  0.516 #> 10 TRT   Male   VIS2      40.3  0.516 #> 11 TRT   Male   VIS3      40.3  0.516 #> 12 TRT   Male   VIS4      40.3  0.516 #> 13 TRT   Female VIS1      39.9  0.521 #> 14 TRT   Female VIS2      39.9  0.521 #> 15 TRT   Female VIS3      39.9  0.521 #> 16 TRT   Female VIS4      39.9  0.521 transform <- model.matrix(   object = ~ FEV1_BL * AVISIT + ARMCD * AVISIT + SEX + WEIGHT,   data = grid ) proportions <- data |>   model.matrix(object = ~ 0 + RACE) |>   as.data.frame() |>   mutate(SEX = data$SEX) |>   group_by(SEX) |>   summarize(across(everything(), mean), .groups = \"drop\") transform <- transform |>   as.data.frame() |>   mutate(SEX = grid$SEX) |>   left_join(y = proportions, by = \"SEX\") |>   select(-SEX) |>   as.matrix() rownames(transform) <- paste(grid$ARMCD, grid$SEX, grid$AVISIT) transform <- transform[, names(coef(model))] transform #>                 (Intercept)  FEV1_BL AVISITVIS2 AVISITVIS3 AVISITVIS4 ARMCDTRT #> PBO Male VIS1             1 40.34215          0          0          0        0 #> PBO Male VIS2             1 40.34215          1          0          0        0 #> PBO Male VIS3             1 40.34215          0          1          0        0 #> PBO Male VIS4             1 40.34215          0          0          1        0 #> PBO Female VIS1           1 39.93534          0          0          0        0 #> PBO Female VIS2           1 39.93534          1          0          0        0 #> PBO Female VIS3           1 39.93534          0          1          0        0 #> PBO Female VIS4           1 39.93534          0          0          1        0 #> TRT Male VIS1             1 40.34215          0          0          0        1 #> TRT Male VIS2             1 40.34215          1          0          0        1 #> TRT Male VIS3             1 40.34215          0          1          0        1 #> TRT Male VIS4             1 40.34215          0          0          1        1 #> TRT Female VIS1           1 39.93534          0          0          0        1 #> TRT Female VIS2           1 39.93534          1          0          0        1 #> TRT Female VIS3           1 39.93534          0          1          0        1 #> TRT Female VIS4           1 39.93534          0          0          1        1 #>                 RACEBlack or African American RACEWhite SEXFemale    WEIGHT #> PBO Male VIS1                       0.4239130 0.2826087         0 0.5161276 #> PBO Male VIS2                       0.4239130 0.2826087         0 0.5161276 #> PBO Male VIS3                       0.4239130 0.2826087         0 0.5161276 #> PBO Male VIS4                       0.4239130 0.2826087         0 0.5161276 #> PBO Female VIS1                     0.3333333 0.2571429         1 0.5206653 #> PBO Female VIS2                     0.3333333 0.2571429         1 0.5206653 #> PBO Female VIS3                     0.3333333 0.2571429         1 0.5206653 #> PBO Female VIS4                     0.3333333 0.2571429         1 0.5206653 #> TRT Male VIS1                       0.4239130 0.2826087         0 0.5161276 #> TRT Male VIS2                       0.4239130 0.2826087         0 0.5161276 #> TRT Male VIS3                       0.4239130 0.2826087         0 0.5161276 #> TRT Male VIS4                       0.4239130 0.2826087         0 0.5161276 #> TRT Female VIS1                     0.3333333 0.2571429         1 0.5206653 #> TRT Female VIS2                     0.3333333 0.2571429         1 0.5206653 #> TRT Female VIS3                     0.3333333 0.2571429         1 0.5206653 #> TRT Female VIS4                     0.3333333 0.2571429         1 0.5206653 #>                 FEV1_BL:AVISITVIS2 FEV1_BL:AVISITVIS3 FEV1_BL:AVISITVIS4 #> PBO Male VIS1              0.00000            0.00000            0.00000 #> PBO Male VIS2             40.34215            0.00000            0.00000 #> PBO Male VIS3              0.00000           40.34215            0.00000 #> PBO Male VIS4              0.00000            0.00000           40.34215 #> PBO Female VIS1            0.00000            0.00000            0.00000 #> PBO Female VIS2           39.93534            0.00000            0.00000 #> PBO Female VIS3            0.00000           39.93534            0.00000 #> PBO Female VIS4            0.00000            0.00000           39.93534 #> TRT Male VIS1              0.00000            0.00000            0.00000 #> TRT Male VIS2             40.34215            0.00000            0.00000 #> TRT Male VIS3              0.00000           40.34215            0.00000 #> TRT Male VIS4              0.00000            0.00000           40.34215 #> TRT Female VIS1            0.00000            0.00000            0.00000 #> TRT Female VIS2           39.93534            0.00000            0.00000 #> TRT Female VIS3            0.00000           39.93534            0.00000 #> TRT Female VIS4            0.00000            0.00000           39.93534 #>                 AVISITVIS2:ARMCDTRT AVISITVIS3:ARMCDTRT AVISITVIS4:ARMCDTRT #> PBO Male VIS1                     0                   0                   0 #> PBO Male VIS2                     0                   0                   0 #> PBO Male VIS3                     0                   0                   0 #> PBO Male VIS4                     0                   0                   0 #> PBO Female VIS1                   0                   0                   0 #> PBO Female VIS2                   0                   0                   0 #> PBO Female VIS3                   0                   0                   0 #> PBO Female VIS4                   0                   0                   0 #> TRT Male VIS1                     0                   0                   0 #> TRT Male VIS2                     1                   0                   0 #> TRT Male VIS3                     0                   1                   0 #> TRT Male VIS4                     0                   0                   1 #> TRT Female VIS1                   0                   0                   0 #> TRT Female VIS2                   1                   0                   0 #> TRT Female VIS3                   0                   1                   0 #> TRT Female VIS4                   0                   0                   1 transform %*% coef(model) #>                       [,1] #> PBO Male VIS1   -5.0812041 #> PBO Male VIS2   -3.0267423 #> PBO Male VIS3    0.5040980 #> PBO Male VIS4    5.1144252 #> PBO Female VIS1 -4.1780538 #> PBO Female VIS2 -2.1221408 #> PBO Female VIS3  1.4048382 #> PBO Female VIS4  6.0279403 #> TRT Male VIS1   -1.7672272 #> TRT Male VIS2    0.3645159 #> TRT Male VIS3    3.3210517 #> TRT Male VIS4    9.5652532 #> TRT Female VIS1 -0.8640769 #> TRT Female VIS2  1.2691174 #> TRT Female VIS3  4.2217919 #> TRT Female VIS4 10.4787682"},{"path":[]},{"path":"/articles/model.html","id":"model","dir":"Articles","previous_headings":"","what":"Model","title":"Model","text":"Let \\(y_1, \\ldots, y_N\\) independent data points observed individual patients clinical trial. \\(y_n\\) numeric vector length \\(T\\), \\(T\\) number discrete time points dataset (e.g. patient visits study protocol). model \\(y_n\\) follows: \\[ \\begin{aligned} y_n \\sim \\text{Multivariate-Normal}\\left ( \\text{mean} = X_n b, \\ \\text{variance} = \\Sigma_n \\right ) \\end{aligned} \\] , \\(X_n\\) fixed effect model matrix patient \\(n\\), specific makeup determined arguments intercept group brm_formula(). \\(b\\) constant-length vector fixed effect parameters. MMRM brms.mmrm distributional model, means uses linear regression structure mean variance multivariate normal likelihood. particular, \\(T \\times T\\) symmetric positive-definite residual covariance matrix \\(\\Sigma_n\\) patient \\(n\\) decomposes follows: \\[ \\begin{aligned} \\Sigma_n &= \\text{diag}(\\sigma_n) \\cdot \\Lambda \\cdot \\text{diag}(\\sigma_n) \\\\ \\sigma_n &= \\text{exp} \\left ( Z_n b_\\sigma \\right) \\end{aligned} \\] , \\(\\sigma_n\\) vector \\(T\\) time-specific scalar standard deviations, \\(\\text{diag}(\\sigma_n)\\) diagonal \\(T \\times T\\) matrix. \\(Z_n\\) patient-specific matrix controls distributional parameters \\(b_\\sigma\\) map intuitive standard deviation vector \\(\\sigma_n\\). specific makeup \\(Z_n\\) determined sigma argument brm_formula(), turn produced brm_formula_sigma(). \\(\\Lambda\\) symmetric positive-definite correlation matrix diagonal elements equal 1 -diagonal elements -1 1. structure \\(\\Lambda\\) depends correlation argument brm_formula(), describe unstructured parameterization, ARMA, compound symmetry, etc. alternative structures priors available directly brms. specific details, please consult https://paul-buerkner.github.io/brms/reference/autocor-terms.html ?brms.mmrm::brm_formula.","code":""},{"path":"/articles/model.html","id":"priors","dir":"Articles","previous_headings":"","what":"Priors","title":"Model","text":"scalar components \\(b\\) modeled independent user-defined priors specified prior argument brm_model(). hyperparameters priors constant. default priors improper uniform non-intercept terms data-dependent Student-t distribution intercept. variance-related distributional parameters \\(b_\\sigma\\) given similar priors correlation matrix \\(\\Lambda\\), default prior brms.mmrm LKJ correlation distribution shape parameter equal 1. choice prior valid unstructured correlation matrices. correlation structures, ARMA, parameterize \\(\\Lambda\\) allow users set priors new specialized parameters.","code":""},{"path":"/articles/model.html","id":"sampling","dir":"Articles","previous_headings":"","what":"Sampling","title":"Model","text":"brms.mmrm, brms, fits model data using Markov chain Monte Carlo (MCMC) capabilities Stan (Stan Development Team 2023). Please read https://mc-stan.org/users/documentation/ details methodology Stan. result MCMC collection draws full joint posterior distribution parameters given data. Individual draws scalar parameters \\(\\beta_3\\) considered draws marginal posterior distribution e.g. \\(\\beta_3\\) given data.","code":""},{"path":[]},{"path":"/articles/sbc.html","id":"about","dir":"Articles","previous_headings":"","what":"About","title":"Simulation-based calibration checking","text":"vignette shows results simulation-based calibration (SBC) checking study validate implementation models brms.mmrm. SBC checking tests ability Bayesian model recapture parameters used simulate prior predictive data. details SBC checking, please read Modrák et al. (2024) SBC R package (Kim et al. 2022). particular SBC checking study uses targets pipeline viggnettes/sbc/ subdirectory brms.mmrm package source code.","code":""},{"path":"/articles/sbc.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Simulation-based calibration checking","text":"results , SBC rank statistics approximately uniformly distributed. words, posterior distribution brms/Stan MMRM modeling code matches prior datasets simulated. evidence subgroup non-subgroup models brms.mmrm implemented correctly.","code":""},{"path":"/articles/sbc.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Simulation-based calibration checking","text":"show SBC checking results vignette, first load code SBC checking study, use custom functions read plot rank statistics: section SBC checking study based given modeling scenario. scenario shows results 1000 independent simulations prior.","code":"library(dplyr) library(ggplot2) library(tibble) library(tidyr)  source(\"sbc/R/prior.R\") source(\"sbc/R/response.R\") source(\"sbc/R/scenarios.R\")  read_ranks <- function(path) {   fst::read_fst(path) |>     tibble::as_tibble() |>     pivot_longer(       cols = everything(),       names_to = \"parameter\",       values_to = \"rank\"     ) }  plot_ranks <- function(ranks) {   ggplot(ranks) +     geom_histogram(       aes(x = rank),       breaks = seq(from = 0, to = max(ranks$rank), length.out = 10)     ) +     facet_wrap(~parameter) }"},{"path":"/articles/sbc.html","id":"subgroup-scenario","dir":"Articles","previous_headings":"","what":"Subgroup scenario","title":"Simulation-based calibration checking","text":"subgroup scenario distinguishes others presence subgroup factor. Assumptions: 2 treatment groups 2 subgroup levels 3 time points 150 patients per treatment group Baseline covariates (2 continuous 2 categorical) 30% dropout 8% rate independent/sporadic missing response. Model formula: prior randomly generated used simulation analysis: following histograms show SBC rank statistics compare prior parameter draws draws posterior draws. data simulation code modeling code correct consistent, rank statistics approximately uniformly distributed. Fixed effect parameter ranks:  Standard deviation parameter ranks:  Correlation parameter ranks:","code":"#> response ~ group + group:subgroup + group:subgroup:time + group:time + subgroup + subgroup:time + time + continuous1 + continuous2 + balanced + unbalanced + unstr(time = time, gr = patient)  #> sigma ~ 0 + time setup_prior(subgroup) |>   select(prior, class, coef, dpar) |>   as.data.frame() #>                      prior     class                                       coef #> 2  normal(-0.1736, 0.6054)         b                             balancedlevel2 #> 3   normal(-0.0447, 0.855)         b                             balancedlevel3 #> 4   normal(0.0406, 0.5496)         b                                continuous1 #> 5  normal(-0.0324, 0.7433)         b                                continuous2 #> 6  normal(-0.0181, 2.3641)         b                               groupgroup_2 #> 7    normal(0.2398, 1.451)         b            groupgroup_2:subgroupsubgroup_2 #> 8  normal(-0.0082, 2.7447)         b groupgroup_2:subgroupsubgroup_2:timetime_2 #> 9  normal(-0.1206, 0.9984)         b groupgroup_2:subgroupsubgroup_2:timetime_3 #> 10  normal(0.0883, 2.7254)         b                    groupgroup_2:timetime_2 #> 11  normal(0.0347, 0.3068)         b                    groupgroup_2:timetime_3 #> 12  normal(0.1064, 2.8303)         b                         subgroupsubgroup_2 #> 13  normal(0.1894, 1.2434)         b              subgroupsubgroup_2:timetime_2 #> 14 normal(-0.0294, 1.0162)         b              subgroupsubgroup_2:timetime_3 #> 15  normal(0.0649, 2.0052)         b                                 timetime_2 #> 16  normal(0.0826, 1.9545)         b                                 timetime_3 #> 17  normal(0.0491, 1.3319)         b                           unbalancedlevel2 #> 18   normal(-0.156, 1.255)         b                           unbalancedlevel3 #> 19             lkj(1.3461)   cortime                                            #> 20   normal(0.088, 2.6479) Intercept                                            #> 22  normal(0.0879, 2.8273)         b                                 timetime_1 #> 23  normal(0.2299, 2.2228)         b                                 timetime_2 #> 24  normal(0.0095, 2.2667)         b                                 timetime_3 #>     dpar #> 2        #> 3        #> 4        #> 5        #> 6        #> 7        #> 8        #> 9        #> 10       #> 11       #> 12       #> 13       #> 14       #> 15       #> 16       #> 17       #> 18       #> 19       #> 20       #> 22 sigma #> 23 sigma #> 24 sigma ranks_subgroup <- read_ranks(\"sbc/results/subgroup.fst\") ranks_subgroup |>   filter(grepl(\"^b_\", parameter)) |>   filter(!grepl(\"^b_sigma\", parameter)) |>   plot_ranks() ranks_subgroup |>   filter(grepl(\"b_sigma\", parameter)) |>   plot_ranks() ranks_subgroup |>   filter(grepl(\"cortime_\", parameter)) |>   plot_ranks()"},{"path":"/articles/sbc.html","id":"unstructured-scenario","dir":"Articles","previous_headings":"","what":"Unstructured scenario","title":"Simulation-based calibration checking","text":"scenario uses unstructured correlation use subgroup variable. Assumptions: 3 treatment groups subgroup 4 time points 100 patients per treatment group covariate adjustment missing responses Model formula: prior randomly generated used simulation analysis: SBC checking rank statistics: Fixed effect parameter ranks: Log-scale standard deviation parameter ranks:  Correlation parameter ranks:","code":"#> response ~ 0 + group + time + unstr(time = time, gr = patient)  #> sigma ~ 0 + time setup_prior(unstructured) |>   select(prior, class, coef, dpar) |>   as.data.frame() #>                      prior   class         coef  dpar #> 2  normal(-0.1005, 1.6313)       b groupgroup_1       #> 3   normal(0.2389, 0.4785)       b groupgroup_2       #> 4  normal(-0.1541, 1.2388)       b groupgroup_3       #> 5  normal(-0.0835, 2.2302)       b   timetime_2       #> 6  normal(-0.0266, 1.9245)       b   timetime_3       #> 7  normal(-0.1762, 2.2366)       b   timetime_4       #> 8              lkj(1.1812) cortime                    #> 10 normal(-0.0388, 2.5623)       b   timetime_1 sigma #> 11  normal(0.1653, 2.7346)       b   timetime_2 sigma #> 12  normal(0.0359, 2.3959)       b   timetime_3 sigma #> 13   normal(0.127, 2.5864)       b   timetime_4 sigma ranks_unstructured <- read_ranks(\"sbc/results/unstructured.fst\") ranks_unstructured |>   filter(grepl(\"^b_\", parameter)) |>   filter(!grepl(\"^b_sigma\", parameter)) |>   plot_ranks() ranks_unstructured |>   filter(grepl(\"b_sigma\", parameter)) |>   plot_ranks() ranks_unstructured |>   filter(grepl(\"cortime_\", parameter)) |>   plot_ranks()"},{"path":"/articles/sbc.html","id":"autoregressive-moving-average-scenario","dir":"Articles","previous_headings":"","what":"Autoregressive moving average scenario","title":"Simulation-based calibration checking","text":"scenario uses autoregressive moving average (ARMA) model autoregressive order 1 moving average order 1. Assumptions: 2 treatment groups subgroup 3 time points 100 patients per treatment group covariate adjustment missing responses Model formula: prior randomly generated used simulation analysis: SBC checking rank statistics: Fixed effect parameter ranks:  Log-scale standard deviation parameter ranks:  Correlation parameter ranks:","code":"#> response ~ 0 + group + time + arma(time = time, gr = patient, p = 1L, q = 1L, cov = FALSE)  #> sigma ~ 0 + time setup_prior(autoregressive_moving_average) |>   select(prior, class, coef, dpar) |>   as.data.frame() #>                      prior class         coef  dpar #> 1        uniform(0.1, 0.9)    ar                    #> 3   normal(0.1737, 0.3985)     b groupgroup_1       #> 4  normal(-0.1215, 2.1487)     b groupgroup_2       #> 5  normal(-0.0756, 2.4499)     b   timetime_2       #> 6   normal(-0.0672, 1.454)     b   timetime_3       #> 7        uniform(0.1, 0.9)    ma                    #> 9   normal(0.0282, 1.8807)     b   timetime_1 sigma #> 10   normal(0.101, 1.5519)     b   timetime_2 sigma #> 11  normal(0.0335, 0.6042)     b   timetime_3 sigma ranks_autoregressive_moving_average <- read_ranks(   \"sbc/results/autoregressive_moving_average.fst\" ) ranks_autoregressive_moving_average |>   filter(grepl(\"^b_\", parameter)) |>   filter(!grepl(\"^b_sigma\", parameter)) |>   plot_ranks() ranks_autoregressive_moving_average |>   filter(grepl(\"b_sigma\", parameter)) |>   plot_ranks() ranks_autoregressive_moving_average |>   filter(parameter %in% c(\"ar[1]\", \"ma[1]\")) |>   plot_ranks()"},{"path":"/articles/sbc.html","id":"autoregressive-scenario","dir":"Articles","previous_headings":"","what":"Autoregressive scenario","title":"Simulation-based calibration checking","text":"scenario , correlation structure autoregressive order 2. Model formula: prior randomly generated used simulation analysis: SBC checking rank statistics: Fixed effect parameter ranks: Log-scale standard deviation parameter ranks:  Correlation parameter ranks:","code":"#> response ~ 0 + group + time + ar(time = time, gr = patient, p = 2L, cov = FALSE)  #> sigma ~ 0 + time setup_prior(autoregressive) |>   select(prior, class, coef, dpar) |>   as.data.frame() #>                      prior class         coef  dpar #> 1        uniform(0.1, 0.9)    ar                    #> 3  normal(-0.0257, 1.3542)     b groupgroup_1       #> 4  normal(-0.0404, 1.5114)     b groupgroup_2       #> 5   normal(0.1645, 1.6844)     b   timetime_2       #> 6  normal(-0.1432, 0.3371)     b   timetime_3       #> 8   normal(0.1859, 2.9435)     b   timetime_1 sigma #> 9    normal(0.064, 2.2678)     b   timetime_2 sigma #> 10  normal(-0.0904, 1.322)     b   timetime_3 sigma ranks_autoregressive <- read_ranks(\"sbc/results/autoregressive.fst\") ranks_autoregressive |>   filter(grepl(\"^b_\", parameter)) |>   filter(!grepl(\"^b_sigma\", parameter)) |>   plot_ranks() ranks_autoregressive |>   filter(grepl(\"b_sigma\", parameter)) |>   plot_ranks() ranks_autoregressive |>   filter(parameter %in% c(\"ar[1]\", \"ar[2]\")) |>   plot_ranks()"},{"path":"/articles/sbc.html","id":"moving-average-scenario","dir":"Articles","previous_headings":"","what":"Moving average scenario","title":"Simulation-based calibration checking","text":"scenario , uses moving average correlation structure order 2. Model formula: prior randomly generated used simulation analysis: SBC checking rank statistics: Fixed effect parameter ranks: Log-scale standard deviation parameter ranks:  Correlation parameter ranks:","code":"#> response ~ 0 + group + time + ma(time = time, gr = patient, q = 2L, cov = FALSE)  #> sigma ~ 0 + time setup_prior(moving_average) |>   select(prior, class, coef, dpar) |>   as.data.frame() #>                      prior class         coef  dpar #> 2    normal(0.135, 1.0282)     b groupgroup_1       #> 3   normal(0.1832, 1.1802)     b groupgroup_2       #> 4     normal(0.231, 2.435)     b   timetime_2       #> 5  normal(-0.0214, 1.3086)     b   timetime_3       #> 6        uniform(0.1, 0.9)    ma                    #> 8   normal(0.2003, 0.2999)     b   timetime_1 sigma #> 9     normal(0.18, 2.6539)     b   timetime_2 sigma #> 10   normal(0.057, 2.7014)     b   timetime_3 sigma ranks_moving_average <- read_ranks(\"sbc/results/moving_average.fst\") ranks_moving_average |>   filter(grepl(\"^b_\", parameter)) |>   filter(!grepl(\"^b_sigma\", parameter)) |>   plot_ranks() ranks_moving_average |>   filter(grepl(\"b_sigma\", parameter)) |>   plot_ranks() ranks_moving_average |>   filter(parameter %in% c(\"ma[1]\", \"ma[2]\")) |>   plot_ranks()"},{"path":"/articles/sbc.html","id":"compound-symmetry-scenario","dir":"Articles","previous_headings":"","what":"Compound symmetry scenario","title":"Simulation-based calibration checking","text":"scenario , uses compound symmetry correlation structure. Model formula: prior randomly generated used simulation analysis: SBC checking rank statistics: Fixed effect parameter ranks: Log-scale standard deviation parameter ranks:  Correlation parameter ranks:","code":"#> response ~ 0 + group + time + cosy(time = time, gr = patient)  #> sigma ~ 0 + time setup_prior(compound_symmetry) |>   select(prior, class, coef, dpar) |>   as.data.frame() #>                      prior class         coef  dpar #> 2  normal(-0.0733, 0.9602)     b groupgroup_1       #> 3   normal(0.2424, 2.9937)     b groupgroup_2       #> 4   normal(0.1172, 0.4649)     b   timetime_2       #> 5  normal(-0.0516, 0.3823)     b   timetime_3       #> 6        uniform(0.1, 0.9)  cosy                    #> 8   normal(0.1713, 2.6895)     b   timetime_1 sigma #> 9  normal(-0.0965, 0.3201)     b   timetime_2 sigma #> 10 normal(-0.1482, 1.6958)     b   timetime_3 sigma ranks_compound_symmetry <- read_ranks(\"sbc/results/compound_symmetry.fst\") ranks_compound_symmetry |>   filter(grepl(\"^b_\", parameter)) |>   filter(!grepl(\"^b_sigma\", parameter)) |>   plot_ranks() ranks_compound_symmetry |>   filter(grepl(\"b_sigma\", parameter)) |>   plot_ranks() ranks_compound_symmetry |>   filter(parameter == \"cosy\") |>   plot_ranks()"},{"path":"/articles/sbc.html","id":"diagonal-scenario","dir":"Articles","previous_headings":"","what":"Diagonal scenario","title":"Simulation-based calibration checking","text":"scenario , uses diagonal correlation structure (independent time points within patients). Model formula: prior randomly generated used simulation analysis: SBC checking rank statistics: Fixed effect parameter ranks: Log-scale standard deviation parameter ranks:","code":"#> response ~ 0 + group + time  #> sigma ~ group + group:time + time setup_prior(diagonal) |>   select(prior, class, coef, dpar) |>   as.data.frame() #>                      prior     class                    coef  dpar #> 2   normal(0.0688, 0.4554)         b            groupgroup_1       #> 3  normal(-0.0271, 1.1727)         b            groupgroup_2       #> 4  normal(-0.0439, 2.5765)         b              timetime_2       #> 5  normal(-0.1282, 1.0305)         b              timetime_3       #> 7   normal(0.2012, 0.7729)         b            groupgroup_2 sigma #> 8  normal(-0.0137, 0.3341)         b groupgroup_2:timetime_2 sigma #> 9   normal(0.0819, 1.9446)         b groupgroup_2:timetime_3 sigma #> 10 normal(-0.1519, 1.0543)         b              timetime_2 sigma #> 11  normal(0.1583, 1.5648)         b              timetime_3 sigma #> 12  normal(0.0025, 1.3794) Intercept                         sigma ranks_diagonal <- read_ranks(\"sbc/results/diagonal.fst\") ranks_diagonal |>   filter(grepl(\"^b_\", parameter)) |>   filter(!grepl(\"^b_sigma\", parameter)) |>   plot_ranks() ranks_diagonal |>   filter(grepl(\"b_sigma\", parameter)) |>   plot_ranks()"},{"path":[]},{"path":"/articles/simulation.html","id":"simple","dir":"Articles","previous_headings":"","what":"Simple","title":"Simulation","text":"brm_simulate_simple() simulates dataset prior predictive distribution simple special case MMRM.1 data element classed tibble can directly supply brm_formula() brm_model(). parameters element corresponding parameter values simulated joint prior. Arguments brm_simulate_simple() control hyperparameters. model_matrix element regression model matrix fixed effect parameters.","code":"library(brms.mmrm) set.seed(0) sim <- brm_simulate_simple(   n_group = 3,   n_patient = 100,   n_time = 4 ) sim$data #> # A tibble: 1,200 × 4 #>    response group   time   patient     #>       <dbl> <chr>   <chr>  <chr>       #>  1    1.11  group_1 time_1 patient_001 #>  2    2.15  group_1 time_2 patient_001 #>  3    2.54  group_1 time_3 patient_001 #>  4   -1.73  group_1 time_4 patient_001 #>  5    1.11  group_1 time_1 patient_002 #>  6    2.64  group_1 time_2 patient_002 #>  7    1.69  group_1 time_3 patient_002 #>  8    0.783 group_1 time_4 patient_002 #>  9    0.118 group_1 time_1 patient_003 #> 10    2.48  group_1 time_2 patient_003 #> # ℹ 1,190 more rows str(sim$parameters) #> List of 5 #>  $ beta      : num [1:6] 1.263 -0.326 1.33 1.272 0.415 ... #>  $ tau       : num [1:4] -0.092857 -0.029472 -0.000577 0.240465 #>  $ sigma     : num [1:4] 0.911 0.971 0.999 1.272 #>  $ lambda    : num [1:4, 1:4] 1 0.415 -0.818 -0.282 0.415 ... #>  $ covariance: num [1:4, 1:4] 0.831 0.368 -0.745 -0.326 0.368 ... head(sim$model_matrix) #>   groupgroup_1 groupgroup_2 groupgroup_3 timetime_2 timetime_3 timetime_4 #> 1            1            0            0          0          0          0 #> 2            1            0            0          1          0          0 #> 3            1            0            0          0          1          0 #> 4            1            0            0          0          0          1 #> 5            1            0            0          0          0          0 #> 6            1            0            0          1          0          0"},{"path":"/articles/simulation.html","id":"change-from-baseline","dir":"Articles","previous_headings":"","what":"Change from baseline","title":"Simulation","text":"brm_data_change() can convert outcome variable raw response change baseline. applies real datasets passed [brm_data()] well simulated ones e.g. [brm_simulate_simple()]. dataset uses raw response baseline time point \"time_1\" brm_data_change() subtracts baseline, replaces raw response column new change baseline column, adds new column original baseline raw response, adjusts internal attributes classed object accordingly.","code":"sim$data #> # A tibble: 1,200 × 4 #>    response group   time   patient     #>       <dbl> <chr>   <chr>  <chr>       #>  1    1.11  group_1 time_1 patient_001 #>  2    2.15  group_1 time_2 patient_001 #>  3    2.54  group_1 time_3 patient_001 #>  4   -1.73  group_1 time_4 patient_001 #>  5    1.11  group_1 time_1 patient_002 #>  6    2.64  group_1 time_2 patient_002 #>  7    1.69  group_1 time_3 patient_002 #>  8    0.783 group_1 time_4 patient_002 #>  9    0.118 group_1 time_1 patient_003 #> 10    2.48  group_1 time_2 patient_003 #> # ℹ 1,190 more rows brm_data_change(   data = sim$data,   name_change = \"new_change\",   name_baseline = \"new_baseline\" ) #> # A tibble: 900 × 5 #>    new_change new_baseline group   time   patient     #>         <dbl>        <dbl> <chr>   <chr>  <chr>       #>  1      1.04         1.11  group_1 time_2 patient_001 #>  2      1.43         1.11  group_1 time_3 patient_001 #>  3     -2.84         1.11  group_1 time_4 patient_001 #>  4      1.53         1.11  group_1 time_2 patient_002 #>  5      0.576        1.11  group_1 time_3 patient_002 #>  6     -0.328        1.11  group_1 time_4 patient_002 #>  7      2.37         0.118 group_1 time_2 patient_003 #>  8      3.07         0.118 group_1 time_3 patient_003 #>  9     -1.14         0.118 group_1 time_4 patient_003 #> 10      1.57         1.29  group_1 time_2 patient_004 #> # ℹ 890 more rows"},{"path":"/articles/simulation.html","id":"advanced","dir":"Articles","previous_headings":"","what":"Advanced","title":"Simulation","text":"nuanced simulation, build dataset layer layer. Begin brm_simulate_outline() create initial structure random missingness pattern. brm_simulate_outline(), missing responses can come either transitory intercurrent events dropouts. missing column indicates outcome values missing (NA_real_) later step. response column entirely missing now simulated later. Optionally add random continuous covariates brm_simulate_continuous() random categorical covariates using brm_simulate_categorical(). case, covariates non-time-varying, means patient gets one unique value. described next section, brms.mmrm convenient function brm_simulate_prior() simulate outcome variable response using data skeleton prior predictive distribution. However, prefer full custom approach, may need granular details parameterization, requires model matrix. Fortunately, brms supports make_standata() function provide , given dataset formula. may need temporarily set response variable something non-missing, may wish specify custom prior.","code":"data <- brm_simulate_outline(   n_group = 2,   n_patient = 100,   n_time = 4,   rate_dropout = 0.3 )  data #> # A tibble: 800 × 5 #>    response missing group   time   patient     #>       <dbl> <lgl>   <chr>   <chr>  <chr>       #>  1       NA FALSE   group_1 time_1 patient_001 #>  2       NA TRUE    group_1 time_2 patient_001 #>  3       NA TRUE    group_1 time_3 patient_001 #>  4       NA TRUE    group_1 time_4 patient_001 #>  5       NA FALSE   group_1 time_1 patient_002 #>  6       NA FALSE   group_1 time_2 patient_002 #>  7       NA TRUE    group_1 time_3 patient_002 #>  8       NA TRUE    group_1 time_4 patient_002 #>  9       NA FALSE   group_1 time_1 patient_003 #> 10       NA FALSE   group_1 time_2 patient_003 #> # ℹ 790 more rows data <- data |>   brm_simulate_continuous(names = c(\"biomarker1\", \"biomarker2\")) |>   brm_simulate_categorical(     names = c(\"status1\", \"status2\"),     levels = c(\"present\", \"absent\")   )  data #> # A tibble: 800 × 9 #>    response missing group   time   patient biomarker1 biomarker2 status1 status2 #>       <dbl> <lgl>   <chr>   <chr>  <chr>        <dbl>      <dbl> <chr>   <chr>   #>  1       NA FALSE   group_1 time_1 patien…      0.328     -0.655 present absent  #>  2       NA TRUE    group_1 time_2 patien…      0.328     -0.655 present absent  #>  3       NA TRUE    group_1 time_3 patien…      0.328     -0.655 present absent  #>  4       NA TRUE    group_1 time_4 patien…      0.328     -0.655 present absent  #>  5       NA FALSE   group_1 time_1 patien…      1.04      -0.779 absent  absent  #>  6       NA FALSE   group_1 time_2 patien…      1.04      -0.779 absent  absent  #>  7       NA TRUE    group_1 time_3 patien…      1.04      -0.779 absent  absent  #>  8       NA TRUE    group_1 time_4 patien…      1.04      -0.779 absent  absent  #>  9       NA FALSE   group_1 time_1 patien…      0.717     -0.954 present absent  #> 10       NA FALSE   group_1 time_2 patien…      0.717     -0.954 present absent  #> # ℹ 790 more rows library(brms) formula <- brm_formula(data = data) #> Warning: Rows containing NAs were excluded from the model. #> Error: All observations in the data were removed presumably because of NA values. formula #> response ~ group + group:time + time + unstr(time = time, gr = patient)  #> sigma ~ 0 + time  stan_data <- make_standata(   formula = formula,   data = mutate(data, response = 0) ) model_matrix <- stan_data$X head(model_matrix) #>   Intercept groupgroup_2 timetime_2 timetime_3 timetime_4 #> 1         1            0          0          0          0 #> 2         1            0          1          0          0 #> 3         1            0          0          1          0 #> 4         1            0          0          0          1 #> 5         1            0          0          0          0 #> 6         1            0          1          0          0 #>   groupgroup_2:timetime_2 groupgroup_2:timetime_3 groupgroup_2:timetime_4 #> 1                       0                       0                       0 #> 2                       0                       0                       0 #> 3                       0                       0                       0 #> 4                       0                       0                       0 #> 5                       0                       0                       0 #> 6                       0                       0                       0"},{"path":"/articles/simulation.html","id":"prior","dir":"Articles","previous_headings":"","what":"Prior","title":"Simulation","text":"Function brm_simulate_prior() simulates prior predictive distribution. requires dataset formula, accepts custom prior constructed brms::set_prior(). output object sim multiple draws prior predictive distribution. sim$outcome outcome draws, sim$parameters parameter draws. sim$model_matrix model matrix, sim$model full brms model fit object. can pass sim$model functions brms bayesplot pp_check(). addition, sim$data copy original dataset, outcome variable taken final draw prior predictive distribution. addition, missingness pattern automatically applied sim$data$response NA_real_ whenever sim$data$missing equals TRUE.","code":"formula <- brm_formula(data = data) #> Error: All observations in the data were removed presumably because of NA values.  library(brms) prior <- set_prior(\"student_t(3, 0, 1.3)\", class = \"Intercept\") +   set_prior(\"student_t(3, 0, 1.2)\", class = \"b\") +   set_prior(\"student_t(3, 0, 1.1)\", class = \"b\", dpar = \"sigma\") +   set_prior(\"lkj(1)\", class = \"cortime\")  prior #>                 prior     class coef group resp  dpar nlpar   lb   ub source #>  student_t(3, 0, 1.3) Intercept                             <NA> <NA>   user #>  student_t(3, 0, 1.2)         b                             <NA> <NA>   user #>  student_t(3, 0, 1.1)         b                 sigma       <NA> <NA>   user #>                lkj(1)   cortime                             <NA> <NA>   user  sim <- brm_simulate_prior(   data = data,   formula = formula,   prior = prior,   refresh = 0 ) names(sim) #> [1] \"data\"         \"model\"        \"model_matrix\" \"outcome\"      \"parameters\" sim$data #> # A tibble: 800 × 9 #>    response missing group   time   patient biomarker1 biomarker2 status1 status2 #>       <dbl> <lgl>   <chr>   <chr>  <chr>        <dbl>      <dbl> <chr>   <chr>   #>  1  -0.0490 FALSE   group_1 time_1 patien…      0.328     -0.655 present absent  #>  2  NA      TRUE    group_1 time_2 patien…      0.328     -0.655 present absent  #>  3  NA      TRUE    group_1 time_3 patien…      0.328     -0.655 present absent  #>  4  NA      TRUE    group_1 time_4 patien…      0.328     -0.655 present absent  #>  5   7.19   FALSE   group_1 time_1 patien…      1.04      -0.779 absent  absent  #>  6   3.18   FALSE   group_1 time_2 patien…      1.04      -0.779 absent  absent  #>  7  NA      TRUE    group_1 time_3 patien…      1.04      -0.779 absent  absent  #>  8  NA      TRUE    group_1 time_4 patien…      1.04      -0.779 absent  absent  #>  9  15.6    FALSE   group_1 time_1 patien…      0.717     -0.954 present absent  #> 10   0.203  FALSE   group_1 time_2 patien…      0.717     -0.954 present absent  #> # ℹ 790 more rows"},{"path":"/articles/simulation.html","id":"posterior","dir":"Articles","previous_headings":"","what":"Posterior","title":"Simulation","text":"brms supports posterior predictive simulations checks functions posteiror_predict(), posterior_epred(), pp_check(). can used brms model fit object either brm_model() brm_simulate_prior(). returned outcome_draws object numeric array posterior predictive draws, one row per draw one column per non-missing observation (row) original data.","code":"data <- sim$data formula <- brm_formula(data = data) model <- brm_model(data = data, formula = formula, refresh = 0) outcome_draws <- posterior_predict(object = model) str(outcome_draws) #>  num [1:4000, 1:659] 11.742 0.536 0.686 -8.36 -6.803 ...  dim(data) #> [1] 800   9  sum(!is.na(data$response)) #> [1] 659"},{"path":"/articles/subgroup.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"Subgroup analysis","text":"subgroup variable must categorical. categorical subgroup level adequate representation among treatment groups discrete time points. Otherwise, marginal means interest may estimable. create special classed dataset brms.mmrm using brm_data(), please supply name subgroup variable reference subgroup level. Post-processing functions use reference subgroup level compare pairs subgroups: example, treatment effect subgroup_2 minus treatment effect reference subgroup level choose.","code":"library(brms.mmrm) library(dplyr) library(magrittr) set.seed(0L) raw_data <- brm_simulate_outline(   n_group = 3,   n_subgroup = 2,   n_patient = 50,   n_time = 3,   rate_dropout = 0,   rate_lapse = 0 ) |>   mutate(response = rnorm(n = n()))  raw_data #> # A tibble: 900 × 6 #>    response missing group   subgroup   time   patient     #>       <dbl> <lgl>   <chr>   <chr>      <chr>  <chr>       #>  1  1.26    FALSE   group_1 subgroup_1 time_1 patient_001 #>  2 -0.326   FALSE   group_1 subgroup_1 time_2 patient_001 #>  3  1.33    FALSE   group_1 subgroup_1 time_3 patient_001 #>  4  1.27    FALSE   group_1 subgroup_1 time_1 patient_002 #>  5  0.415   FALSE   group_1 subgroup_1 time_2 patient_002 #>  6 -1.54    FALSE   group_1 subgroup_1 time_3 patient_002 #>  7 -0.929   FALSE   group_1 subgroup_1 time_1 patient_003 #>  8 -0.295   FALSE   group_1 subgroup_1 time_2 patient_003 #>  9 -0.00577 FALSE   group_1 subgroup_1 time_3 patient_003 #> 10  2.40    FALSE   group_1 subgroup_1 time_1 patient_004 #> # ℹ 890 more rows count(raw_data, group, subgroup, time) #> # A tibble: 18 × 4 #>    group   subgroup   time       n #>    <chr>   <chr>      <chr>  <int> #>  1 group_1 subgroup_1 time_1    50 #>  2 group_1 subgroup_1 time_2    50 #>  3 group_1 subgroup_1 time_3    50 #>  4 group_1 subgroup_2 time_1    50 #>  5 group_1 subgroup_2 time_2    50 #>  6 group_1 subgroup_2 time_3    50 #>  7 group_2 subgroup_1 time_1    50 #>  8 group_2 subgroup_1 time_2    50 #>  9 group_2 subgroup_1 time_3    50 #> 10 group_2 subgroup_2 time_1    50 #> 11 group_2 subgroup_2 time_2    50 #> 12 group_2 subgroup_2 time_3    50 #> 13 group_3 subgroup_1 time_1    50 #> 14 group_3 subgroup_1 time_2    50 #> 15 group_3 subgroup_1 time_3    50 #> 16 group_3 subgroup_2 time_1    50 #> 17 group_3 subgroup_2 time_2    50 #> 18 group_3 subgroup_2 time_3    50 data <- brm_data(   data = raw_data,   outcome = \"response\",   role = \"response\",   baseline = NULL,   group = \"group\",   subgroup = \"subgroup\",   time = \"time\",   patient = \"patient\",   reference_group = \"group_1\",   reference_subgroup = \"subgroup_1\",   reference_time = \"time_1\" )  str(data) #> brms_mm_ [900 × 5] (S3: brms_mmrm_data/tbl_df/tbl/data.frame) #>  $ response: num [1:900] 1.263 -0.326 1.33 1.272 0.415 ... #>  $ group   : chr [1:900] \"group_1\" \"group_1\" \"group_1\" \"group_1\" ... #>  $ subgroup: chr [1:900] \"subgroup_1\" \"subgroup_1\" \"subgroup_1\" \"subgroup_1\" ... #>  $ time    : chr [1:900] \"time_1\" \"time_2\" \"time_3\" \"time_1\" ... #>  $ patient : chr [1:900] \"patient_001\" \"patient_001\" \"patient_001\" \"patient_002\" ... #>  - attr(*, \"brm_outcome\")= chr \"response\" #>  - attr(*, \"brm_role\")= chr \"response\" #>  - attr(*, \"brm_group\")= chr \"group\" #>  - attr(*, \"brm_subgroup\")= chr \"subgroup\" #>  - attr(*, \"brm_time\")= chr \"time\" #>  - attr(*, \"brm_patient\")= chr \"patient\" #>  - attr(*, \"brm_covariates\")= chr(0)  #>  - attr(*, \"brm_reference_group\")= chr \"group_1\" #>  - attr(*, \"brm_reference_subgroup\")= chr \"subgroup_1\" #>  - attr(*, \"brm_reference_time\")= chr \"time_1\" #>  - attr(*, \"brm_levels_group\")= chr [1:3] \"group_1\" \"group_2\" \"group_3\" #>  - attr(*, \"brm_labels_group\")= chr [1:3] \"group_1\" \"group_2\" \"group_3\" #>  - attr(*, \"brm_levels_subgroup\")= chr [1:2] \"subgroup_1\" \"subgroup_2\" #>  - attr(*, \"brm_labels_subgroup\")= chr [1:2] \"subgroup_1\" \"subgroup_2\" #>  - attr(*, \"brm_levels_time\")= chr [1:3] \"time_1\" \"time_2\" \"time_3\" #>  - attr(*, \"brm_labels_time\")= chr [1:3] \"time_1\" \"time_2\" \"time_3\""},{"path":"/articles/subgroup.html","id":"formula","dir":"Articles","previous_headings":"","what":"Formula","title":"Subgroup analysis","text":"subgroup analysis, formula terms include subgroup variable. plausible interactions optional via arguments brm_formula(). specific example, disable interactions except group-subgroup interaction. create analogous non-subgroup reduced model, disable terms involve subgroup. useful later measuring impact subgroup whole, without needing restrict specific level subgroup.1","code":"formula_subgroup <- brm_formula(   data = data,   group_subgroup_time = FALSE,   subgroup_time = FALSE )  formula_subgroup #> response ~ group + group:subgroup + group:time + subgroup + time + unstr(time = time, gr = patient)  #> sigma ~ 0 + time formula_reduced <- brm_formula(   data = data,   group_subgroup = FALSE,   group_subgroup_time = FALSE,   subgroup = FALSE,   subgroup_time = FALSE )  formula_reduced #> response ~ group + group:time + time + unstr(time = time, gr = patient)  #> sigma ~ 0 + time"},{"path":"/articles/subgroup.html","id":"models","dir":"Articles","previous_headings":"","what":"Models","title":"Subgroup analysis","text":"run full subgroup reduced non-subgroup models, use brm_model() usual. Remember supply appropriate formula case.","code":"model_subgroup <- brm_model(   data = data,   formula = formula_subgroup,   refresh = 0 ) #> Compiling Stan program... #> Start sampling model_reduced <- brm_model(   data = data,   formula = formula_reduced,   refresh = 0 ) #> Compiling Stan program... #> Start sampling"},{"path":"/articles/subgroup.html","id":"marginals","dir":"Articles","previous_headings":"","what":"Marginals","title":"Subgroup analysis","text":"brm_marginal_draws() automatically produces subgroup-specific marginal means brm_formula() declared subgroup-specific fixed effects.2 draws_subgroup, marginals time difference (change baseline) treatment difference now subgroup-specific. addition, new difference_subgroup table. posterior samples difference_subgroup measure differences subgroup level reference subgroup level respect treatment effects difference_group. brm_marginal_summaries() brm_marginal_probabilities() automatically aware subgroup-specific marginals brm_marginal_draws(). Notably, brm_marginal_summaries() summarizes subgroup differences difference_subgroup table brm_marginal_draws(). brm_marginal_probabilities() still focuses treatment effects, differences pairs subgroup levels. brm_marignal_data() can produce either subgroup-specific non-subgroup-specific summary statistics.","code":"draws_subgroup <- brm_marginal_draws(   data = data,   formula = formula_subgroup,   model = model_subgroup,   transform = brm_transform_marginal(     data = data,     formula = formula_subgroup,     average_within_subgroup = FALSE   ) ) draws_reduced <- brm_marginal_draws(   data = data,   formula = formula_reduced,   model = model_reduced,   transform = brm_transform_marginal(     data = data,     formula = formula_reduced,     average_within_subgroup = FALSE   ) ) tibble::as_tibble(draws_subgroup$difference_group) #> # A tibble: 4,000 × 11 #>    .chain .draw .iteration `group_2|subgroup_1|time_2` group_2|subgroup_1|time…¹ #>     <int> <int>      <int>                       <dbl>                     <dbl> #>  1      1     1          1                     -0.472                    -0.534  #>  2      1     2          2                     -0.0221                   -0.335  #>  3      1     3          3                     -0.222                    -0.217  #>  4      1     4          4                      0.199                    -0.111  #>  5      1     5          5                      0.0411                   -0.165  #>  6      1     6          6                     -0.215                    -0.571  #>  7      1     7          7                      0.0821                   -0.163  #>  8      1     8          8                     -0.167                    -0.0113 #>  9      1     9          9                      0.282                     0.0544 #> 10      1    10         10                      0.321                    -0.322  #> # ℹ 3,990 more rows #> # ℹ abbreviated name: ¹​`group_2|subgroup_1|time_3` #> # ℹ 6 more variables: `group_2|subgroup_2|time_2` <dbl>, #> #   `group_2|subgroup_2|time_3` <dbl>, `group_3|subgroup_1|time_2` <dbl>, #> #   `group_3|subgroup_1|time_3` <dbl>, `group_3|subgroup_2|time_2` <dbl>, #> #   `group_3|subgroup_2|time_3` <dbl> tibble::as_tibble(draws_subgroup$difference_subgroup) #> # A tibble: 4,000 × 7 #>    .chain .draw .iteration `group_2|subgroup_2|time_2` group_2|subgroup_2|time…¹ #>     <int> <int>      <int>                       <dbl>                     <dbl> #>  1      1     1          1                    5.55e-17                         0 #>  2      1     2          2                    4.16e-17                         0 #>  3      1     3          3                    0                                0 #>  4      1     4          4                   -2.78e-17                         0 #>  5      1     5          5                    2.78e-17                         0 #>  6      1     6          6                    0                                0 #>  7      1     7          7                    5.55e-17                         0 #>  8      1     8          8                    2.78e-17                         0 #>  9      1     9          9                    0                                0 #> 10      1    10         10                    0                                0 #> # ℹ 3,990 more rows #> # ℹ abbreviated name: ¹​`group_2|subgroup_2|time_3` #> # ℹ 2 more variables: `group_3|subgroup_2|time_2` <dbl>, #> #   `group_3|subgroup_2|time_3` <dbl> summaries_subgroup <- brm_marginal_summaries(   draws_subgroup,   level = 0.95 )  summaries_reduced <- brm_marginal_summaries(   draws_reduced,   level = 0.95 )  summaries_subgroup #> # A tibble: 250 × 7 #>    marginal         statistic group   subgroup   time     value    mcse #>    <chr>            <chr>     <chr>   <chr>      <chr>    <dbl>   <dbl> #>  1 difference_group lower     group_2 subgroup_1 time_2 -0.300  0.00952 #>  2 difference_group lower     group_2 subgroup_1 time_3 -0.540  0.0137  #>  3 difference_group lower     group_2 subgroup_2 time_2 -0.300  0.00952 #>  4 difference_group lower     group_2 subgroup_2 time_3 -0.540  0.0137  #>  5 difference_group lower     group_3 subgroup_1 time_2 -0.130  0.00873 #>  6 difference_group lower     group_3 subgroup_1 time_3 -0.286  0.00976 #>  7 difference_group lower     group_3 subgroup_2 time_2 -0.130  0.00873 #>  8 difference_group lower     group_3 subgroup_2 time_3 -0.286  0.00976 #>  9 difference_group mean      group_2 subgroup_1 time_2  0.0913 0.00439 #> 10 difference_group mean      group_2 subgroup_1 time_3 -0.167  0.00403 #> # ℹ 240 more rows brm_marginal_probabilities(   draws = draws_subgroup,   threshold = c(-0.1, 0.1),   direction = c(\"greater\", \"less\") ) #> # A tibble: 16 × 6 #>    direction threshold group   subgroup   time   value #>    <chr>         <dbl> <chr>   <chr>      <chr>  <dbl> #>  1 greater        -0.1 group_2 subgroup_1 time_2 0.826 #>  2 greater        -0.1 group_2 subgroup_1 time_3 0.362 #>  3 greater        -0.1 group_2 subgroup_2 time_2 0.826 #>  4 greater        -0.1 group_2 subgroup_2 time_3 0.362 #>  5 greater        -0.1 group_3 subgroup_1 time_2 0.966 #>  6 greater        -0.1 group_3 subgroup_1 time_3 0.846 #>  7 greater        -0.1 group_3 subgroup_2 time_2 0.966 #>  8 greater        -0.1 group_3 subgroup_2 time_3 0.846 #>  9 less            0.1 group_2 subgroup_1 time_2 0.515 #> 10 less            0.1 group_2 subgroup_1 time_3 0.915 #> 11 less            0.1 group_2 subgroup_2 time_2 0.515 #> 12 less            0.1 group_2 subgroup_2 time_3 0.915 #> 13 less            0.1 group_3 subgroup_1 time_2 0.204 #> 14 less            0.1 group_3 subgroup_1 time_3 0.498 #> 15 less            0.1 group_3 subgroup_2 time_2 0.204 #> 16 less            0.1 group_3 subgroup_2 time_3 0.498 summaries_data_subgroup <- brm_marginal_data(   data = data,   level = 0.95,   use_subgroup = TRUE )  summaries_data_subgroup #> # A tibble: 126 × 5 #>    statistic group   subgroup   time   value #>    <chr>     <chr>   <chr>      <chr>  <dbl> #>  1 lower     group_1 subgroup_1 time_1 0.170 #>  2 lower     group_1 subgroup_1 time_2 0.244 #>  3 lower     group_1 subgroup_1 time_3 0.169 #>  4 lower     group_1 subgroup_2 time_1 0.484 #>  5 lower     group_1 subgroup_2 time_2 0.364 #>  6 lower     group_1 subgroup_2 time_3 0.266 #>  7 lower     group_2 subgroup_1 time_1 0.421 #>  8 lower     group_2 subgroup_1 time_2 0.221 #>  9 lower     group_2 subgroup_1 time_3 0.208 #> 10 lower     group_2 subgroup_2 time_1 0.220 #> # ℹ 116 more rows summaries_data_reduced <- brm_marginal_data(   data = data,   level = 0.95,   use_subgroup = FALSE )  summaries_data_reduced #> # A tibble: 63 × 4 #>    statistic group   time     value #>    <chr>     <chr>   <chr>    <dbl> #>  1 lower     group_1 time_1  0.251  #>  2 lower     group_1 time_2  0.219  #>  3 lower     group_1 time_3  0.143  #>  4 lower     group_2 time_1  0.237  #>  5 lower     group_2 time_2  0.252  #>  6 lower     group_2 time_3 -0.0331 #>  7 lower     group_3 time_1  0.104  #>  8 lower     group_3 time_2  0.332  #>  9 lower     group_3 time_3  0.110  #> 10 mean      group_1 time_1  0.0632 #> # ℹ 53 more rows"},{"path":"/articles/subgroup.html","id":"model-comparison","dir":"Articles","previous_headings":"","what":"Model comparison","title":"Subgroup analysis","text":"Metrics brms can compare full subgroup reduced non-subgroup model assess effect subgroup whole. can easily compute widely applicable information criterion (WAIC) model. Likewise, can compare models terms expected log predictive density (ELPD) based approximate Pareto-smoothed leave-one-cross-validation.","code":"brms::waic(model_subgroup) #>  #> Computed from 4000 by 900 log-likelihood matrix. #>  #>           Estimate   SE #> elpd_waic  -1275.8 19.9 #> p_waic        20.0  1.0 #> waic        2551.6 39.9 brms::waic(model_reduced) #>  #> Computed from 4000 by 900 log-likelihood matrix. #>  #>           Estimate   SE #> elpd_waic  -1273.9 20.0 #> p_waic        17.1  0.9 #> waic        2547.8 40.0 loo_subgroup <- brms::loo(model_subgroup) loo_reduced <- brms::loo(model_reduced) loo_subgroup #>  #> Computed from 4000 by 900 log-likelihood matrix. #>  #>          Estimate   SE #> elpd_loo  -1275.8 19.9 #> p_loo        20.1  1.0 #> looic      2551.6 39.9 #> ------ #> MCSE of elpd_loo is 0.1. #> MCSE and ESS estimates assume MCMC draws (r_eff in [0.4, 1.6]). #>  #> All Pareto k estimates are good (k < 0.7). #> See help('pareto-k-diagnostic') for details. loo_reduced #>  #> Computed from 4000 by 900 log-likelihood matrix. #>  #>          Estimate   SE #> elpd_loo  -1274.0 20.0 #> p_loo        17.2  0.9 #> looic      2547.9 40.0 #> ------ #> MCSE of elpd_loo is 0.1. #> MCSE and ESS estimates assume MCMC draws (r_eff in [0.4, 1.8]). #>  #> All Pareto k estimates are good (k < 0.7). #> See help('pareto-k-diagnostic') for details. loo::loo_compare(loo_subgroup, loo_reduced) #>                elpd_diff se_diff #> model_reduced   0.0       0.0    #> model_subgroup -1.9       1.6"},{"path":"/articles/subgroup.html","id":"visualization","dir":"Articles","previous_headings":"","what":"Visualization","title":"Subgroup analysis","text":"brm_plot_draws() aware subgroup-specific marginal means. can adjust visual aesthetics compare subgroup levels side side subgroup level primary comparison interest. following function call compares subgroup model results subgroup data. can adjust plot aesthetics view subgroup levels side side primary comparison interest. can also visually compare treatment effects subgroup level marginal treatment effects reduced model. Please remember filter single subgroup level. Otherwise, brm_plot_compare() throws informative error prevent overplotting.","code":"brm_plot_draws(draws_subgroup$difference_group) brm_plot_draws(   draws_subgroup$difference_group,   axis = \"subgroup\",   facet = c(\"time\", \"group\") ) brm_plot_compare(   data = summaries_data_subgroup,   model = summaries_subgroup,   marginal = \"response\" ) brm_plot_compare(   data = summaries_data_subgroup,   model = summaries_subgroup,   marginal = \"response\",   compare = \"subgroup\",   axis = \"time\",   facet = c(\"group\", \"source\") ) brm_plot_compare(   subgroup = filter(summaries_subgroup, subgroup == \"subgroup_2\"),   reduced = summaries_reduced,   marginal = \"difference_group\" ) brm_plot_compare(   subgroup = summaries_subgroup,   reduced = summaries_reduced,   marginal = \"difference_group\" ) #> Error: #> ! brm_plot_compare() is omitting the subgroup variable because not all marginal summaries have it, but marginal summaries 'subgroup' have more than one subgroup level. Please either filter on a single subgroup level or make sure all supplied marginal summaries are subgroup-specific."},{"path":[]},{"path":"/articles/usage.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"Usage","text":"use brms.mmrm package, begin longitudinal dataset one row per patient observation columns response variable, treatment group indicator, discrete time point indicator, patient ID variable, optional baseline covariates age region. real dataset , can simulate one package. following dataset raw response variable, essential factor variables, continuous baseline covariates.1 general, outcome variable can either raw response change baseline. Next, create special classed dataset package recognize. classed data object contains pre-processed version data, along attributes declare outcome variable, whether outcome response change baseline, treatment group variable, discrete time point variable, control group, baseline time point, covariates selected analysis.","code":"library(brms.mmrm) library(dplyr) library(magrittr) set.seed(0L) raw_data <- brm_simulate_simple(   n_group = 3,   n_patient = 100,   n_time = 4 ) %>%   extract2(\"data\") %>%   brm_simulate_continuous(c(\"biomarker1\", \"biomarker2\", \"biomarker3\"))  raw_data #> # A tibble: 1,200 × 7 #>    response group   time   patient     biomarker1 biomarker2 biomarker3 #>       <dbl> <chr>   <chr>  <chr>            <dbl>      <dbl>      <dbl> #>  1    1.11  group_1 time_1 patient_001      1.31      -0.361      1.52  #>  2    2.15  group_1 time_2 patient_001      1.31      -0.361      1.52  #>  3    2.54  group_1 time_3 patient_001      1.31      -0.361      1.52  #>  4   -1.73  group_1 time_4 patient_001      1.31      -0.361      1.52  #>  5    1.11  group_1 time_1 patient_002      0.107     -2.44      -0.139 #>  6    2.64  group_1 time_2 patient_002      0.107     -2.44      -0.139 #>  7    1.69  group_1 time_3 patient_002      0.107     -2.44      -0.139 #>  8    0.783 group_1 time_4 patient_002      0.107     -2.44      -0.139 #>  9    0.118 group_1 time_1 patient_003      1.44      -0.419     -1.54  #> 10    2.48  group_1 time_2 patient_003      1.44      -0.419     -1.54  #> # ℹ 1,190 more rows data <- brm_data(   data = raw_data,   outcome = \"response\",   role = \"response\",   group = \"group\",   patient = \"patient\",   time = \"time\",   covariates = c(\"biomarker1\", \"biomarker2\"),   reference_group = \"group_1\",   reference_time = \"time_1\" )  data #> # A tibble: 1,200 × 6 #>    response group   time   patient     biomarker1 biomarker2 #>       <dbl> <chr>   <chr>  <chr>            <dbl>      <dbl> #>  1    1.11  group_1 time_1 patient_001      1.31      -0.361 #>  2    2.15  group_1 time_2 patient_001      1.31      -0.361 #>  3    2.54  group_1 time_3 patient_001      1.31      -0.361 #>  4   -1.73  group_1 time_4 patient_001      1.31      -0.361 #>  5    1.11  group_1 time_1 patient_002      0.107     -2.44  #>  6    2.64  group_1 time_2 patient_002      0.107     -2.44  #>  7    1.69  group_1 time_3 patient_002      0.107     -2.44  #>  8    0.783 group_1 time_4 patient_002      0.107     -2.44  #>  9    0.118 group_1 time_1 patient_003      1.44      -0.419 #> 10    2.48  group_1 time_2 patient_003      1.44      -0.419 #> # ℹ 1,190 more rows  class(data) #> [1] \"brms_mmrm_data\" \"tbl_df\"         \"tbl\"            \"data.frame\"  roles <- attributes(data) roles$row.names <- NULL str(roles) #> List of 14 #>  $ names              : chr [1:6] \"response\" \"group\" \"time\" \"patient\" ... #>  $ class              : chr [1:4] \"brms_mmrm_data\" \"tbl_df\" \"tbl\" \"data.frame\" #>  $ brm_outcome        : chr \"response\" #>  $ brm_role           : chr \"response\" #>  $ brm_group          : chr \"group\" #>  $ brm_time           : chr \"time\" #>  $ brm_patient        : chr \"patient\" #>  $ brm_covariates     : chr [1:2] \"biomarker1\" \"biomarker2\" #>  $ brm_reference_group: chr \"group_1\" #>  $ brm_reference_time : chr \"time_1\" #>  $ brm_levels_group   : chr [1:3] \"group_1\" \"group_2\" \"group_3\" #>  $ brm_labels_group   : chr [1:3] \"group_1\" \"group_2\" \"group_3\" #>  $ brm_levels_time    : chr [1:4] \"time_1\" \"time_2\" \"time_3\" \"time_4\" #>  $ brm_labels_time    : chr [1:4] \"time_1\" \"time_2\" \"time_3\" \"time_4\""},{"path":"/articles/usage.html","id":"formula","dir":"Articles","previous_headings":"","what":"Formula","title":"Usage","text":"Next, choose brms model formula fixed effect variance parameters. brm_formula() function brms.mmrm makes process easier. cell means parameterization particular model can expressed follows. specifies one fixed effect parameter combination treatment group time point, makes specification informative priors straightforward prior argument brm_model(). purposes example, choose fully parameterized analysis raw response.","code":"brm_formula(   data = data,   intercept = FALSE,   baseline = FALSE,   group = FALSE,   time = FALSE,   baseline_time = FALSE,   group_time = TRUE ) #> response ~ 0 + group:time + biomarker1 + biomarker2 + unstr(time = time, gr = patient)  #> sigma ~ 0 + time formula <- brm_formula(   data = data,   intercept = TRUE,   baseline = FALSE,   group = TRUE,   time = TRUE,   baseline_time = FALSE,   group_time = TRUE )  formula #> response ~ group + group:time + time + biomarker1 + biomarker2 + unstr(time = time, gr = patient)  #> sigma ~ 0 + time"},{"path":"/articles/usage.html","id":"parameterization","dir":"Articles","previous_headings":"","what":"Parameterization","title":"Usage","text":"formula factor ultimately determines fixed effect parameterization. ordering categorical variables data, well contrast option R, affect construction model matrix. see model matrix ultimately used brm_model(), run brms::make_standata() examine X element returned list. contrast option accepts named vector two character vectors govern model.matrix() contrasts unordered ordered variables, respectively. make_standata() function lets see data brms generate Stan. includes fixed effects model matrix X. Note differences groupgroup_* additive terms matrix one . choose different contrast method, different model matrix may result.","code":"options(contrasts = c(unordered = \"contr.SAS\", ordered = \"contr.poly\")) head(brms::make_standata(formula = formula, data = data)$X) #>   Intercept groupgroup_1 groupgroup_2 timetime_1 timetime_2 timetime_3 #> 1         1            1            0          1          0          0 #> 2         1            1            0          0          1          0 #> 3         1            1            0          0          0          1 #> 4         1            1            0          0          0          0 #> 5         1            1            0          1          0          0 #> 6         1            1            0          0          1          0 #>   biomarker1 biomarker2 groupgroup_1:timetime_1 groupgroup_2:timetime_1 #> 1  1.3126508 -0.3608809                       1                       0 #> 2  1.3126508 -0.3608809                       0                       0 #> 3  1.3126508 -0.3608809                       0                       0 #> 4  1.3126508 -0.3608809                       0                       0 #> 5  0.1068624 -2.4441488                       1                       0 #> 6  0.1068624 -2.4441488                       0                       0 #>   groupgroup_1:timetime_2 groupgroup_2:timetime_2 groupgroup_1:timetime_3 #> 1                       0                       0                       0 #> 2                       1                       0                       0 #> 3                       0                       0                       1 #> 4                       0                       0                       0 #> 5                       0                       0                       0 #> 6                       1                       0                       0 #>   groupgroup_2:timetime_3 #> 1                       0 #> 2                       0 #> 3                       0 #> 4                       0 #> 5                       0 #> 6                       0 options(   contrasts = c(unordered = \"contr.treatment\", ordered = \"contr.poly\") ) # different model matrix than before: head(brms::make_standata(formula = formula, data = data)$X) #>   Intercept groupgroup_2 groupgroup_3 timetime_2 timetime_3 timetime_4 #> 1         1            0            0          0          0          0 #> 2         1            0            0          1          0          0 #> 3         1            0            0          0          1          0 #> 4         1            0            0          0          0          1 #> 5         1            0            0          0          0          0 #> 6         1            0            0          1          0          0 #>   biomarker1 biomarker2 groupgroup_2:timetime_2 groupgroup_3:timetime_2 #> 1  1.3126508 -0.3608809                       0                       0 #> 2  1.3126508 -0.3608809                       0                       0 #> 3  1.3126508 -0.3608809                       0                       0 #> 4  1.3126508 -0.3608809                       0                       0 #> 5  0.1068624 -2.4441488                       0                       0 #> 6  0.1068624 -2.4441488                       0                       0 #>   groupgroup_2:timetime_3 groupgroup_3:timetime_3 groupgroup_2:timetime_4 #> 1                       0                       0                       0 #> 2                       0                       0                       0 #> 3                       0                       0                       0 #> 4                       0                       0                       0 #> 5                       0                       0                       0 #> 6                       0                       0                       0 #>   groupgroup_3:timetime_4 #> 1                       0 #> 2                       0 #> 3                       0 #> 4                       0 #> 5                       0 #> 6                       0"},{"path":"/articles/usage.html","id":"priors","dir":"Articles","previous_headings":"","what":"Priors","title":"Usage","text":"analyses require informative priors, others require non-informative ones. Please use brms construct prior suitable analysis. brms package documentation default priors constructed set priors. R object represents joint prior distribution model, can pass brm_model() function described . get_prior() function shows default priors given dataset model formula.","code":"brms::get_prior(data = data, formula = formula) #>                   prior     class                    coef group resp  dpar #>                  (flat)         b                                          #>                  (flat)         b              biomarker1                  #>                  (flat)         b              biomarker2                  #>                  (flat)         b            groupgroup_2                  #>                  (flat)         b groupgroup_2:timetime_2                  #>                  (flat)         b groupgroup_2:timetime_3                  #>                  (flat)         b groupgroup_2:timetime_4                  #>                  (flat)         b            groupgroup_3                  #>                  (flat)         b groupgroup_3:timetime_2                  #>                  (flat)         b groupgroup_3:timetime_3                  #>                  (flat)         b groupgroup_3:timetime_4                  #>                  (flat)         b              timetime_2                  #>                  (flat)         b              timetime_3                  #>                  (flat)         b              timetime_4                  #>                  lkj(1)   cortime                                          #>  student_t(3, 0.9, 2.5) Intercept                                          #>                  (flat)         b                                    sigma #>                  (flat)         b              timetime_1            sigma #>                  (flat)         b              timetime_2            sigma #>                  (flat)         b              timetime_3            sigma #>                  (flat)         b              timetime_4            sigma #>  nlpar lb ub       source #>                   default #>              (vectorized) #>              (vectorized) #>              (vectorized) #>              (vectorized) #>              (vectorized) #>              (vectorized) #>              (vectorized) #>              (vectorized) #>              (vectorized) #>              (vectorized) #>              (vectorized) #>              (vectorized) #>              (vectorized) #>                   default #>                   default #>                   default #>              (vectorized) #>              (vectorized) #>              (vectorized) #>              (vectorized)"},{"path":"/articles/usage.html","id":"model","dir":"Articles","previous_headings":"","what":"Model","title":"Usage","text":"run MMRM, use brm_model() function. function calls brms::brm() behind scenes, using formula prior set formula prior arguments. result brms model object.","code":"model <- brm_model(data = data, formula = formula, refresh = 0) model #>  Family: gaussian  #>   Links: mu = identity; sigma = log  #> Formula: response ~ group + group:time + time + biomarker1 + biomarker2 + unstr(time = time, gr = patient)  #>          sigma ~ 0 + time #>    Data: data[!is.na(data[[attr(data, \"brm_outcome\")]]), ] (Number of observations: 1200)  #>   Draws: 4 chains, each with iter = 2000; warmup = 1000; thin = 1; #>          total post-warmup draws = 4000 #>  #> Correlation Structures: #>                        Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS #> cortime(time_1,time_2)     0.42      0.05     0.33     0.51 1.00     3325 #> cortime(time_1,time_3)    -0.80      0.02    -0.84    -0.76 1.00     2161 #> cortime(time_2,time_3)    -0.54      0.04    -0.62    -0.46 1.00     3218 #> cortime(time_1,time_4)    -0.29      0.05    -0.39    -0.18 1.00     4082 #> cortime(time_2,time_4)     0.03      0.06    -0.09     0.14 1.00     3227 #> cortime(time_3,time_4)    -0.10      0.06    -0.21     0.01 1.00     3697 #>                        Tail_ESS #> cortime(time_1,time_2)     2911 #> cortime(time_1,time_3)     2816 #> cortime(time_2,time_3)     3092 #> cortime(time_1,time_4)     2939 #> cortime(time_2,time_4)     2861 #> cortime(time_3,time_4)     2853 #>  #> Regression Coefficients: #>                         Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS #> Intercept                   1.21      0.09     1.04     1.39 1.00     1319 #> groupgroup_2               -1.53      0.12    -1.77    -1.29 1.00     1394 #> groupgroup_3                0.19      0.13    -0.06     0.44 1.00     1386 #> timetime_2                  1.32      0.10     1.11     1.51 1.00     1994 #> timetime_3                  0.52      0.17     0.17     0.87 1.00     1479 #> timetime_4                 -1.44      0.17    -1.79    -1.11 1.00     1484 #> biomarker1                 -0.01      0.01    -0.03     0.01 1.00     6061 #> biomarker2                  0.02      0.01     0.00     0.04 1.00     4965 #> groupgroup_2:timetime_2     0.04      0.14    -0.24     0.32 1.00     2310 #> groupgroup_3:timetime_2     0.02      0.14    -0.26     0.31 1.00     2186 #> groupgroup_2:timetime_3    -0.17      0.25    -0.65     0.31 1.00     1589 #> groupgroup_3:timetime_3    -0.21      0.25    -0.69     0.28 1.00     1596 #> groupgroup_2:timetime_4    -0.08      0.25    -0.55     0.42 1.00     1544 #> groupgroup_3:timetime_4    -0.27      0.25    -0.75     0.21 1.00     1609 #> sigma_timetime_1           -0.12      0.04    -0.20    -0.04 1.00     2469 #> sigma_timetime_2            0.01      0.04    -0.08     0.09 1.00     3347 #> sigma_timetime_3           -0.05      0.04    -0.13     0.03 1.00     2168 #> sigma_timetime_4            0.21      0.04     0.13     0.29 1.00     3483 #>                         Tail_ESS #> Intercept                   2071 #> groupgroup_2                1918 #> groupgroup_3                2158 #> timetime_2                  2641 #> timetime_3                  2113 #> timetime_4                  1840 #> biomarker1                  2949 #> biomarker2                  2885 #> groupgroup_2:timetime_2     2727 #> groupgroup_3:timetime_2     2725 #> groupgroup_2:timetime_3     2149 #> groupgroup_3:timetime_3     2363 #> groupgroup_2:timetime_4     2053 #> groupgroup_3:timetime_4     2129 #> sigma_timetime_1            2791 #> sigma_timetime_2            3135 #> sigma_timetime_3            2622 #> sigma_timetime_4            2850 #>  #> Draws were sampled using sampling(NUTS). For each parameter, Bulk_ESS #> and Tail_ESS are effective sample size measures, and Rhat is the potential #> scale reduction factor on split chains (at convergence, Rhat = 1)."},{"path":"/articles/usage.html","id":"marginals","dir":"Articles","previous_headings":"","what":"Marginals","title":"Usage","text":"Regardless choice fixed effects formula, brms.mmrm performs inference marginal distributions treatment group time point mean following quantities: Response. Change baseline, set role \"change\" brm_data(). Treatment difference, terms change baseline. Effect size: treatment difference divided residual standard deviation. derive posterior draws marginals, use brm_marginal_draws() function. need samples marginals averaged across time points, e.g. “overall effect size”, brm_marginal_draws_average() can average draws across discrete time points (either user-defined subset). brm_marginal_summaries() function produces posterior summaries marginals, includes Monte Carlo standard error (MCSE) estimate. brm_marginal_probabilities() function shows posterior probabilities form, \\[ \\begin{aligned} \\text{Prob}(\\text{treatment effect} > \\text{threshold}) \\end{aligned} \\] \\[ \\begin{aligned} \\text{Prob}(\\text{treatment effect} < \\text{threshold}) \\end{aligned} \\] Finally, brm_marignal_data() computes marginal means confidence intervals response variable data, along summary statistics.","code":"draws <- brm_marginal_draws(data = data, formula = formula, model = model)  draws #> $response #> # A draws_df: 1000 iterations, 4 chains, and 12 variables #>    group_1|time_1 group_1|time_2 group_1|time_3 group_1|time_4 group_2|time_1 #> 1             1.2            2.5            1.8         -0.386          -0.25 #> 2             1.2            2.6            1.7         -0.083          -0.23 #> 3             1.2            2.6            1.8         -0.278          -0.31 #> 4             1.2            2.6            1.7         -0.150          -0.32 #> 5             1.2            2.5            1.8         -0.160          -0.26 #> 6             1.1            2.5            1.8         -0.288          -0.19 #> 7             1.1            2.4            1.9         -0.181          -0.30 #> 8             1.2            2.6            1.8         -0.207          -0.33 #> 9             1.1            2.5            1.7         -0.070          -0.35 #> 10            1.2            2.6            1.6         -0.022          -0.44 #>    group_2|time_2 group_2|time_3 group_2|time_4 #> 1            1.05        -0.0050           -1.9 #> 2            1.16         0.0115           -2.0 #> 3            0.99         0.0939           -2.0 #> 4            1.12        -0.0090           -1.9 #> 5            1.02        -0.0371           -1.8 #> 6            1.00        -0.0146           -2.0 #> 7            1.08        -0.1218           -1.7 #> 8            1.01         0.0043           -1.9 #> 9            1.16        -0.0098           -1.8 #> 10           0.91         0.1413           -1.9 #> # ... with 3990 more draws, and 4 more variables #> # ... hidden reserved variables {'.chain', '.iteration', '.draw'} #>  #> $difference_time #> # A draws_df: 1000 iterations, 4 chains, and 9 variables #>    group_1|time_2 group_1|time_3 group_1|time_4 group_2|time_2 group_2|time_3 #> 1             1.3           0.55           -1.6            1.3           0.25 #> 2             1.3           0.47           -1.3            1.4           0.24 #> 3             1.4           0.59           -1.5            1.3           0.41 #> 4             1.4           0.52           -1.3            1.4           0.31 #> 5             1.4           0.60           -1.3            1.3           0.23 #> 6             1.4           0.68           -1.4            1.2           0.17 #> 7             1.3           0.77           -1.3            1.4           0.18 #> 8             1.4           0.57           -1.4            1.3           0.33 #> 9             1.3           0.61           -1.2            1.5           0.34 #> 10            1.4           0.44           -1.2            1.4           0.58 #>    group_2|time_4 group_3|time_2 group_3|time_3 #> 1            -1.7            1.2          0.107 #> 2            -1.8            1.3          0.227 #> 3            -1.7            1.3          0.244 #> 4            -1.5            1.4          0.410 #> 5            -1.5            1.3          0.574 #> 6            -1.9            1.3          0.350 #> 7            -1.4            1.4          0.391 #> 8            -1.6            1.2          0.043 #> 9            -1.4            1.5          0.377 #> 10           -1.4            1.5          0.297 #> # ... with 3990 more draws, and 1 more variables #> # ... hidden reserved variables {'.chain', '.iteration', '.draw'} #>  #> $difference_group #> # A draws_df: 1000 iterations, 4 chains, and 6 variables #>    group_2|time_2 group_2|time_3 group_2|time_4 group_3|time_2 group_3|time_3 #> 1          0.0069          -0.30         -0.028         -0.089         -0.447 #> 2          0.0631          -0.23         -0.498          0.016         -0.244 #> 3         -0.1212          -0.19         -0.173         -0.123         -0.347 #> 4          0.0026          -0.21         -0.211         -0.081         -0.115 #> 5         -0.1005          -0.37         -0.212         -0.037         -0.027 #> 6         -0.2115          -0.51         -0.460         -0.044         -0.329 #> 7          0.0383          -0.59         -0.153          0.064         -0.377 #> 8         -0.1074          -0.24         -0.215         -0.229         -0.529 #> 9          0.1657          -0.27         -0.214          0.148         -0.238 #> 10        -0.0431           0.14         -0.233          0.060         -0.147 #>    group_3|time_4 #> 1           -0.19 #> 2           -0.40 #> 3           -0.27 #> 4           -0.53 #> 5           -0.37 #> 6           -0.19 #> 7           -0.42 #> 8           -0.47 #> 9           -0.38 #> 10          -0.40 #> # ... with 3990 more draws #> # ... hidden reserved variables {'.chain', '.iteration', '.draw'} #>  #> $effect #> # A draws_df: 1000 iterations, 4 chains, and 6 variables #>    group_2|time_2 group_2|time_3 group_2|time_4 group_3|time_2 group_3|time_3 #> 1          0.0070          -0.32         -0.022         -0.090         -0.465 #> 2          0.0624          -0.25         -0.426          0.016         -0.258 #> 3         -0.1264          -0.20         -0.138         -0.128         -0.373 #> 4          0.0026          -0.22         -0.178         -0.082         -0.118 #> 5         -0.0994          -0.39         -0.183         -0.036         -0.028 #> 6         -0.2190          -0.58         -0.370         -0.046         -0.375 #> 7          0.0403          -0.59         -0.128          0.067         -0.379 #> 8         -0.1078          -0.25         -0.164         -0.230         -0.544 #> 9          0.1702          -0.26         -0.192          0.152         -0.226 #> 10        -0.0462           0.15         -0.195          0.064         -0.158 #>    group_3|time_4 #> 1           -0.15 #> 2           -0.34 #> 3           -0.22 #> 4           -0.45 #> 5           -0.32 #> 6           -0.15 #> 7           -0.35 #> 8           -0.36 #> 9           -0.34 #> 10          -0.33 #> # ... with 3990 more draws #> # ... hidden reserved variables {'.chain', '.iteration', '.draw'} brm_marginal_draws_average(draws = draws, data = data) #> $response #> # A draws_df: 1000 iterations, 4 chains, and 3 variables #>    group_1|average group_2|average group_3|average #> 1              1.3           -0.28             1.4 #> 2              1.4           -0.27             1.4 #> 3              1.3           -0.30             1.4 #> 4              1.3           -0.27             1.4 #> 5              1.3           -0.27             1.3 #> 6              1.3           -0.31             1.4 #> 7              1.3           -0.27             1.4 #> 8              1.3           -0.31             1.4 #> 9              1.3           -0.24             1.4 #> 10             1.3           -0.32             1.4 #> # ... with 3990 more draws #> # ... hidden reserved variables {'.chain', '.iteration', '.draw'} #>  #> $difference_time #> # A draws_df: 1000 iterations, 4 chains, and 3 variables #>    group_1|average group_2|average group_3|average #> 1            0.076          -0.033          -0.165 #> 2            0.158          -0.065          -0.052 #> 3            0.175           0.015          -0.072 #> 4            0.213           0.073          -0.030 #> 5            0.216          -0.013           0.073 #> 6            0.225          -0.167           0.039 #> 7            0.279           0.044           0.033 #> 8            0.211           0.024          -0.199 #> 9            0.258           0.152           0.103 #> 10           0.210           0.163           0.048 #> # ... with 3990 more draws #> # ... hidden reserved variables {'.chain', '.iteration', '.draw'} #>  #> $difference_group #> # A draws_df: 1000 iterations, 4 chains, and 2 variables #>    group_2|average group_3|average #> 1           -0.109           -0.24 #> 2           -0.223           -0.21 #> 3           -0.160           -0.25 #> 4           -0.139           -0.24 #> 5           -0.229           -0.14 #> 6           -0.393           -0.19 #> 7           -0.235           -0.25 #> 8           -0.187           -0.41 #> 9           -0.106           -0.16 #> 10          -0.047           -0.16 #> # ... with 3990 more draws #> # ... hidden reserved variables {'.chain', '.iteration', '.draw'} #>  #> $effect #> # A draws_df: 1000 iterations, 4 chains, and 2 variables #>    group_2|average group_3|average #> 1           -0.110           -0.23 #> 2           -0.203           -0.20 #> 3           -0.154           -0.24 #> 4           -0.130           -0.22 #> 5           -0.223           -0.13 #> 6           -0.389           -0.19 #> 7           -0.227           -0.22 #> 8           -0.173           -0.38 #> 9           -0.093           -0.14 #> 10          -0.032           -0.14 #> # ... with 3990 more draws #> # ... hidden reserved variables {'.chain', '.iteration', '.draw'} summaries <- brm_marginal_summaries(draws, level = 0.95)  summaries #> # A tibble: 165 × 6 #>    marginal         statistic group   time     value    mcse #>    <chr>            <chr>     <chr>   <chr>    <dbl>   <dbl> #>  1 difference_group lower     group_2 time_2 -0.240  0.00686 #>  2 difference_group lower     group_2 time_3 -0.651  0.0115  #>  3 difference_group lower     group_2 time_4 -0.550  0.00994 #>  4 difference_group lower     group_3 time_2 -0.261  0.00608 #>  5 difference_group lower     group_3 time_3 -0.691  0.0166  #>  6 difference_group lower     group_3 time_4 -0.751  0.0114  #>  7 difference_group mean      group_2 time_2  0.0372 0.00303 #>  8 difference_group mean      group_2 time_3 -0.174  0.00625 #>  9 difference_group mean      group_2 time_4 -0.0783 0.00634 #> 10 difference_group mean      group_3 time_2  0.0213 0.00307 #> # ℹ 155 more rows brm_marginal_probabilities(   draws = draws,   threshold = c(-0.1, 0.1),   direction = c(\"greater\", \"less\") ) #> # A tibble: 12 × 5 #>    direction threshold group   time   value #>    <chr>         <dbl> <chr>   <chr>  <dbl> #>  1 greater        -0.1 group_2 time_2 0.828 #>  2 greater        -0.1 group_2 time_3 0.375 #>  3 greater        -0.1 group_2 time_4 0.532 #>  4 greater        -0.1 group_3 time_2 0.814 #>  5 greater        -0.1 group_3 time_3 0.324 #>  6 greater        -0.1 group_3 time_4 0.242 #>  7 less            0.1 group_2 time_2 0.670 #>  8 less            0.1 group_2 time_3 0.866 #>  9 less            0.1 group_2 time_4 0.761 #> 10 less            0.1 group_3 time_2 0.712 #> 11 less            0.1 group_3 time_3 0.890 #> 12 less            0.1 group_3 time_4 0.936 summaries_data <- brm_marginal_data(data = data, level = 0.95)  summaries_data #> # A tibble: 84 × 4 #>    statistic group   time     value #>    <chr>     <chr>   <chr>    <dbl> #>  1 lower     group_1 time_1  1.40   #>  2 lower     group_1 time_2  2.71   #>  3 lower     group_1 time_3  1.91   #>  4 lower     group_1 time_4  0.0151 #>  5 lower     group_2 time_1 -0.150  #>  6 lower     group_2 time_2  1.23   #>  7 lower     group_2 time_3  0.218  #>  8 lower     group_2 time_4 -1.59   #>  9 lower     group_3 time_1  1.57   #> 10 lower     group_3 time_2  2.95   #> # ℹ 74 more rows"},{"path":"/articles/usage.html","id":"visualization","dir":"Articles","previous_headings":"","what":"Visualization","title":"Usage","text":"brm_plot_compare() function compares means intervals many different models data sources plot. First, need marginals data. omit marginals data, can show inference change baseline treatment effect. Additional arguments let control primary comparison interest (color aesthetic), horizontal axis, faceting variable. Finally, brm_plot_draws() can plot posterior draws response, change baseline, treatment difference. axis facet arguments customize horizontal axis faceting variable, respectively.","code":"brm_plot_compare(   data = summaries_data,   model1 = summaries,   model2 = summaries ) brm_plot_compare(   model1 = summaries,   model2 = summaries,   marginal = \"difference_group\" # treatment effect ) brm_plot_compare(   model1 = summaries,   model2 = summaries,   marginal = \"difference_group\",   compare = \"group\",   axis = \"time\",   facet = \"source\" # model1 vs model2 ) brm_plot_draws(draws = draws$difference_group) brm_plot_draws(   draws = draws$difference_group,   axis = \"group\",   facet = \"time\" )"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"William Michael Landau. Author, maintainer. Kevin Kunzmann. Author. Yoni Sidi. Author. Christian Stock. Author. Eli Lilly Company. Copyright holder, funder. Boehringer Ingelheim Pharma GmbH & Co. KG. Copyright holder, funder.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Landau WM, Kunzmann K, Sidi Y, Stock C (2024). brms.mmrm: Bayesian MMRMs using 'brms'. R package version 1.0.0,  https://github.com/openpharma/brms.mmrm, https://openpharma.github.io/brms.mmrm/.","code":"@Manual{,   title = {brms.mmrm: Bayesian MMRMs using 'brms'},   author = {William Michael Landau and Kevin Kunzmann and Yoni Sidi and Christian Stock},   year = {2024},   note = {R package version 1.0.0,  https://github.com/openpharma/brms.mmrm},   url = {https://openpharma.github.io/brms.mmrm/}, }"},{"path":"/index.html","id":"brmsmmrm-","dir":"","previous_headings":"","what":"Bayesian MMRMs using brms","title":"Bayesian MMRMs using brms","text":"mixed model repeated measures (MMRM) popular model longitudinal clinical trial data continuous endpoints, brms powerful versatile package fitting Bayesian regression models. brms.mmrm R package leverages brms run MMRMs, supports simplified interface reduce difficulty align best practices life sciences.","code":""},{"path":[]},{"path":"/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Bayesian MMRMs using brms","text":"documentation website https://openpharma.github.io/brms.mmrm/ complete function reference tutorial vignettes.","code":""},{"path":"/index.html","id":"validation","dir":"","previous_headings":"","what":"Validation","title":"Bayesian MMRMs using brms","text":"ensure correctness model implementation, package validated using simulation-based calibration comparisons frequentist mmrm package two example datasets. analyses results described package vignettes linked : Simulation-based calibration FEV1 data comparison Bayesian frequentist MMRMs. BCVA data comparison Bayesian frequentist MMRMs. Notably, FEV1 BCVA datasets mmrm uses compare SAS vignette. additional validation functional area domain expertise, may choose run similar analyses datasets compare brms.mmrm mmrm /SAS.","code":""},{"path":"/index.html","id":"help","dir":"","previous_headings":"","what":"Help","title":"Bayesian MMRMs using brms","text":"Please report questions problems GitHub discussions GitHub issues, respectively.","code":""},{"path":"/index.html","id":"thanks","dir":"","previous_headings":"","what":"Thanks","title":"Bayesian MMRMs using brms","text":"Thanks openstatsware R Consortium providing professional networks recruit skilled statisticians developers.","code":""},{"path":"/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of conduct","title":"Bayesian MMRMs using brms","text":"Please note brms.mmrm project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Bayesian MMRMs using brms","text":"","code":"To cite package 'brms.mmrm' in publications use:    Landau WM, Kunzmann K, Sidi Y, Stock C (????). _brms.mmrm: Bayesian   MMRMs using 'brms'_. R package version 0.1.0.9003,   <https://github.com/openpharma/brms.mmrm>.  A BibTeX entry for LaTeX users is    @Manual{,     title = {brms.mmrm: Bayesian MMRMs using 'brms'},     author = {William Michael Landau and Kevin Kunzmann and Yoni Sidi and Christian Stock},     note = {R package version 0.1.0.9003},     url = {https://github.com/openpharma/brms.mmrm},   }"},{"path":"/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Bayesian MMRMs using brms","text":"Paul-Christian Bürkner (2017). brms: R Package Bayesian Multilevel Models Using Stan. Journal Statistical Software, 80(1), 1-28. Mallinckrodt, C.H., Lane, P.W., Schnell, D. et al. Recommendations Primary Analysis Continuous Endpoints Longitudinal Clinical Trials. Ther Innov Regul Sci 42, 303–319 (2008). Holzhauer, B., Weber, S. (2024), “Bayesian mixed effects model repeated measures,” Applied Modeling Drug Development, Novartis AG. https://opensource.nibr.com/bamdd/src/02h_mmrm.html.","code":""},{"path":"/reference/brm_archetype_average_cells.html","id":null,"dir":"Reference","previous_headings":"","what":"Cell-means-like time-averaged archetype — brm_archetype_average_cells","title":"Cell-means-like time-averaged archetype — brm_archetype_average_cells","text":"Create cell-means-like informative prior archetype special fixed effect represent average across time.","code":""},{"path":"/reference/brm_archetype_average_cells.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cell-means-like time-averaged archetype — brm_archetype_average_cells","text":"","code":"brm_archetype_average_cells(   data,   covariates = TRUE,   prefix_interest = \"x_\",   prefix_nuisance = \"nuisance_\",   baseline = !is.null(attr(data, \"brm_baseline\")),   baseline_subgroup = !is.null(attr(data, \"brm_baseline\")) && !is.null(attr(data,     \"brm_subgroup\")),   baseline_subgroup_time = !is.null(attr(data, \"brm_baseline\")) && !is.null(attr(data,     \"brm_subgroup\")),   baseline_time = !is.null(attr(data, \"brm_baseline\")) )"},{"path":"/reference/brm_archetype_average_cells.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cell-means-like time-averaged archetype — brm_archetype_average_cells","text":"data classed data frame brm_data(), informative prior archetype function like brm_archetype_successive_cells(). covariates Logical length 1. TRUE (default) include additive covariates declared covariates argument brm_data(), FALSE omit. informative prior archetypes, option set functions like brm_archetype_successive_cells() rather brm_formula() order make sure columns appropriately centered underlying model matrix full rank. prefix_interest Character string prepend new columns generated fixed effects interest (relating group, subgroup, /time). rare cases, may need set non-default prefix prevent name conflicts existing columns data, rename columns data. prefix_interest must value prefix_nuisance. prefix_nuisance prefix_interest, relating generated fixed effects interest (relating group, subgroup, time). Must value prefix_interest. baseline Logical length 1. TRUE include additive effect baseline response, FALSE omit. Default TRUE brm_data() previously declared baseline variable dataset. Ignored informative prior archetypes. informative prior archetypes, option set functions like brm_archetype_successive_cells() rather brm_formula() order make sure columns appropriately centered underlying model matrix full rank. baseline_subgroup Logical length 1. baseline_subgroup_time Logical length 1. TRUE include baseline--subgroup--time interaction, FALSE omit. Default TRUE brm_data() previously declared baseline subgroup variables dataset. Ignored informative prior archetypes. informative prior archetypes, option set functions like brm_archetype_successive_cells() rather brm_formula() order make sure columns appropriately centered underlying model matrix full rank. baseline_time Logical length 1. TRUE include baseline--time interaction, FALSE omit. Default TRUE brm_data() previously declared baseline variable dataset. Ignored informative prior archetypes. informative prior archetypes, option set functions like brm_archetype_successive_cells() rather brm_formula() order make sure columns appropriately centered underlying model matrix full rank.","code":""},{"path":"/reference/brm_archetype_average_cells.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cell-means-like time-averaged archetype — brm_archetype_average_cells","text":"special classed tibble data tailored cell-means-like time-averaged archetype. dataset augmented extra columns \"archetype_\" prefix, well special attributes tell downstream functions like brm_formula() object.","code":""},{"path":"/reference/brm_archetype_average_cells.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cell-means-like time-averaged archetype — brm_archetype_average_cells","text":"archetype special fixed effect treatment group represent mean response averaged across time points. illustrate, suppose dataset two treatment groups B, time points 1, 2, 3, covariates. Let mu_gt marginal mean response group g time t given data hyperparameters. model fixed effect parameters beta_1, beta_2, ..., beta_6 express marginal means mu_gt follows:   group , beta_1 average response group averaged across time points. can confirm expressing average across time (mu_A1 + mu_A2 + mu_A3) / 3 terms beta_* parameters confirming expression simplifies just beta_1. beta_2 represents mean response group time 2, beta_3 represents mean response group time 3. beta_4, beta_5, beta_6 analogous group B.","code":"`mu_A1 = 3 * beta_1 - beta_2 - beta_3`   `mu_A2 = beta_2`   `mu_A3 = beta_3`    `mu_B1 = 3 * beta_4 - beta_5 - beta_6`   `mu_B2 = beta_5`   `mu_B3 = beta_6`"},{"path":"/reference/brm_archetype_average_cells.html","id":"prior-labeling-for-brm-archetype-average-cells-","dir":"Reference","previous_headings":"","what":"Prior labeling for brm_archetype_average_cells()","title":"Cell-means-like time-averaged archetype — brm_archetype_average_cells","text":"Within treatment group, initial time point represents average, successive time point represents response within actual time. illustrate, consider example Details section. labeling scheme brm_archetype_average_cells(), can label prior beta_1 using brm_prior_label(code = \"normal(1.2, 5)\", group = \"\", time = \"1\"). Similarly, cal label prior beta_5 brm_prior_label(code = \"normal(1.3, 7)\", group = \"B\", time = \"2\"). confirm set prior correctly, compare brms prior output summary(your_archetype). See examples details.","code":""},{"path":"/reference/brm_archetype_average_cells.html","id":"nuisance-variables","dir":"Reference","previous_headings":"","what":"Nuisance variables","title":"Cell-means-like time-averaged archetype — brm_archetype_average_cells","text":"presence covariate adjustment, functions like brm_archetype_successive_cells() convert nuisance factors binary dummy variables, center dummy variables continuous nuisance variables means data. ensures main model coefficients interest implicitly conditional subset data. words, preprocessing nuisance variables way preserves interpretations fixed effects interest, ensures informative priors can specified correctly.","code":""},{"path":"/reference/brm_archetype_average_cells.html","id":"prior-labeling","dir":"Reference","previous_headings":"","what":"Prior labeling","title":"Cell-means-like time-averaged archetype — brm_archetype_average_cells","text":"Informative prior archetypes use labeling scheme assign priors fixed effects. works:   informative prior archetypes, process much convenient robust manually calling brms::set_prior(). However, requires understanding labels priors map parameters model. mapping varies archetype archetype, documented help pages archetype-specific functions brm_archetype_successive_cells().","code":"1. First, assign the prior of each parameter a collection   of labels from the data. This can be done manually or with   successive calls to [brm_prior_label()]. 2. Supply the labeling scheme to [brm_prior_archetype()].   [brm_prior_archetype()] uses attributes of the archetype   to map labeled priors to their rightful parameters in the model."},{"path":[]},{"path":"/reference/brm_archetype_average_cells.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cell-means-like time-averaged archetype — brm_archetype_average_cells","text":"","code":"set.seed(0L) data <- brm_simulate_outline(   n_group = 2,   n_patient = 100,   n_time = 4,   rate_dropout = 0,   rate_lapse = 0 ) |>   dplyr::mutate(response = rnorm(n = dplyr::n())) |>   brm_data_change() |>   brm_simulate_continuous(names = c(\"biomarker1\", \"biomarker2\")) |>   brm_simulate_categorical(     names = c(\"status1\", \"status2\"),     levels = c(\"present\", \"absent\")   ) dplyr::select(   data,   group,   time,   patient,   starts_with(\"biomarker\"),   starts_with(\"status\") ) #> # A tibble: 600 × 7 #>    group   time   patient     biomarker1 biomarker2 status1 status2 #>    <chr>   <chr>  <chr>            <dbl>      <dbl> <chr>   <chr>   #>  1 group_1 time_2 patient_001     -1.42      -0.287 absent  present #>  2 group_1 time_3 patient_001     -1.42      -0.287 absent  present #>  3 group_1 time_4 patient_001     -1.42      -0.287 absent  present #>  4 group_1 time_2 patient_002     -1.67       1.84  absent  present #>  5 group_1 time_3 patient_002     -1.67       1.84  absent  present #>  6 group_1 time_4 patient_002     -1.67       1.84  absent  present #>  7 group_1 time_2 patient_003      1.38      -0.157 absent  absent  #>  8 group_1 time_3 patient_003      1.38      -0.157 absent  absent  #>  9 group_1 time_4 patient_003      1.38      -0.157 absent  absent  #> 10 group_1 time_2 patient_004     -0.920     -1.39  present present #> # ℹ 590 more rows archetype <- brm_archetype_average_cells(data) archetype #> # A tibble: 600 × 23 #>    x_group_1_time_2 x_group_1_time_3 x_group_1_time_4 x_group_2_time_2 #>  *            <int>            <int>            <int>            <int> #>  1                3               -1               -1                0 #>  2                0                1                0                0 #>  3                0                0                1                0 #>  4                3               -1               -1                0 #>  5                0                1                0                0 #>  6                0                0                1                0 #>  7                3               -1               -1                0 #>  8                0                1                0                0 #>  9                0                0                1                0 #> 10                3               -1               -1                0 #> # ℹ 590 more rows #> # ℹ 19 more variables: x_group_2_time_3 <int>, x_group_2_time_4 <int>, #> #   nuisance_biomarker1 <dbl>, nuisance_biomarker2 <dbl>, #> #   nuisance_status1_absent <dbl>, nuisance_status2_present <dbl>, #> #   nuisance_baseline <dbl>, nuisance_baseline.timetime_2 <dbl>, #> #   nuisance_baseline.timetime_3 <dbl>, patient <chr>, time <chr>, #> #   change <dbl>, missing <lgl>, baseline <dbl>, group <chr>, … summary(archetype) #> # This object is an informative prior archetype in brms.mmrm. #> # The fixed effect parameters of interest express the #> # marginal means as follows: #> #  #> #    group_1:time_2 = 3*x_group_1_time_2 - x_group_1_time_3 - x_group_1_time_4 #> #    group_1:time_3 = x_group_1_time_3 #> #    group_1:time_4 = x_group_1_time_4 #> #    group_2:time_2 = 3*x_group_2_time_2 - x_group_2_time_3 - x_group_2_time_4 #> #    group_2:time_3 = x_group_2_time_3 #> #    group_2:time_4 = x_group_2_time_4 formula <- brm_formula(archetype) formula #> change ~ 0 + x_group_1_time_2 + x_group_1_time_3 + x_group_1_time_4 + x_group_2_time_2 + x_group_2_time_3 + x_group_2_time_4 + nuisance_biomarker1 + nuisance_biomarker2 + nuisance_status1_absent + nuisance_status2_present + nuisance_baseline + nuisance_baseline.timetime_2 + nuisance_baseline.timetime_3 + unstr(time = time, gr = patient)  #> sigma ~ 0 + time prior <- brm_prior_label(   code = \"normal(1, 2.2)\",   group = \"group_1\",   time = \"time_2\" ) |>   brm_prior_label(\"normal(1, 3.3)\", group = \"group_1\", time = \"time_3\") |>   brm_prior_label(\"normal(1, 4.4)\", group = \"group_1\", time = \"time_4\") |>   brm_prior_label(\"normal(2, 2.2)\", group = \"group_2\", time = \"time_2\") |>   brm_prior_label(\"normal(2, 3.3)\", group = \"group_2\", time = \"time_3\") |>   brm_prior_label(\"normal(2, 4.4)\", group = \"group_2\", time = \"time_4\") |>   brm_prior_archetype(archetype) prior #>           prior class             coef group resp dpar nlpar   lb   ub source #>  normal(1, 2.2)     b x_group_1_time_2                       <NA> <NA>   user #>  normal(1, 3.3)     b x_group_1_time_3                       <NA> <NA>   user #>  normal(1, 4.4)     b x_group_1_time_4                       <NA> <NA>   user #>  normal(2, 2.2)     b x_group_2_time_2                       <NA> <NA>   user #>  normal(2, 3.3)     b x_group_2_time_3                       <NA> <NA>   user #>  normal(2, 4.4)     b x_group_2_time_4                       <NA> <NA>   user class(prior) #> [1] \"brmsprior\"  \"data.frame\" if (identical(Sys.getenv(\"BRM_EXAMPLES\", unset = \"\"), \"true\")) { tmp <- utils::capture.output(   suppressMessages(     suppressWarnings(       model <- brm_model(         data = archetype,         formula = formula,         prior = prior,         chains = 1,         iter = 100,         refresh = 0       )     )   ) ) suppressWarnings(print(model)) brms::prior_summary(model) draws <- brm_marginal_draws(   data = archetype,   formula = formula,   model = model ) summaries_model <- brm_marginal_summaries(draws) summaries_data <- brm_marginal_data(data) brm_plot_compare(model = summaries_model, data = summaries_data) }"},{"path":"/reference/brm_archetype_average_effects.html","id":null,"dir":"Reference","previous_headings":"","what":"Treatment effect time-averaged archetype — brm_archetype_average_effects","title":"Treatment effect time-averaged archetype — brm_archetype_average_effects","text":"Create treatment effect informative prior archetype special fixed effect represent average across time.","code":""},{"path":"/reference/brm_archetype_average_effects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Treatment effect time-averaged archetype — brm_archetype_average_effects","text":"","code":"brm_archetype_average_effects(   data,   covariates = TRUE,   prefix_interest = \"x_\",   prefix_nuisance = \"nuisance_\",   baseline = !is.null(attr(data, \"brm_baseline\")),   baseline_subgroup = !is.null(attr(data, \"brm_baseline\")) && !is.null(attr(data,     \"brm_subgroup\")),   baseline_subgroup_time = !is.null(attr(data, \"brm_baseline\")) && !is.null(attr(data,     \"brm_subgroup\")),   baseline_time = !is.null(attr(data, \"brm_baseline\")) )"},{"path":"/reference/brm_archetype_average_effects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Treatment effect time-averaged archetype — brm_archetype_average_effects","text":"data classed data frame brm_data(), informative prior archetype function like brm_archetype_successive_cells(). covariates Logical length 1. TRUE (default) include additive covariates declared covariates argument brm_data(), FALSE omit. informative prior archetypes, option set functions like brm_archetype_successive_cells() rather brm_formula() order make sure columns appropriately centered underlying model matrix full rank. prefix_interest Character string prepend new columns generated fixed effects interest (relating group, subgroup, /time). rare cases, may need set non-default prefix prevent name conflicts existing columns data, rename columns data. prefix_interest must value prefix_nuisance. prefix_nuisance prefix_interest, relating generated fixed effects interest (relating group, subgroup, time). Must value prefix_interest. baseline Logical length 1. TRUE include additive effect baseline response, FALSE omit. Default TRUE brm_data() previously declared baseline variable dataset. Ignored informative prior archetypes. informative prior archetypes, option set functions like brm_archetype_successive_cells() rather brm_formula() order make sure columns appropriately centered underlying model matrix full rank. baseline_subgroup Logical length 1. baseline_subgroup_time Logical length 1. TRUE include baseline--subgroup--time interaction, FALSE omit. Default TRUE brm_data() previously declared baseline subgroup variables dataset. Ignored informative prior archetypes. informative prior archetypes, option set functions like brm_archetype_successive_cells() rather brm_formula() order make sure columns appropriately centered underlying model matrix full rank. baseline_time Logical length 1. TRUE include baseline--time interaction, FALSE omit. Default TRUE brm_data() previously declared baseline variable dataset. Ignored informative prior archetypes. informative prior archetypes, option set functions like brm_archetype_successive_cells() rather brm_formula() order make sure columns appropriately centered underlying model matrix full rank.","code":""},{"path":"/reference/brm_archetype_average_effects.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Treatment effect time-averaged archetype — brm_archetype_average_effects","text":"special classed tibble data tailored treatment effect time-averaged archetype. dataset augmented extra columns \"archetype_\" prefix, well special attributes tell downstream functions like brm_formula() object.","code":""},{"path":"/reference/brm_archetype_average_effects.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Treatment effect time-averaged archetype — brm_archetype_average_effects","text":"archetype special fixed effect treatment group represent mean response averaged across time points, treatment effects explicitly parameterized. illustrate, suppose dataset two treatment groups (placebo/reference group) B (active/non-reference group), time points 1, 2, 3, covariates. Let mu_gt marginal mean response group g time t given data hyperparameters. model fixed effect parameters beta_1, beta_2, ..., beta_6 express marginal means mu_gt follows:   group , beta_1 average response group averaged across time points. can confirm expressing average across time (mu_A1 + mu_A2 + mu_A3) / 3 terms beta_* parameters confirming expression simplifies just beta_1. beta_2 represents mean response group time 2, beta_3 represents mean response group time 3. beta_4 treatment effect group B relative group , averaged across time points. beta_5 treatment effect B vs time 2, beta_6 analogous time 3.","code":"`mu_A1 = 3 * beta_1 - beta_2 - beta_3` `mu_A2 = beta_2` `mu_A3 = beta_3`  `mu_B1 = 3 * beta_1 - beta_2 - beta_3 + 3 * beta_4 - beta_5 - beta_6` `mu_B2 = beta_2 + beta_5` `mu_B3 = beta_3 + beta_6`"},{"path":"/reference/brm_archetype_average_effects.html","id":"prior-labeling-for-brm-archetype-average-effects-","dir":"Reference","previous_headings":"","what":"Prior labeling for brm_archetype_average_effects()","title":"Treatment effect time-averaged archetype — brm_archetype_average_effects","text":"Within treatment group, initial time point represents average, successive time point represents response within actual time. illustrate, consider example Details section. labeling scheme brm_archetype_average_effects(), can label prior beta_1 using brm_prior_label(code = \"normal(1.2, 5)\", group = \"\", time = \"1\"). Similarly, cal label prior beta_5 brm_prior_label(code = \"normal(1.3, 7)\", group = \"B\", time = \"2\"). confirm set prior correctly, compare brms prior output summary(your_archetype). See examples details.","code":""},{"path":"/reference/brm_archetype_average_effects.html","id":"nuisance-variables","dir":"Reference","previous_headings":"","what":"Nuisance variables","title":"Treatment effect time-averaged archetype — brm_archetype_average_effects","text":"presence covariate adjustment, functions like brm_archetype_successive_cells() convert nuisance factors binary dummy variables, center dummy variables continuous nuisance variables means data. ensures main model coefficients interest implicitly conditional subset data. words, preprocessing nuisance variables way preserves interpretations fixed effects interest, ensures informative priors can specified correctly.","code":""},{"path":"/reference/brm_archetype_average_effects.html","id":"prior-labeling","dir":"Reference","previous_headings":"","what":"Prior labeling","title":"Treatment effect time-averaged archetype — brm_archetype_average_effects","text":"Informative prior archetypes use labeling scheme assign priors fixed effects. works:   informative prior archetypes, process much convenient robust manually calling brms::set_prior(). However, requires understanding labels priors map parameters model. mapping varies archetype archetype, documented help pages archetype-specific functions brm_archetype_successive_cells().","code":"1. First, assign the prior of each parameter a collection   of labels from the data. This can be done manually or with   successive calls to [brm_prior_label()]. 2. Supply the labeling scheme to [brm_prior_archetype()].   [brm_prior_archetype()] uses attributes of the archetype   to map labeled priors to their rightful parameters in the model."},{"path":[]},{"path":"/reference/brm_archetype_average_effects.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Treatment effect time-averaged archetype — brm_archetype_average_effects","text":"","code":"set.seed(0L) data <- brm_simulate_outline(   n_group = 2,   n_patient = 100,   n_time = 4,   rate_dropout = 0,   rate_lapse = 0 ) |>   dplyr::mutate(response = rnorm(n = dplyr::n())) |>   brm_data_change() |>   brm_simulate_continuous(names = c(\"biomarker1\", \"biomarker2\")) |>   brm_simulate_categorical(     names = c(\"status1\", \"status2\"),     levels = c(\"present\", \"absent\")   ) dplyr::select(   data,   group,   time,   patient,   starts_with(\"biomarker\"),   starts_with(\"status\") ) #> # A tibble: 600 × 7 #>    group   time   patient     biomarker1 biomarker2 status1 status2 #>    <chr>   <chr>  <chr>            <dbl>      <dbl> <chr>   <chr>   #>  1 group_1 time_2 patient_001     -1.42      -0.287 absent  present #>  2 group_1 time_3 patient_001     -1.42      -0.287 absent  present #>  3 group_1 time_4 patient_001     -1.42      -0.287 absent  present #>  4 group_1 time_2 patient_002     -1.67       1.84  absent  present #>  5 group_1 time_3 patient_002     -1.67       1.84  absent  present #>  6 group_1 time_4 patient_002     -1.67       1.84  absent  present #>  7 group_1 time_2 patient_003      1.38      -0.157 absent  absent  #>  8 group_1 time_3 patient_003      1.38      -0.157 absent  absent  #>  9 group_1 time_4 patient_003      1.38      -0.157 absent  absent  #> 10 group_1 time_2 patient_004     -0.920     -1.39  present present #> # ℹ 590 more rows archetype <- brm_archetype_average_effects(data) archetype #> # A tibble: 600 × 23 #>    x_group_1_time_2 x_group_1_time_3 x_group_1_time_4 x_group_2_time_2 #>  *            <int>            <int>            <int>            <int> #>  1                3               -1               -1                0 #>  2                0                1                0                0 #>  3                0                0                1                0 #>  4                3               -1               -1                0 #>  5                0                1                0                0 #>  6                0                0                1                0 #>  7                3               -1               -1                0 #>  8                0                1                0                0 #>  9                0                0                1                0 #> 10                3               -1               -1                0 #> # ℹ 590 more rows #> # ℹ 19 more variables: x_group_2_time_3 <int>, x_group_2_time_4 <int>, #> #   nuisance_biomarker1 <dbl>, nuisance_biomarker2 <dbl>, #> #   nuisance_status1_absent <dbl>, nuisance_status2_present <dbl>, #> #   nuisance_baseline <dbl>, nuisance_baseline.timetime_2 <dbl>, #> #   nuisance_baseline.timetime_3 <dbl>, patient <chr>, time <chr>, #> #   change <dbl>, missing <lgl>, baseline <dbl>, group <chr>, … summary(archetype) #> # This object is an informative prior archetype in brms.mmrm. #> # The fixed effect parameters of interest express the #> # marginal means as follows: #> #  #> #    group_1:time_2 = 3*x_group_1_time_2 - x_group_1_time_3 - x_group_1_time_4 #> #    group_1:time_3 = x_group_1_time_3 #> #    group_1:time_4 = x_group_1_time_4 #> #    group_2:time_2 = 3*x_group_1_time_2 - x_group_1_time_3 - x_group_1_time_4 + 3*x_group_2_time_2 - x_group_2_time_3 - x_group_2_time_4 #> #    group_2:time_3 = x_group_1_time_3 + x_group_2_time_3 #> #    group_2:time_4 = x_group_1_time_4 + x_group_2_time_4 formula <- brm_formula(archetype) formula #> change ~ 0 + x_group_1_time_2 + x_group_1_time_3 + x_group_1_time_4 + x_group_2_time_2 + x_group_2_time_3 + x_group_2_time_4 + nuisance_biomarker1 + nuisance_biomarker2 + nuisance_status1_absent + nuisance_status2_present + nuisance_baseline + nuisance_baseline.timetime_2 + nuisance_baseline.timetime_3 + unstr(time = time, gr = patient)  #> sigma ~ 0 + time prior <- brm_prior_label(   code = \"normal(1, 2.2)\",   group = \"group_1\",   time = \"time_2\" ) |>   brm_prior_label(\"normal(1, 3.3)\", group = \"group_1\", time = \"time_3\") |>   brm_prior_label(\"normal(1, 4.4)\", group = \"group_1\", time = \"time_4\") |>   brm_prior_label(\"normal(2, 2.2)\", group = \"group_2\", time = \"time_2\") |>   brm_prior_label(\"normal(2, 3.3)\", group = \"group_2\", time = \"time_3\") |>   brm_prior_label(\"normal(2, 4.4)\", group = \"group_2\", time = \"time_4\") |>   brm_prior_archetype(archetype) prior #>           prior class             coef group resp dpar nlpar   lb   ub source #>  normal(1, 2.2)     b x_group_1_time_2                       <NA> <NA>   user #>  normal(1, 3.3)     b x_group_1_time_3                       <NA> <NA>   user #>  normal(1, 4.4)     b x_group_1_time_4                       <NA> <NA>   user #>  normal(2, 2.2)     b x_group_2_time_2                       <NA> <NA>   user #>  normal(2, 3.3)     b x_group_2_time_3                       <NA> <NA>   user #>  normal(2, 4.4)     b x_group_2_time_4                       <NA> <NA>   user class(prior) #> [1] \"brmsprior\"  \"data.frame\" if (identical(Sys.getenv(\"BRM_EXAMPLES\", unset = \"\"), \"true\")) { tmp <- utils::capture.output(   suppressMessages(     suppressWarnings(       model <- brm_model(         data = archetype,         formula = formula,         prior = prior,         chains = 1,         iter = 100,         refresh = 0       )     )   ) ) suppressWarnings(print(model)) brms::prior_summary(model) draws <- brm_marginal_draws(   data = archetype,   formula = formula,   model = model ) summaries_model <- brm_marginal_summaries(draws) summaries_data <- brm_marginal_data(data) brm_plot_compare(model = summaries_model, data = summaries_data) }"},{"path":"/reference/brm_archetype_cells.html","id":null,"dir":"Reference","previous_headings":"","what":"Cell means archetype — brm_archetype_cells","title":"Cell means archetype — brm_archetype_cells","text":"Create informative prior archetype cell means.","code":""},{"path":"/reference/brm_archetype_cells.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cell means archetype — brm_archetype_cells","text":"","code":"brm_archetype_cells(   data,   covariates = TRUE,   prefix_interest = \"x_\",   prefix_nuisance = \"nuisance_\",   baseline = !is.null(attr(data, \"brm_baseline\")),   baseline_subgroup = !is.null(attr(data, \"brm_baseline\")) && !is.null(attr(data,     \"brm_subgroup\")),   baseline_subgroup_time = !is.null(attr(data, \"brm_baseline\")) && !is.null(attr(data,     \"brm_subgroup\")),   baseline_time = !is.null(attr(data, \"brm_baseline\")) )"},{"path":"/reference/brm_archetype_cells.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cell means archetype — brm_archetype_cells","text":"data classed data frame brm_data(), informative prior archetype function like brm_archetype_successive_cells(). covariates Logical length 1. TRUE (default) include additive covariates declared covariates argument brm_data(), FALSE omit. informative prior archetypes, option set functions like brm_archetype_successive_cells() rather brm_formula() order make sure columns appropriately centered underlying model matrix full rank. prefix_interest Character string prepend new columns generated fixed effects interest (relating group, subgroup, /time). rare cases, may need set non-default prefix prevent name conflicts existing columns data, rename columns data. prefix_interest must value prefix_nuisance. prefix_nuisance prefix_interest, relating generated fixed effects interest (relating group, subgroup, time). Must value prefix_interest. baseline Logical length 1. TRUE include additive effect baseline response, FALSE omit. Default TRUE brm_data() previously declared baseline variable dataset. Ignored informative prior archetypes. informative prior archetypes, option set functions like brm_archetype_successive_cells() rather brm_formula() order make sure columns appropriately centered underlying model matrix full rank. baseline_subgroup Logical length 1. baseline_subgroup_time Logical length 1. TRUE include baseline--subgroup--time interaction, FALSE omit. Default TRUE brm_data() previously declared baseline subgroup variables dataset. Ignored informative prior archetypes. informative prior archetypes, option set functions like brm_archetype_successive_cells() rather brm_formula() order make sure columns appropriately centered underlying model matrix full rank. baseline_time Logical length 1. TRUE include baseline--time interaction, FALSE omit. Default TRUE brm_data() previously declared baseline variable dataset. Ignored informative prior archetypes. informative prior archetypes, option set functions like brm_archetype_successive_cells() rather brm_formula() order make sure columns appropriately centered underlying model matrix full rank.","code":""},{"path":"/reference/brm_archetype_cells.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cell means archetype — brm_archetype_cells","text":"special classed tibble data tailored successive differences archetype. dataset augmented extra columns \"archetype_\" prefix, well special attributes tell downstream functions like brm_formula() object.","code":""},{"path":"/reference/brm_archetype_cells.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cell means archetype — brm_archetype_cells","text":"archetype, fixed effect cell mean: group mean given value treatment group discrete time (subgroup level, applicable).","code":""},{"path":"/reference/brm_archetype_cells.html","id":"prior-labeling-for-brm-archetype-cells-","dir":"Reference","previous_headings":"","what":"Prior labeling for brm_archetype_cells()","title":"Cell means archetype — brm_archetype_cells","text":"Within treatment group, model parameter cell mean, labeling scheme brm_prior_label() brm_prior_archetype() translate easily. example, brm_prior_label(code = \"normal(1.2, 5)\", group = \"B\", time = \"VISIT2\") declares normal(1.2, 5) prior cell mean treatment group B discrete time point VISIT2. confirm set prior correctly, compare brms prior output summary(your_archetype). See examples details.","code":""},{"path":"/reference/brm_archetype_cells.html","id":"nuisance-variables","dir":"Reference","previous_headings":"","what":"Nuisance variables","title":"Cell means archetype — brm_archetype_cells","text":"presence covariate adjustment, functions like brm_archetype_successive_cells() convert nuisance factors binary dummy variables, center dummy variables continuous nuisance variables means data. ensures main model coefficients interest implicitly conditional subset data. words, preprocessing nuisance variables way preserves interpretations fixed effects interest, ensures informative priors can specified correctly.","code":""},{"path":"/reference/brm_archetype_cells.html","id":"prior-labeling","dir":"Reference","previous_headings":"","what":"Prior labeling","title":"Cell means archetype — brm_archetype_cells","text":"Informative prior archetypes use labeling scheme assign priors fixed effects. works:   informative prior archetypes, process much convenient robust manually calling brms::set_prior(). However, requires understanding labels priors map parameters model. mapping varies archetype archetype, documented help pages archetype-specific functions brm_archetype_successive_cells().","code":"1. First, assign the prior of each parameter a collection   of labels from the data. This can be done manually or with   successive calls to [brm_prior_label()]. 2. Supply the labeling scheme to [brm_prior_archetype()].   [brm_prior_archetype()] uses attributes of the archetype   to map labeled priors to their rightful parameters in the model."},{"path":[]},{"path":"/reference/brm_archetype_cells.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cell means archetype — brm_archetype_cells","text":"","code":"set.seed(0L) data <- brm_simulate_outline(   n_group = 2,   n_patient = 100,   n_time = 4,   rate_dropout = 0,   rate_lapse = 0 ) |>   dplyr::mutate(response = rnorm(n = dplyr::n())) |>   brm_data_change() |>   brm_simulate_continuous(names = c(\"biomarker1\", \"biomarker2\")) |>   brm_simulate_categorical(     names = c(\"status1\", \"status2\"),     levels = c(\"present\", \"absent\")   ) dplyr::select(   data,   group,   time,   patient,   starts_with(\"biomarker\"),   starts_with(\"status\") ) #> # A tibble: 600 × 7 #>    group   time   patient     biomarker1 biomarker2 status1 status2 #>    <chr>   <chr>  <chr>            <dbl>      <dbl> <chr>   <chr>   #>  1 group_1 time_2 patient_001     -1.42      -0.287 absent  present #>  2 group_1 time_3 patient_001     -1.42      -0.287 absent  present #>  3 group_1 time_4 patient_001     -1.42      -0.287 absent  present #>  4 group_1 time_2 patient_002     -1.67       1.84  absent  present #>  5 group_1 time_3 patient_002     -1.67       1.84  absent  present #>  6 group_1 time_4 patient_002     -1.67       1.84  absent  present #>  7 group_1 time_2 patient_003      1.38      -0.157 absent  absent  #>  8 group_1 time_3 patient_003      1.38      -0.157 absent  absent  #>  9 group_1 time_4 patient_003      1.38      -0.157 absent  absent  #> 10 group_1 time_2 patient_004     -0.920     -1.39  present present #> # ℹ 590 more rows archetype <- brm_archetype_cells(data) archetype #> # A tibble: 600 × 23 #>    x_group_1_time_2 x_group_1_time_3 x_group_1_time_4 x_group_2_time_2 #>  *            <int>            <int>            <int>            <int> #>  1                1                0                0                0 #>  2                0                1                0                0 #>  3                0                0                1                0 #>  4                1                0                0                0 #>  5                0                1                0                0 #>  6                0                0                1                0 #>  7                1                0                0                0 #>  8                0                1                0                0 #>  9                0                0                1                0 #> 10                1                0                0                0 #> # ℹ 590 more rows #> # ℹ 19 more variables: x_group_2_time_3 <int>, x_group_2_time_4 <int>, #> #   nuisance_biomarker1 <dbl>, nuisance_biomarker2 <dbl>, #> #   nuisance_status1_absent <dbl>, nuisance_status2_present <dbl>, #> #   nuisance_baseline <dbl>, nuisance_baseline.timetime_2 <dbl>, #> #   nuisance_baseline.timetime_3 <dbl>, patient <chr>, time <chr>, #> #   change <dbl>, missing <lgl>, baseline <dbl>, group <chr>, … summary(archetype) #> # This object is an informative prior archetype in brms.mmrm. #> # The fixed effect parameters of interest express the #> # marginal means as follows: #> #  #> #    group_1:time_2 = x_group_1_time_2 #> #    group_1:time_3 = x_group_1_time_3 #> #    group_1:time_4 = x_group_1_time_4 #> #    group_2:time_2 = x_group_2_time_2 #> #    group_2:time_3 = x_group_2_time_3 #> #    group_2:time_4 = x_group_2_time_4 formula <- brm_formula(archetype) formula #> change ~ 0 + x_group_1_time_2 + x_group_1_time_3 + x_group_1_time_4 + x_group_2_time_2 + x_group_2_time_3 + x_group_2_time_4 + nuisance_biomarker1 + nuisance_biomarker2 + nuisance_status1_absent + nuisance_status2_present + nuisance_baseline + nuisance_baseline.timetime_2 + nuisance_baseline.timetime_3 + unstr(time = time, gr = patient)  #> sigma ~ 0 + time prior <- brm_prior_label(   code = \"normal(1, 2.2)\",   group = \"group_1\",   time = \"time_2\" ) |>   brm_prior_label(\"normal(1, 3.3)\", group = \"group_1\", time = \"time_3\") |>   brm_prior_label(\"normal(1, 4.4)\", group = \"group_1\", time = \"time_4\") |>   brm_prior_label(\"normal(2, 2.2)\", group = \"group_2\", time = \"time_2\") |>   brm_prior_label(\"normal(2, 3.3)\", group = \"group_2\", time = \"time_3\") |>   brm_prior_label(\"normal(2, 4.4)\", group = \"group_2\", time = \"time_4\") |>   brm_prior_archetype(archetype) prior #>           prior class             coef group resp dpar nlpar   lb   ub source #>  normal(1, 2.2)     b x_group_1_time_2                       <NA> <NA>   user #>  normal(1, 3.3)     b x_group_1_time_3                       <NA> <NA>   user #>  normal(1, 4.4)     b x_group_1_time_4                       <NA> <NA>   user #>  normal(2, 2.2)     b x_group_2_time_2                       <NA> <NA>   user #>  normal(2, 3.3)     b x_group_2_time_3                       <NA> <NA>   user #>  normal(2, 4.4)     b x_group_2_time_4                       <NA> <NA>   user class(prior) #> [1] \"brmsprior\"  \"data.frame\" if (identical(Sys.getenv(\"BRM_EXAMPLES\", unset = \"\"), \"true\")) { tmp <- utils::capture.output(   suppressMessages(     suppressWarnings(       model <- brm_model(         data = archetype,         formula = formula,         prior = prior,         chains = 1,         iter = 100,         refresh = 0       )     )   ) ) suppressWarnings(print(model)) brms::prior_summary(model) draws <- brm_marginal_draws(   data = archetype,   formula = formula,   model = model ) summaries_model <- brm_marginal_summaries(draws) summaries_data <- brm_marginal_data(data) brm_plot_compare(model = summaries_model, data = summaries_data) }"},{"path":"/reference/brm_archetype_effects.html","id":null,"dir":"Reference","previous_headings":"","what":"Treatment effect archetype — brm_archetype_effects","title":"Treatment effect archetype — brm_archetype_effects","text":"Create informative prior archetype simple treatment effect parameterization.","code":""},{"path":"/reference/brm_archetype_effects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Treatment effect archetype — brm_archetype_effects","text":"","code":"brm_archetype_effects(   data,   covariates = TRUE,   prefix_interest = \"x_\",   prefix_nuisance = \"nuisance_\",   baseline = !is.null(attr(data, \"brm_baseline\")),   baseline_subgroup = !is.null(attr(data, \"brm_baseline\")) && !is.null(attr(data,     \"brm_subgroup\")),   baseline_subgroup_time = !is.null(attr(data, \"brm_baseline\")) && !is.null(attr(data,     \"brm_subgroup\")),   baseline_time = !is.null(attr(data, \"brm_baseline\")) )"},{"path":"/reference/brm_archetype_effects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Treatment effect archetype — brm_archetype_effects","text":"data classed data frame brm_data(), informative prior archetype function like brm_archetype_successive_cells(). covariates Logical length 1. TRUE (default) include additive covariates declared covariates argument brm_data(), FALSE omit. informative prior archetypes, option set functions like brm_archetype_successive_cells() rather brm_formula() order make sure columns appropriately centered underlying model matrix full rank. prefix_interest Character string prepend new columns generated fixed effects interest (relating group, subgroup, /time). rare cases, may need set non-default prefix prevent name conflicts existing columns data, rename columns data. prefix_interest must value prefix_nuisance. prefix_nuisance prefix_interest, relating generated fixed effects interest (relating group, subgroup, time). Must value prefix_interest. baseline Logical length 1. TRUE include additive effect baseline response, FALSE omit. Default TRUE brm_data() previously declared baseline variable dataset. Ignored informative prior archetypes. informative prior archetypes, option set functions like brm_archetype_successive_cells() rather brm_formula() order make sure columns appropriately centered underlying model matrix full rank. baseline_subgroup Logical length 1. baseline_subgroup_time Logical length 1. TRUE include baseline--subgroup--time interaction, FALSE omit. Default TRUE brm_data() previously declared baseline subgroup variables dataset. Ignored informative prior archetypes. informative prior archetypes, option set functions like brm_archetype_successive_cells() rather brm_formula() order make sure columns appropriately centered underlying model matrix full rank. baseline_time Logical length 1. TRUE include baseline--time interaction, FALSE omit. Default TRUE brm_data() previously declared baseline variable dataset. Ignored informative prior archetypes. informative prior archetypes, option set functions like brm_archetype_successive_cells() rather brm_formula() order make sure columns appropriately centered underlying model matrix full rank.","code":""},{"path":"/reference/brm_archetype_effects.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Treatment effect archetype — brm_archetype_effects","text":"special classed tibble data tailored successive differences archetype. dataset augmented extra columns \"archetype_\" prefix, well special attributes tell downstream functions like brm_formula() object.","code":""},{"path":"/reference/brm_archetype_effects.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Treatment effect archetype — brm_archetype_effects","text":"archetype, fixed effect either placebo response treatment effect. illustrate, suppose dataset two treatment groups B, time points 1, 2, 3, covariates. Assume group reference group (e.g. placebo). Let mu_gt marginal mean response group g time t given data hyperparameters. model fixed effect parameters beta_1, beta_2, ..., beta_6 express marginal means mu_gt follows:   , beta_2 group mean treatment group time 2, beta_5 treatment effect B relative time 2.","code":"`mu_A1 = beta_1`   `mu_A2 = beta_2`   `mu_A3 = beta_3`    `mu_B1 = beta_1 + beta_4`   `mu_B2 = beta_2 + beta_5`   `mu_B3 = beta_3 + beta_6`"},{"path":"/reference/brm_archetype_effects.html","id":"prior-labeling-for-brm-archetype-effects-","dir":"Reference","previous_headings":"","what":"Prior labeling for brm_archetype_effects()","title":"Treatment effect archetype — brm_archetype_effects","text":"reference group (e.g. placebo) fixed effect cell mean time point. non-reference group, fixed effect treatment effect relative reference (time point). labeling scheme brm_prior_label() brm_prior_archetype() translate straightforwardly. example, brm_prior_label(code = \"normal(1.2, 5)\", group = \"\", time = \"2\") declares normal(1.2, 5) beta_2 (cell mean reference group time 2). Similarly, brm_prior_label(code = \"normal(1.3, 6)\", group = \"B\", time = \"2\") declares normal(1.3, 6) prior treatment effect group B relative group discrete time point 2. confirm set prior correctly, compare brms prior output summary(your_archetype). See examples details.","code":""},{"path":"/reference/brm_archetype_effects.html","id":"nuisance-variables","dir":"Reference","previous_headings":"","what":"Nuisance variables","title":"Treatment effect archetype — brm_archetype_effects","text":"presence covariate adjustment, functions like brm_archetype_successive_cells() convert nuisance factors binary dummy variables, center dummy variables continuous nuisance variables means data. ensures main model coefficients interest implicitly conditional subset data. words, preprocessing nuisance variables way preserves interpretations fixed effects interest, ensures informative priors can specified correctly.","code":""},{"path":"/reference/brm_archetype_effects.html","id":"prior-labeling","dir":"Reference","previous_headings":"","what":"Prior labeling","title":"Treatment effect archetype — brm_archetype_effects","text":"Informative prior archetypes use labeling scheme assign priors fixed effects. works:   informative prior archetypes, process much convenient robust manually calling brms::set_prior(). However, requires understanding labels priors map parameters model. mapping varies archetype archetype, documented help pages archetype-specific functions brm_archetype_successive_cells().","code":"1. First, assign the prior of each parameter a collection   of labels from the data. This can be done manually or with   successive calls to [brm_prior_label()]. 2. Supply the labeling scheme to [brm_prior_archetype()].   [brm_prior_archetype()] uses attributes of the archetype   to map labeled priors to their rightful parameters in the model."},{"path":[]},{"path":"/reference/brm_archetype_effects.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Treatment effect archetype — brm_archetype_effects","text":"","code":"set.seed(0L) data <- brm_simulate_outline(   n_group = 2,   n_patient = 100,   n_time = 4,   rate_dropout = 0,   rate_lapse = 0 ) |>   dplyr::mutate(response = rnorm(n = dplyr::n())) |>   brm_data_change() |>   brm_simulate_continuous(names = c(\"biomarker1\", \"biomarker2\")) |>   brm_simulate_categorical(     names = c(\"status1\", \"status2\"),     levels = c(\"present\", \"absent\")   ) dplyr::select(   data,   group,   time,   patient,   starts_with(\"biomarker\"),   starts_with(\"status\") ) #> # A tibble: 600 × 7 #>    group   time   patient     biomarker1 biomarker2 status1 status2 #>    <chr>   <chr>  <chr>            <dbl>      <dbl> <chr>   <chr>   #>  1 group_1 time_2 patient_001     -1.42      -0.287 absent  present #>  2 group_1 time_3 patient_001     -1.42      -0.287 absent  present #>  3 group_1 time_4 patient_001     -1.42      -0.287 absent  present #>  4 group_1 time_2 patient_002     -1.67       1.84  absent  present #>  5 group_1 time_3 patient_002     -1.67       1.84  absent  present #>  6 group_1 time_4 patient_002     -1.67       1.84  absent  present #>  7 group_1 time_2 patient_003      1.38      -0.157 absent  absent  #>  8 group_1 time_3 patient_003      1.38      -0.157 absent  absent  #>  9 group_1 time_4 patient_003      1.38      -0.157 absent  absent  #> 10 group_1 time_2 patient_004     -0.920     -1.39  present present #> # ℹ 590 more rows archetype <- brm_archetype_effects(data) archetype #> # A tibble: 600 × 23 #>    x_group_1_time_2 x_group_1_time_3 x_group_1_time_4 x_group_2_time_2 #>  *            <int>            <int>            <int>            <int> #>  1                1                0                0                0 #>  2                0                1                0                0 #>  3                0                0                1                0 #>  4                1                0                0                0 #>  5                0                1                0                0 #>  6                0                0                1                0 #>  7                1                0                0                0 #>  8                0                1                0                0 #>  9                0                0                1                0 #> 10                1                0                0                0 #> # ℹ 590 more rows #> # ℹ 19 more variables: x_group_2_time_3 <int>, x_group_2_time_4 <int>, #> #   nuisance_biomarker1 <dbl>, nuisance_biomarker2 <dbl>, #> #   nuisance_status1_absent <dbl>, nuisance_status2_present <dbl>, #> #   nuisance_baseline <dbl>, nuisance_baseline.timetime_2 <dbl>, #> #   nuisance_baseline.timetime_3 <dbl>, patient <chr>, time <chr>, #> #   change <dbl>, missing <lgl>, baseline <dbl>, group <chr>, … summary(archetype) #> # This object is an informative prior archetype in brms.mmrm. #> # The fixed effect parameters of interest express the #> # marginal means as follows: #> #  #> #    group_1:time_2 = x_group_1_time_2 #> #    group_1:time_3 = x_group_1_time_3 #> #    group_1:time_4 = x_group_1_time_4 #> #    group_2:time_2 = x_group_1_time_2 + x_group_2_time_2 #> #    group_2:time_3 = x_group_1_time_3 + x_group_2_time_3 #> #    group_2:time_4 = x_group_1_time_4 + x_group_2_time_4 formula <- brm_formula(archetype) formula #> change ~ 0 + x_group_1_time_2 + x_group_1_time_3 + x_group_1_time_4 + x_group_2_time_2 + x_group_2_time_3 + x_group_2_time_4 + nuisance_biomarker1 + nuisance_biomarker2 + nuisance_status1_absent + nuisance_status2_present + nuisance_baseline + nuisance_baseline.timetime_2 + nuisance_baseline.timetime_3 + unstr(time = time, gr = patient)  #> sigma ~ 0 + time prior <- brm_prior_label(   code = \"normal(1, 2.2)\",   group = \"group_1\",   time = \"time_2\" ) |>   brm_prior_label(\"normal(1, 3.3)\", group = \"group_1\", time = \"time_3\") |>   brm_prior_label(\"normal(1, 4.4)\", group = \"group_1\", time = \"time_4\") |>   brm_prior_label(\"normal(2, 2.2)\", group = \"group_2\", time = \"time_2\") |>   brm_prior_label(\"normal(2, 3.3)\", group = \"group_2\", time = \"time_3\") |>   brm_prior_label(\"normal(2, 4.4)\", group = \"group_2\", time = \"time_4\") |>   brm_prior_archetype(archetype) prior #>           prior class             coef group resp dpar nlpar   lb   ub source #>  normal(1, 2.2)     b x_group_1_time_2                       <NA> <NA>   user #>  normal(1, 3.3)     b x_group_1_time_3                       <NA> <NA>   user #>  normal(1, 4.4)     b x_group_1_time_4                       <NA> <NA>   user #>  normal(2, 2.2)     b x_group_2_time_2                       <NA> <NA>   user #>  normal(2, 3.3)     b x_group_2_time_3                       <NA> <NA>   user #>  normal(2, 4.4)     b x_group_2_time_4                       <NA> <NA>   user class(prior) #> [1] \"brmsprior\"  \"data.frame\" if (identical(Sys.getenv(\"BRM_EXAMPLES\", unset = \"\"), \"true\")) { tmp <- utils::capture.output(   suppressMessages(     suppressWarnings(       model <- brm_model(         data = archetype,         formula = formula,         prior = prior,         chains = 1,         iter = 100,         refresh = 0       )     )   ) ) suppressWarnings(print(model)) brms::prior_summary(model) draws <- brm_marginal_draws(   data = archetype,   formula = formula,   model = model ) summaries_model <- brm_marginal_summaries(draws) summaries_data <- brm_marginal_data(data) brm_plot_compare(model = summaries_model, data = summaries_data) }"},{"path":"/reference/brm_archetype_successive_cells.html","id":null,"dir":"Reference","previous_headings":"","what":"Cell-means-like successive differences archetype — brm_archetype_successive_cells","title":"Cell-means-like successive differences archetype — brm_archetype_successive_cells","text":"Create informative prior archetype fixed effects successive differences adjacent time points.","code":""},{"path":"/reference/brm_archetype_successive_cells.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cell-means-like successive differences archetype — brm_archetype_successive_cells","text":"","code":"brm_archetype_successive_cells(   data,   covariates = TRUE,   prefix_interest = \"x_\",   prefix_nuisance = \"nuisance_\",   baseline = !is.null(attr(data, \"brm_baseline\")),   baseline_subgroup = !is.null(attr(data, \"brm_baseline\")) && !is.null(attr(data,     \"brm_subgroup\")),   baseline_subgroup_time = !is.null(attr(data, \"brm_baseline\")) && !is.null(attr(data,     \"brm_subgroup\")),   baseline_time = !is.null(attr(data, \"brm_baseline\")) )"},{"path":"/reference/brm_archetype_successive_cells.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cell-means-like successive differences archetype — brm_archetype_successive_cells","text":"data classed data frame brm_data(), informative prior archetype function like brm_archetype_successive_cells(). covariates Logical length 1. TRUE (default) include additive covariates declared covariates argument brm_data(), FALSE omit. informative prior archetypes, option set functions like brm_archetype_successive_cells() rather brm_formula() order make sure columns appropriately centered underlying model matrix full rank. prefix_interest Character string prepend new columns generated fixed effects interest (relating group, subgroup, /time). rare cases, may need set non-default prefix prevent name conflicts existing columns data, rename columns data. prefix_interest must value prefix_nuisance. prefix_nuisance prefix_interest, relating generated fixed effects interest (relating group, subgroup, time). Must value prefix_interest. baseline Logical length 1. TRUE include additive effect baseline response, FALSE omit. Default TRUE brm_data() previously declared baseline variable dataset. Ignored informative prior archetypes. informative prior archetypes, option set functions like brm_archetype_successive_cells() rather brm_formula() order make sure columns appropriately centered underlying model matrix full rank. baseline_subgroup Logical length 1. baseline_subgroup_time Logical length 1. TRUE include baseline--subgroup--time interaction, FALSE omit. Default TRUE brm_data() previously declared baseline subgroup variables dataset. Ignored informative prior archetypes. informative prior archetypes, option set functions like brm_archetype_successive_cells() rather brm_formula() order make sure columns appropriately centered underlying model matrix full rank. baseline_time Logical length 1. TRUE include baseline--time interaction, FALSE omit. Default TRUE brm_data() previously declared baseline variable dataset. Ignored informative prior archetypes. informative prior archetypes, option set functions like brm_archetype_successive_cells() rather brm_formula() order make sure columns appropriately centered underlying model matrix full rank.","code":""},{"path":"/reference/brm_archetype_successive_cells.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cell-means-like successive differences archetype — brm_archetype_successive_cells","text":"special classed tibble data tailored successive differences archetype. dataset augmented extra columns \"archetype_\" prefix, well special attributes tell downstream functions like brm_formula() object.","code":""},{"path":"/reference/brm_archetype_successive_cells.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cell-means-like successive differences archetype — brm_archetype_successive_cells","text":"archetype, fixed effect either intercept first time point difference two adjacent time points, treatment group set fixed effects independent treatment groups. illustrate, suppose dataset two treatment groups B, time points 1, 2, 3, covariates. Let mu_gt marginal mean response group g time t given data hyperparameters. model fixed effect parameters beta_1, beta_2, ..., beta_6 express marginal means mu_gt follows:   group , beta_1 time 1 intercept, beta_2 represents time 2 minus time 1, beta_3 represents time 3 minus time 2. beta_4, beta_5, beta_6 represent analogous roles.","code":"`mu_A1 = beta_1`   `mu_A2 = beta_1 + beta_2`   `mu_A3 = beta_1 + beta_2 + beta_3`    `mu_B1 = beta_4`   `mu_B2 = beta_4 + beta_5`   `mu_B3 = beta_4 + beta_5 + beta_6`"},{"path":"/reference/brm_archetype_successive_cells.html","id":"nuisance-variables","dir":"Reference","previous_headings":"","what":"Nuisance variables","title":"Cell-means-like successive differences archetype — brm_archetype_successive_cells","text":"presence covariate adjustment, functions like brm_archetype_successive_cells() convert nuisance factors binary dummy variables, center dummy variables continuous nuisance variables means data. ensures main model coefficients interest implicitly conditional subset data. words, preprocessing nuisance variables way preserves interpretations fixed effects interest, ensures informative priors can specified correctly.","code":""},{"path":"/reference/brm_archetype_successive_cells.html","id":"prior-labeling-for-brm-archetype-successive-cells-","dir":"Reference","previous_headings":"","what":"Prior labeling for brm_archetype_successive_cells()","title":"Cell-means-like successive differences archetype — brm_archetype_successive_cells","text":"Within treatment group, intercept labeled earliest time point, successive difference term gets successive time point label. illustrate, consider example Details section. labeling scheme brm_archetype_successive_cells(), can label prior beta_1 using brm_prior_label(code = \"normal(1.2, 5)\", group = \"\", time = \"1\"). Similarly, cal label prior beta_5 brm_prior_label(code = \"normal(1.3, 7)\", group = \"B\", time = \"2\"). confirm set prior correctly, compare brms prior output summary(your_archetype). See examples details.","code":""},{"path":"/reference/brm_archetype_successive_cells.html","id":"prior-labeling","dir":"Reference","previous_headings":"","what":"Prior labeling","title":"Cell-means-like successive differences archetype — brm_archetype_successive_cells","text":"Informative prior archetypes use labeling scheme assign priors fixed effects. works:   informative prior archetypes, process much convenient robust manually calling brms::set_prior(). However, requires understanding labels priors map parameters model. mapping varies archetype archetype, documented help pages archetype-specific functions brm_archetype_successive_cells().","code":"1. First, assign the prior of each parameter a collection   of labels from the data. This can be done manually or with   successive calls to [brm_prior_label()]. 2. Supply the labeling scheme to [brm_prior_archetype()].   [brm_prior_archetype()] uses attributes of the archetype   to map labeled priors to their rightful parameters in the model."},{"path":[]},{"path":"/reference/brm_archetype_successive_cells.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cell-means-like successive differences archetype — brm_archetype_successive_cells","text":"","code":"set.seed(0L) data <- brm_simulate_outline(   n_group = 2,   n_patient = 100,   n_time = 4,   rate_dropout = 0,   rate_lapse = 0 ) |>   dplyr::mutate(response = rnorm(n = dplyr::n())) |>   brm_data_change() |>   brm_simulate_continuous(names = c(\"biomarker1\", \"biomarker2\")) |>   brm_simulate_categorical(     names = c(\"status1\", \"status2\"),     levels = c(\"present\", \"absent\")   ) dplyr::select(   data,   group,   time,   patient,   starts_with(\"biomarker\"),   starts_with(\"status\") ) #> # A tibble: 600 × 7 #>    group   time   patient     biomarker1 biomarker2 status1 status2 #>    <chr>   <chr>  <chr>            <dbl>      <dbl> <chr>   <chr>   #>  1 group_1 time_2 patient_001     -1.42      -0.287 absent  present #>  2 group_1 time_3 patient_001     -1.42      -0.287 absent  present #>  3 group_1 time_4 patient_001     -1.42      -0.287 absent  present #>  4 group_1 time_2 patient_002     -1.67       1.84  absent  present #>  5 group_1 time_3 patient_002     -1.67       1.84  absent  present #>  6 group_1 time_4 patient_002     -1.67       1.84  absent  present #>  7 group_1 time_2 patient_003      1.38      -0.157 absent  absent  #>  8 group_1 time_3 patient_003      1.38      -0.157 absent  absent  #>  9 group_1 time_4 patient_003      1.38      -0.157 absent  absent  #> 10 group_1 time_2 patient_004     -0.920     -1.39  present present #> # ℹ 590 more rows archetype <- brm_archetype_successive_cells(data) archetype #> # A tibble: 600 × 23 #>    x_group_1_time_2 x_group_1_time_3 x_group_1_time_4 x_group_2_time_2 #>  *            <dbl>            <dbl>            <dbl>            <dbl> #>  1                1                0                0                0 #>  2                1                1                0                0 #>  3                1                1                1                0 #>  4                1                0                0                0 #>  5                1                1                0                0 #>  6                1                1                1                0 #>  7                1                0                0                0 #>  8                1                1                0                0 #>  9                1                1                1                0 #> 10                1                0                0                0 #> # ℹ 590 more rows #> # ℹ 19 more variables: x_group_2_time_3 <dbl>, x_group_2_time_4 <dbl>, #> #   nuisance_biomarker1 <dbl>, nuisance_biomarker2 <dbl>, #> #   nuisance_status1_absent <dbl>, nuisance_status2_present <dbl>, #> #   nuisance_baseline <dbl>, nuisance_baseline.timetime_2 <dbl>, #> #   nuisance_baseline.timetime_3 <dbl>, patient <chr>, time <chr>, #> #   change <dbl>, missing <lgl>, baseline <dbl>, group <chr>, … summary(archetype) #> # This object is an informative prior archetype in brms.mmrm. #> # The fixed effect parameters of interest express the #> # marginal means as follows: #> #  #> #    group_1:time_2 = x_group_1_time_2 #> #    group_1:time_3 = x_group_1_time_2 + x_group_1_time_3 #> #    group_1:time_4 = x_group_1_time_2 + x_group_1_time_3 + x_group_1_time_4 #> #    group_2:time_2 = x_group_2_time_2 #> #    group_2:time_3 = x_group_2_time_2 + x_group_2_time_3 #> #    group_2:time_4 = x_group_2_time_2 + x_group_2_time_3 + x_group_2_time_4 formula <- brm_formula(archetype) formula #> change ~ 0 + x_group_1_time_2 + x_group_1_time_3 + x_group_1_time_4 + x_group_2_time_2 + x_group_2_time_3 + x_group_2_time_4 + nuisance_biomarker1 + nuisance_biomarker2 + nuisance_status1_absent + nuisance_status2_present + nuisance_baseline + nuisance_baseline.timetime_2 + nuisance_baseline.timetime_3 + unstr(time = time, gr = patient)  #> sigma ~ 0 + time prior <- brm_prior_label(   code = \"normal(1, 2.2)\",   group = \"group_1\",   time = \"time_2\" ) |>   brm_prior_label(\"normal(1, 3.3)\", group = \"group_1\", time = \"time_3\") |>   brm_prior_label(\"normal(1, 4.4)\", group = \"group_1\", time = \"time_4\") |>   brm_prior_label(\"normal(2, 2.2)\", group = \"group_2\", time = \"time_2\") |>   brm_prior_label(\"normal(2, 3.3)\", group = \"group_2\", time = \"time_3\") |>   brm_prior_label(\"normal(2, 4.4)\", group = \"group_2\", time = \"time_4\") |>   brm_prior_archetype(archetype) prior #>           prior class             coef group resp dpar nlpar   lb   ub source #>  normal(1, 2.2)     b x_group_1_time_2                       <NA> <NA>   user #>  normal(1, 3.3)     b x_group_1_time_3                       <NA> <NA>   user #>  normal(1, 4.4)     b x_group_1_time_4                       <NA> <NA>   user #>  normal(2, 2.2)     b x_group_2_time_2                       <NA> <NA>   user #>  normal(2, 3.3)     b x_group_2_time_3                       <NA> <NA>   user #>  normal(2, 4.4)     b x_group_2_time_4                       <NA> <NA>   user class(prior) #> [1] \"brmsprior\"  \"data.frame\" if (identical(Sys.getenv(\"BRM_EXAMPLES\", unset = \"\"), \"true\")) { tmp <- utils::capture.output(   suppressMessages(     suppressWarnings(       model <- brm_model(         data = archetype,         formula = formula,         prior = prior,         chains = 1,         iter = 100,         refresh = 0       )     )   ) ) suppressWarnings(print(model)) brms::prior_summary(model) draws <- brm_marginal_draws(   data = archetype,   formula = formula,   model = model ) summaries_model <- brm_marginal_summaries(draws) summaries_data <- brm_marginal_data(data) brm_plot_compare(model = summaries_model, data = summaries_data) }"},{"path":"/reference/brm_archetype_successive_effects.html","id":null,"dir":"Reference","previous_headings":"","what":"Treatment-effect-like successive differences archetype — brm_archetype_successive_effects","title":"Treatment-effect-like successive differences archetype — brm_archetype_successive_effects","text":"Create informative prior archetype fixed effects successive differences adjacent time points terms non-reference groups treatment effects.","code":""},{"path":"/reference/brm_archetype_successive_effects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Treatment-effect-like successive differences archetype — brm_archetype_successive_effects","text":"","code":"brm_archetype_successive_effects(   data,   covariates = TRUE,   prefix_interest = \"x_\",   prefix_nuisance = \"nuisance_\",   baseline = !is.null(attr(data, \"brm_baseline\")),   baseline_subgroup = !is.null(attr(data, \"brm_baseline\")) && !is.null(attr(data,     \"brm_subgroup\")),   baseline_subgroup_time = !is.null(attr(data, \"brm_baseline\")) && !is.null(attr(data,     \"brm_subgroup\")),   baseline_time = !is.null(attr(data, \"brm_baseline\")) )"},{"path":"/reference/brm_archetype_successive_effects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Treatment-effect-like successive differences archetype — brm_archetype_successive_effects","text":"data classed data frame brm_data(), informative prior archetype function like brm_archetype_successive_cells(). covariates Logical length 1. TRUE (default) include additive covariates declared covariates argument brm_data(), FALSE omit. informative prior archetypes, option set functions like brm_archetype_successive_cells() rather brm_formula() order make sure columns appropriately centered underlying model matrix full rank. prefix_interest Character string prepend new columns generated fixed effects interest (relating group, subgroup, /time). rare cases, may need set non-default prefix prevent name conflicts existing columns data, rename columns data. prefix_interest must value prefix_nuisance. prefix_nuisance prefix_interest, relating generated fixed effects interest (relating group, subgroup, time). Must value prefix_interest. baseline Logical length 1. TRUE include additive effect baseline response, FALSE omit. Default TRUE brm_data() previously declared baseline variable dataset. Ignored informative prior archetypes. informative prior archetypes, option set functions like brm_archetype_successive_cells() rather brm_formula() order make sure columns appropriately centered underlying model matrix full rank. baseline_subgroup Logical length 1. baseline_subgroup_time Logical length 1. TRUE include baseline--subgroup--time interaction, FALSE omit. Default TRUE brm_data() previously declared baseline subgroup variables dataset. Ignored informative prior archetypes. informative prior archetypes, option set functions like brm_archetype_successive_cells() rather brm_formula() order make sure columns appropriately centered underlying model matrix full rank. baseline_time Logical length 1. TRUE include baseline--time interaction, FALSE omit. Default TRUE brm_data() previously declared baseline variable dataset. Ignored informative prior archetypes. informative prior archetypes, option set functions like brm_archetype_successive_cells() rather brm_formula() order make sure columns appropriately centered underlying model matrix full rank.","code":""},{"path":"/reference/brm_archetype_successive_effects.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Treatment-effect-like successive differences archetype — brm_archetype_successive_effects","text":"special classed tibble data tailored successive differences archetype. dataset augmented extra columns \"archetype_\" prefix, well special attributes tell downstream functions like brm_formula() object.","code":""},{"path":"/reference/brm_archetype_successive_effects.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Treatment-effect-like successive differences archetype — brm_archetype_successive_effects","text":"Within reference treatment group (e.g. placebo), fixed effect either intercept first time point difference two adjacent time points. non-reference treatment group, model parameter defined effect relative reference group. illustrate, suppose dataset two treatment groups B, time points 1, 2, 3, covariates. Say group reference group (e.g. placebo). Let mu_gt marginal mean response group g time t given data hyperparameters. model fixed effect parameters beta_1, beta_2, ..., beta_6 express marginal means mu_gt follows:   group , beta_1 time 1 intercept, beta_2 represents time 2 minus time 1, beta_3 represents time 3 minus time 2. beta_4 treatment effect group B relative group time 1. beta_5 treatment effect difference times 2 1, relative treatment group . Similarly, beta_6 treatment effect difference times 3 2, relative treatment group .","code":"`mu_A1 = beta_1`   `mu_A2 = beta_1 + beta_2`   `mu_A3 = beta_1 + beta_2 + beta_3`    `mu_B1 = beta_1 + beta_4`   `mu_B2 = beta_1 + beta_2 + beta_4 + beta_5`   `mu_B3 = beta_1 + beta_2 + beta_3 + beta_4 + beta_5 + beta_6`"},{"path":"/reference/brm_archetype_successive_effects.html","id":"prior-labeling-for-brm-archetype-successive-effects-","dir":"Reference","previous_headings":"","what":"Prior labeling for brm_archetype_successive_effects()","title":"Treatment-effect-like successive differences archetype — brm_archetype_successive_effects","text":"Within treatment group, intercept labeled earliest time point, successive difference term gets successive time point label. illustrate, consider example Details section. labeling scheme brm_archetype_successive_effects(), can label prior beta_1 using brm_prior_label(code = \"normal(1.2, 5)\", group = \"\", time = \"1\"). Similarly, cal label prior beta_5 brm_prior_label(code = \"normal(1.3, 7)\", group = \"B\", time = \"2\"). confirm set prior correctly, compare brms prior output summary(your_archetype). See examples details.","code":""},{"path":"/reference/brm_archetype_successive_effects.html","id":"nuisance-variables","dir":"Reference","previous_headings":"","what":"Nuisance variables","title":"Treatment-effect-like successive differences archetype — brm_archetype_successive_effects","text":"presence covariate adjustment, functions like brm_archetype_successive_cells() convert nuisance factors binary dummy variables, center dummy variables continuous nuisance variables means data. ensures main model coefficients interest implicitly conditional subset data. words, preprocessing nuisance variables way preserves interpretations fixed effects interest, ensures informative priors can specified correctly.","code":""},{"path":"/reference/brm_archetype_successive_effects.html","id":"prior-labeling","dir":"Reference","previous_headings":"","what":"Prior labeling","title":"Treatment-effect-like successive differences archetype — brm_archetype_successive_effects","text":"Informative prior archetypes use labeling scheme assign priors fixed effects. works:   informative prior archetypes, process much convenient robust manually calling brms::set_prior(). However, requires understanding labels priors map parameters model. mapping varies archetype archetype, documented help pages archetype-specific functions brm_archetype_successive_cells().","code":"1. First, assign the prior of each parameter a collection   of labels from the data. This can be done manually or with   successive calls to [brm_prior_label()]. 2. Supply the labeling scheme to [brm_prior_archetype()].   [brm_prior_archetype()] uses attributes of the archetype   to map labeled priors to their rightful parameters in the model."},{"path":[]},{"path":"/reference/brm_archetype_successive_effects.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Treatment-effect-like successive differences archetype — brm_archetype_successive_effects","text":"","code":"set.seed(0L) data <- brm_simulate_outline(   n_group = 2,   n_patient = 100,   n_time = 4,   rate_dropout = 0,   rate_lapse = 0 ) |>   dplyr::mutate(response = rnorm(n = dplyr::n())) |>   brm_data_change() |>   brm_simulate_continuous(names = c(\"biomarker1\", \"biomarker2\")) |>   brm_simulate_categorical(     names = c(\"status1\", \"status2\"),     levels = c(\"present\", \"absent\")   ) dplyr::select(   data,   group,   time,   patient,   starts_with(\"biomarker\"),   starts_with(\"status\") ) #> # A tibble: 600 × 7 #>    group   time   patient     biomarker1 biomarker2 status1 status2 #>    <chr>   <chr>  <chr>            <dbl>      <dbl> <chr>   <chr>   #>  1 group_1 time_2 patient_001     -1.42      -0.287 absent  present #>  2 group_1 time_3 patient_001     -1.42      -0.287 absent  present #>  3 group_1 time_4 patient_001     -1.42      -0.287 absent  present #>  4 group_1 time_2 patient_002     -1.67       1.84  absent  present #>  5 group_1 time_3 patient_002     -1.67       1.84  absent  present #>  6 group_1 time_4 patient_002     -1.67       1.84  absent  present #>  7 group_1 time_2 patient_003      1.38      -0.157 absent  absent  #>  8 group_1 time_3 patient_003      1.38      -0.157 absent  absent  #>  9 group_1 time_4 patient_003      1.38      -0.157 absent  absent  #> 10 group_1 time_2 patient_004     -0.920     -1.39  present present #> # ℹ 590 more rows archetype <- brm_archetype_successive_effects(data) archetype #> # A tibble: 600 × 23 #>    x_group_1_time_2 x_group_1_time_3 x_group_1_time_4 x_group_2_time_2 #>  *            <dbl>            <dbl>            <dbl>            <dbl> #>  1                1                0                0                0 #>  2                1                1                0                0 #>  3                1                1                1                0 #>  4                1                0                0                0 #>  5                1                1                0                0 #>  6                1                1                1                0 #>  7                1                0                0                0 #>  8                1                1                0                0 #>  9                1                1                1                0 #> 10                1                0                0                0 #> # ℹ 590 more rows #> # ℹ 19 more variables: x_group_2_time_3 <dbl>, x_group_2_time_4 <dbl>, #> #   nuisance_biomarker1 <dbl>, nuisance_biomarker2 <dbl>, #> #   nuisance_status1_absent <dbl>, nuisance_status2_present <dbl>, #> #   nuisance_baseline <dbl>, nuisance_baseline.timetime_2 <dbl>, #> #   nuisance_baseline.timetime_3 <dbl>, patient <chr>, time <chr>, #> #   change <dbl>, missing <lgl>, baseline <dbl>, group <chr>, … summary(archetype) #> # This object is an informative prior archetype in brms.mmrm. #> # The fixed effect parameters of interest express the #> # marginal means as follows: #> #  #> #    group_1:time_2 = x_group_1_time_2 #> #    group_1:time_3 = x_group_1_time_2 + x_group_1_time_3 #> #    group_1:time_4 = x_group_1_time_2 + x_group_1_time_3 + x_group_1_time_4 #> #    group_2:time_2 = x_group_1_time_2 + x_group_2_time_2 #> #    group_2:time_3 = x_group_1_time_2 + x_group_1_time_3 + x_group_2_time_2 + x_group_2_time_3 #> #    group_2:time_4 = x_group_1_time_2 + x_group_1_time_3 + x_group_1_time_4 + x_group_2_time_2 + x_group_2_time_3 + x_group_2_time_4 formula <- brm_formula(archetype) formula #> change ~ 0 + x_group_1_time_2 + x_group_1_time_3 + x_group_1_time_4 + x_group_2_time_2 + x_group_2_time_3 + x_group_2_time_4 + nuisance_biomarker1 + nuisance_biomarker2 + nuisance_status1_absent + nuisance_status2_present + nuisance_baseline + nuisance_baseline.timetime_2 + nuisance_baseline.timetime_3 + unstr(time = time, gr = patient)  #> sigma ~ 0 + time prior <- brm_prior_label(   code = \"normal(1, 2.2)\",   group = \"group_1\",   time = \"time_2\" ) |>   brm_prior_label(\"normal(1, 3.3)\", group = \"group_1\", time = \"time_3\") |>   brm_prior_label(\"normal(1, 4.4)\", group = \"group_1\", time = \"time_4\") |>   brm_prior_label(\"normal(2, 2.2)\", group = \"group_2\", time = \"time_2\") |>   brm_prior_label(\"normal(2, 3.3)\", group = \"group_2\", time = \"time_3\") |>   brm_prior_label(\"normal(2, 4.4)\", group = \"group_2\", time = \"time_4\") |>   brm_prior_archetype(archetype) prior #>           prior class             coef group resp dpar nlpar   lb   ub source #>  normal(1, 2.2)     b x_group_1_time_2                       <NA> <NA>   user #>  normal(1, 3.3)     b x_group_1_time_3                       <NA> <NA>   user #>  normal(1, 4.4)     b x_group_1_time_4                       <NA> <NA>   user #>  normal(2, 2.2)     b x_group_2_time_2                       <NA> <NA>   user #>  normal(2, 3.3)     b x_group_2_time_3                       <NA> <NA>   user #>  normal(2, 4.4)     b x_group_2_time_4                       <NA> <NA>   user class(prior) #> [1] \"brmsprior\"  \"data.frame\" if (identical(Sys.getenv(\"BRM_EXAMPLES\", unset = \"\"), \"true\")) { tmp <- utils::capture.output(   suppressMessages(     suppressWarnings(       model <- brm_model(         data = archetype,         formula = formula,         prior = prior,         chains = 1,         iter = 100,         refresh = 0       )     )   ) ) suppressWarnings(print(model)) brms::prior_summary(model) draws <- brm_marginal_draws(   data = archetype,   formula = formula,   model = model ) summaries_model <- brm_marginal_summaries(draws) summaries_data <- brm_marginal_data(data) brm_plot_compare(model = summaries_model, data = summaries_data) }"},{"path":"/reference/brm_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Create and preprocess an MMRM dataset. — brm_data","title":"Create and preprocess an MMRM dataset. — brm_data","text":"Create dataset analyze MMRM.","code":""},{"path":"/reference/brm_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create and preprocess an MMRM dataset. — brm_data","text":"","code":"brm_data(   data,   outcome = \"CHG\",   role = \"change\",   baseline = NULL,   group = \"TRT01P\",   subgroup = NULL,   time = \"AVISIT\",   patient = \"USUBJID\",   covariates = character(0L),   missing = NULL,   reference_group = \"Placebo\",   level_control = NULL,   reference_subgroup = NULL,   reference_time = NULL,   level_baseline = NULL )"},{"path":"/reference/brm_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create and preprocess an MMRM dataset. — brm_data","text":"data Data frame tibble longitudinal data. outcome Character length 1, name outcome variable. role Character length 1. Either \"response\" outcome raw response variable (e.g. AVAL) \"change\" outcome change baseline (e.g. CHG). baseline Character length 1, name baseline response variable. relevant response variable change baseline. Supply NULL ignore omit. group Character length 1, name treatment group variable. Must point character vector data. Factors converted characters. subgroup Character length 1, optional name discrete subgroup variable. Set NULL omit subgroup (default). time Character length 1, name discrete time variable. Must point character vector data. Factors converted characters. patient Character length 1, name patient ID variable. covariates Character vector names covariates. missing Character length 1, name optional variable simulated dataset indicate outcome values missing. Set NULL omit. reference_group Character length 1, Level group column indicate control group. reference_group applies post-processing happens functions like brm_marginal_draws() downstream model. control fixed effect mapping model matrix brms derives formula brm_formula(). level_control Deprecated 2024-01-11 (version 0.2.0.9002). Use reference_group instead. reference_subgroup Character length 1, level subgroup column use reference pairwise differences computing marginal means downstream model. control fixed effect mapping model matrix brms derives formula brm_formula(). reference_time Character length 1 NULL, level time column indicate baseline time point. value present data outcome variable change baseline, must data outcome variable raw response brms.mmrm can produce model-based marginal estimates change baseline. words, set reference_time NULL role \"change\", set reference_time non-null value data[[time]] role \"response\". Note: reference_time applies post-processing happens functions like brm_marginal_draws() downstream model. control fixed effect mapping model matrix brms derives formula brm_formula(). level_baseline Deprecated 2024-01-11 (version 0.2.0.9002). Use reference_time instead.","code":""},{"path":"/reference/brm_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create and preprocess an MMRM dataset. — brm_data","text":"classed tibble attributes denote features data treatment group discrete time variables.","code":""},{"path":"/reference/brm_data.html","id":"preprocessing","dir":"Reference","previous_headings":"","what":"Preprocessing","title":"Create and preprocess an MMRM dataset. — brm_data","text":"preprocessing steps brm_data() follows: Perform basic assertions make sure data arguments properly formatted. Convert group time columns character vectors. Sanitize levels group time columns using make.names(unique = FALSE, allow_ = TRUE) ensure agreement data output brms. implicitly missing outcome observation, add explicit row outcome variable equal NA_real_. Arrange rows data group, patient, discrete time. Select columns data relevant MMRM analysis.","code":""},{"path":"/reference/brm_data.html","id":"separation-string","dir":"Reference","previous_headings":"","what":"Separation string","title":"Create and preprocess an MMRM dataset. — brm_data","text":"Post-processing brm_marginal_draws() names group--time marginal means delimiting character string Sys.getenv(\"BRM_SEP\", unset = \"|\"). Neither column names element names group time variables can contain string. set custom string , use Sys.setenv(BRM_SEP = \"YOUR_CUSTOM_STRING\").","code":""},{"path":[]},{"path":"/reference/brm_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create and preprocess an MMRM dataset. — brm_data","text":"","code":"set.seed(0) data <- brm_simulate_simple()$data colnames(data) <- paste0(\"col_\", colnames(data)) data #> # A tibble: 800 × 4 #>    col_response col_group col_time col_patient #>           <dbl> <chr>     <chr>    <chr>       #>  1        1.47  group_1   time_1   patient_001 #>  2        3.10  group_1   time_2   patient_001 #>  3        2.22  group_1   time_3   patient_001 #>  4        0.215 group_1   time_4   patient_001 #>  5        1.03  group_1   time_1   patient_002 #>  6        2.28  group_1   time_2   patient_002 #>  7        2.36  group_1   time_3   patient_002 #>  8        2.33  group_1   time_4   patient_002 #>  9        0.128 group_1   time_1   patient_003 #> 10        1.89  group_1   time_2   patient_003 #> # ℹ 790 more rows brm_data(   data = data,   outcome = \"col_response\",   role = \"response\",   group = \"col_group\",   time = \"col_time\",   patient = \"col_patient\",   reference_group = \"group_1\",   reference_time = \"time_1\" ) #> # A tibble: 800 × 4 #>    col_response col_group col_time col_patient #>           <dbl> <chr>     <chr>    <chr>       #>  1        1.47  group_1   time_1   patient_001 #>  2        3.10  group_1   time_2   patient_001 #>  3        2.22  group_1   time_3   patient_001 #>  4        0.215 group_1   time_4   patient_001 #>  5        1.03  group_1   time_1   patient_002 #>  6        2.28  group_1   time_2   patient_002 #>  7        2.36  group_1   time_3   patient_002 #>  8        2.33  group_1   time_4   patient_002 #>  9        0.128 group_1   time_1   patient_003 #> 10        1.89  group_1   time_2   patient_003 #> # ℹ 790 more rows"},{"path":"/reference/brm_data_change.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert to change from baseline. — brm_data_change","title":"Convert to change from baseline. — brm_data_change","text":"Convert dataset raw response change baseline.","code":""},{"path":"/reference/brm_data_change.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert to change from baseline. — brm_data_change","text":"","code":"brm_data_change(data, name_change = \"change\", name_baseline = \"baseline\")"},{"path":"/reference/brm_data_change.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert to change from baseline. — brm_data_change","text":"data classed tibble (e.g. brm_data()) raw response outcome variable (role = \"response\" brm_data()). name_change Character length 1, name new outcome column change baseline. name_baseline Character length 1, name new column original baseline response.","code":""},{"path":"/reference/brm_data_change.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert to change from baseline. — brm_data_change","text":"classed tibble change baseline outcome variable internal attributes modified accordingly. special baseline column also created, original raw response column removed. new baseline column comprised elements response variable corresponding reference_time argument brm_data(). column denote missing values simulation purposes, e.g. \"missing\" column generated brm_simulate_outline(), missing baseline values propagated accordingly change baseline missing either post-baseline response missing baseline response missing.","code":""},{"path":[]},{"path":"/reference/brm_data_change.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert to change from baseline. — brm_data_change","text":"","code":"set.seed(0) data <- brm_data(   data = dplyr::rename(brm_simulate_simple()$data, y_values = response),   outcome = \"y_values\",   role = \"response\",   group = \"group\",   time = \"time\",   patient = \"patient\",   reference_group = \"group_1\",   reference_time = \"time_1\" ) data #> # A tibble: 800 × 4 #>    y_values group   time   patient     #>       <dbl> <chr>   <chr>  <chr>       #>  1    1.47  group_1 time_1 patient_001 #>  2    3.10  group_1 time_2 patient_001 #>  3    2.22  group_1 time_3 patient_001 #>  4    0.215 group_1 time_4 patient_001 #>  5    1.03  group_1 time_1 patient_002 #>  6    2.28  group_1 time_2 patient_002 #>  7    2.36  group_1 time_3 patient_002 #>  8    2.33  group_1 time_4 patient_002 #>  9    0.128 group_1 time_1 patient_003 #> 10    1.89  group_1 time_2 patient_003 #> # ℹ 790 more rows attr(data, \"brm_role\") #> [1] \"response\" attr(data, \"brm_outcome\") #> [1] \"y_values\" attr(data, \"brm_baseline\") #> NULL attr(data, \"brm_reference_time\") #> [1] \"time_1\" changed <- brm_data_change(data = data, name_change = \"delta\") changed #> # A tibble: 600 × 5 #>     delta baseline group   time   patient     #>     <dbl>    <dbl> <chr>   <chr>  <chr>       #>  1  1.63     1.47  group_1 time_2 patient_001 #>  2  0.750    1.47  group_1 time_3 patient_001 #>  3 -1.25     1.47  group_1 time_4 patient_001 #>  4  1.25     1.03  group_1 time_2 patient_002 #>  5  1.33     1.03  group_1 time_3 patient_002 #>  6  1.29     1.03  group_1 time_4 patient_002 #>  7  1.76     0.128 group_1 time_2 patient_003 #>  8  2.37     0.128 group_1 time_3 patient_003 #>  9  1.27     0.128 group_1 time_4 patient_003 #> 10  1.46     1.22  group_1 time_2 patient_004 #> # ℹ 590 more rows attr(changed, \"brm_role\") #> [1] \"change\" attr(changed, \"brm_outcome\") #> [1] \"delta\" attr(changed, \"brm_baseline\") #> [1] \"baseline\" attr(data, \"brm_reference_time\") #> [1] \"time_1\""},{"path":"/reference/brm_formula.html","id":null,"dir":"Reference","previous_headings":"","what":"Model formula — brm_formula","title":"Model formula — brm_formula","text":"Build model formula MMRM, either generic brm_data() dataset informative prior archetype.","code":""},{"path":"/reference/brm_formula.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Model formula — brm_formula","text":"","code":"brm_formula(   data,   check_rank = TRUE,   sigma = brms.mmrm::brm_formula_sigma(data = data, check_rank = check_rank),   correlation = \"unstructured\",   autoregressive_order = 1L,   moving_average_order = 1L,   residual_covariance_arma_estimation = FALSE,   ... )  # S3 method for default brm_formula(   data,   check_rank = TRUE,   sigma = brms.mmrm::brm_formula_sigma(data = data, check_rank = check_rank),   correlation = \"unstructured\",   autoregressive_order = 1L,   moving_average_order = 1L,   residual_covariance_arma_estimation = FALSE,   intercept = TRUE,   baseline = !is.null(attr(data, \"brm_baseline\")),   baseline_subgroup = !is.null(attr(data, \"brm_baseline\")) && !is.null(attr(data,     \"brm_subgroup\")),   baseline_subgroup_time = !is.null(attr(data, \"brm_baseline\")) && !is.null(attr(data,     \"brm_subgroup\")),   baseline_time = !is.null(attr(data, \"brm_baseline\")),   covariates = TRUE,   group = TRUE,   group_subgroup = !is.null(attr(data, \"brm_subgroup\")),   group_subgroup_time = !is.null(attr(data, \"brm_subgroup\")),   group_time = TRUE,   subgroup = !is.null(attr(data, \"brm_subgroup\")),   subgroup_time = !is.null(attr(data, \"brm_subgroup\")),   time = TRUE,   ...,   effect_baseline = NULL,   effect_group = NULL,   effect_time = NULL,   interaction_baseline = NULL,   interaction_group = NULL )  # S3 method for brms_mmrm_archetype brm_formula(   data,   check_rank = TRUE,   sigma = brms.mmrm::brm_formula_sigma(data = data, check_rank = check_rank),   correlation = \"unstructured\",   autoregressive_order = 1L,   moving_average_order = 1L,   residual_covariance_arma_estimation = FALSE,   ... )"},{"path":"/reference/brm_formula.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Model formula — brm_formula","text":"data classed data frame brm_data(), informative prior archetype function like brm_archetype_successive_cells(). check_rank TRUE check rank model matrix throw error rank deficiency detected. FALSE skip check. Rank-deficient models may non-identifiable parameters recommended choose full-rank mapping. sigma formula produced brm_formula_sigma(). formula base R formula S3 class \"brms_mmrm_formula_sigma\", controls parameterization residual standard deviations sigma. correlation Character length 1, name correlation structure. correlation matrix square T x T matrix, T number discrete time points data. matrix describes correlations time points patient, modeled residuals. Different patients modeled independent. correlation argument controls matrix parameterized, choices given brms listed https://paul-buerkner.github.io/brms/reference/autocor-terms.html, choice ultimately encoded main body output formula terms like unstru() arma(), configurable arguments autoregressive_order, moving_average_order, residual_covariance_arma_estimation brm_formula(). Choices brms.mmrm: \"unstructured\": default/recommended option, fully parameterized covariance matrix unique scalar parameter unique pair discrete time points. C.f. https://paul-buerkner.github.io/brms/reference/unstr.html. \"autoregressive_moving_average\": autoregressive moving average (ARMA), c.f. https://paul-buerkner.github.io/brms/reference/arma.html. \"autoregressive\": autoregressive (AR), c.f. https://paul-buerkner.github.io/brms/reference/ar.html. \"moving_average\": moving average (MA), c.f. https://paul-buerkner.github.io/brms/reference/ma.html. \"compound_symmetry: compound symmetry, c.f. https://paul-buerkner.github.io/brms/reference/cosy.html. \"diagonal\": declare independent time points within patients. autoregressive_order Nonnegative integer, autoregressive order \"autoregressive_moving_average\" \"autoregressive\" correlation structures. moving_average_order Nonnegative integer, moving average order \"autoregressive_moving_average\" \"moving_average\" correlation structures. residual_covariance_arma_estimation TRUE FALSE, whether estimate ARMA effects using residual covariance matrices. Directly supplied cov argument brms \"autoregressive_moving_average\", \"autoregressive\", \"moving_average\" correlation structures. C.f. https://paul-buerkner.github.io/brms/reference/arma.html. ... Named arguments specific brm_formula() methods. intercept Logical length 1. TRUE (default) include intercept, FALSE omit. baseline Logical length 1. TRUE include additive effect baseline response, FALSE omit. Default TRUE brm_data() previously declared baseline variable dataset. Ignored informative prior archetypes. informative prior archetypes, option set functions like brm_archetype_successive_cells() rather brm_formula() order make sure columns appropriately centered underlying model matrix full rank. baseline_subgroup Logical length 1. baseline_subgroup_time Logical length 1. TRUE include baseline--subgroup--time interaction, FALSE omit. Default TRUE brm_data() previously declared baseline subgroup variables dataset. Ignored informative prior archetypes. informative prior archetypes, option set functions like brm_archetype_successive_cells() rather brm_formula() order make sure columns appropriately centered underlying model matrix full rank. baseline_time Logical length 1. TRUE include baseline--time interaction, FALSE omit. Default TRUE brm_data() previously declared baseline variable dataset. Ignored informative prior archetypes. informative prior archetypes, option set functions like brm_archetype_successive_cells() rather brm_formula() order make sure columns appropriately centered underlying model matrix full rank. covariates Logical length 1. TRUE (default) include additive covariates declared covariates argument brm_data(), FALSE omit. informative prior archetypes, option set functions like brm_archetype_successive_cells() rather brm_formula() order make sure columns appropriately centered underlying model matrix full rank. group Logical length 1. TRUE (default) include additive effects treatment groups, FALSE omit. group_subgroup Logical length 1. TRUE include group--subgroup interaction, FALSE omit. Default TRUE brm_data() previously declared subgroup variable dataset. group_subgroup_time Logical length 1. TRUE include group--subgroup--time interaction, FALSE omit. Default TRUE brm_data() previously declared subgroup variable dataset. group_time Logical length 1. TRUE (default) include group--time interaction, FALSE omit. subgroup Logical length 1. TRUE include additive fixed effects subgroup levels, FALSE omit. Default TRUE brm_data() previously declared subgroup variable dataset. subgroup_time Logical length 1. TRUE include subgroup--time interaction, FALSE omit. Default TRUE brm_data() previously declared subgroup variable dataset. time Logical length 1. TRUE (default) include additive effect discrete time, FALSE omit. effect_baseline Deprecated 2024-01-16 (version 0.0.2.9002). Use baseline instead. effect_group Deprecated 2024-01-16 (version 0.0.2.9002). Use group instead. effect_time Deprecated 2024-01-16 (version 0.0.2.9002). Use time instead. interaction_baseline Deprecated 2024-01-16 (version 0.0.2.9002). Use baseline_time instead. interaction_group Deprecated 2024-01-16 (version 0.0.2.9002). Use group_time instead.","code":""},{"path":"/reference/brm_formula.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Model formula — brm_formula","text":"object class \"brmsformula\" returned brms::brmsformula(). contains fixed effect mapping, correlation structure, residual variance structure.","code":""},{"path":"/reference/brm_formula.html","id":"brm-data-formulas","dir":"Reference","previous_headings":"","what":"brm_data() formulas","title":"Model formula — brm_formula","text":"brm_data() dataset, brm_formula() builds R formula MMRM based details data choice mapping. Customize mapping toggling various TRUE/FALSE arguments brm_formula(), intercept, baseline, group_time. plausible additive effects, two-way interactions, three-way interactions can specified. following interactions supported: interactions concomitant covariates specified covariates argument brm_data(). interactions include baseline response treatment group together. Rationale: randomized controlled experiment, baseline treatment group assignment uncorrelated.","code":""},{"path":"/reference/brm_formula.html","id":"formulas-for-informative-prior-archetypes","dir":"Reference","previous_headings":"","what":"Formulas for informative prior archetypes","title":"Model formula — brm_formula","text":"Functions like brm_archetype_successive_cells() tailor datasets informative prior archetypes. specialized tailored datasets, brm_formula() works differently. still applies variance correlation structure choosing, still lets choose whether adjust nuisance covariates, longer lets toggle /individual terms model, intercept, baseline, group. Instead, ensure correct interpretation parameters, brm_formula() uses x_* nuisance_* columns generated brm_archetype_successive_cells( prefix_interest = \"x_\", prefix_nuisance = \"nuisance_\").","code":""},{"path":"/reference/brm_formula.html","id":"parameterization","dir":"Reference","previous_headings":"","what":"Parameterization","title":"Model formula — brm_formula","text":"formula brm_data() dataset, formula factor determines fixed effect mapping. ordering categorical variables data, well contrast option R, affect construction model matrix. see model matrix ultimately used brm_model(), run brms::make_standata() examine X element returned list. See examples demonstration.","code":""},{"path":[]},{"path":"/reference/brm_formula.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Model formula — brm_formula","text":"","code":"set.seed(0) data <- brm_data(   data = brm_simulate_simple()$data,   outcome = \"response\",   role = \"response\",   group = \"group\",   time = \"time\",   patient = \"patient\",   reference_group = \"group_1\",   reference_time = \"time_1\" ) brm_formula(data) #> response ~ group + group:time + time + unstr(time = time, gr = patient)  #> sigma ~ 0 + time brm_formula(data = data, intercept = FALSE, baseline = FALSE) #> response ~ 0 + group + group:time + time + unstr(time = time, gr = patient)  #> sigma ~ 0 + time formula <- brm_formula(   data = data,   intercept = FALSE,   baseline = FALSE,   group = FALSE ) formula #> response ~ 0 + group:time + time + unstr(time = time, gr = patient)  #> sigma ~ 0 + time # Standard deviations of residuals are distributional parameters that can # regress on variables in the data. homogeneous <- brm_formula_sigma(data, time = FALSE) by_group <- brm_formula_sigma(data, group = TRUE, intercept = TRUE) homogeneous #> sigma ~ 0 #> attr(,\"brm_allow_effect_size\") #> [1] TRUE #> <environment: 0x557e7c2f37f8> by_group #> sigma ~ group + time #> attr(,\"brm_allow_effect_size\") #> [1] TRUE #> <environment: 0x557e7c486d20> brm_formula(data, sigma = homogeneous) #> response ~ group + group:time + time + unstr(time = time, gr = patient)  #> sigma ~ 0 brm_formula(data, sigma = by_group) #> response ~ group + group:time + time + unstr(time = time, gr = patient)  #> sigma ~ group + time # Optional: set the contrast option, which determines the model matrix. options(contrasts = c(unordered = \"contr.SAS\", ordered = \"contr.poly\")) # See the fixed effect mapping you get from the data: head(brms::make_standata(formula = formula, data = data)$X) #>   timetime_1 timetime_2 timetime_3 timetime_4 timetime_1:groupgroup_1 #> 1          1          0          0          0                       1 #> 2          0          1          0          0                       0 #> 3          0          0          1          0                       0 #> 4          0          0          0          1                       0 #> 5          1          0          0          0                       1 #> 6          0          1          0          0                       0 #>   timetime_2:groupgroup_1 timetime_3:groupgroup_1 timetime_4:groupgroup_1 #> 1                       0                       0                       0 #> 2                       1                       0                       0 #> 3                       0                       1                       0 #> 4                       0                       0                       1 #> 5                       0                       0                       0 #> 6                       1                       0                       0 # Specify a different contrast method to use an alternative # mapping when fitting the model with brm_model(): options(   contrasts = c(unordered = \"contr.treatment\", ordered = \"contr.poly\") ) # different model matrix than before: head(brms::make_standata(formula = formula, data = data)$X) #>   timetime_1 timetime_2 timetime_3 timetime_4 timetime_1:groupgroup_2 #> 1          1          0          0          0                       0 #> 2          0          1          0          0                       0 #> 3          0          0          1          0                       0 #> 4          0          0          0          1                       0 #> 5          1          0          0          0                       0 #> 6          0          1          0          0                       0 #>   timetime_2:groupgroup_2 timetime_3:groupgroup_2 timetime_4:groupgroup_2 #> 1                       0                       0                       0 #> 2                       0                       0                       0 #> 3                       0                       0                       0 #> 4                       0                       0                       0 #> 5                       0                       0                       0 #> 6                       0                       0                       0 # Formula on an informative prior archetype: data <- brm_simulate_outline(   n_group = 2,   n_patient = 100,   n_time = 4,   rate_dropout = 0,   rate_lapse = 0 ) |>   dplyr::mutate(response = rnorm(n = dplyr::n())) |>   brm_data_change() |>   brm_simulate_continuous(names = c(\"biomarker1\", \"biomarker2\")) |>   brm_simulate_categorical(     names = \"biomarker3\",     levels = c(\"present\", \"absent\")   ) archetype <- brm_archetype_successive_cells(data) formula <- brm_formula(data = archetype) formula #> change ~ 0 + x_group_1_time_2 + x_group_1_time_3 + x_group_1_time_4 + x_group_2_time_2 + x_group_2_time_3 + x_group_2_time_4 + nuisance_biomarker1 + nuisance_biomarker2 + nuisance_biomarker3_absent + nuisance_baseline + nuisance_baseline.timetime_2 + nuisance_baseline.timetime_3 + unstr(time = time, gr = patient)  #> sigma ~ 0 + time"},{"path":"/reference/brm_formula_sigma.html","id":null,"dir":"Reference","previous_headings":"","what":"Formula for standard deviation parameters — brm_formula_sigma","title":"Formula for standard deviation parameters — brm_formula_sigma","text":"Parameterize standard deviations using formula sigma argument brm_formula().","code":""},{"path":"/reference/brm_formula_sigma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Formula for standard deviation parameters — brm_formula_sigma","text":"","code":"brm_formula_sigma(   data,   check_rank = TRUE,   intercept = FALSE,   baseline = FALSE,   baseline_subgroup = FALSE,   baseline_subgroup_time = FALSE,   baseline_time = FALSE,   covariates = FALSE,   group = FALSE,   group_subgroup = FALSE,   group_subgroup_time = FALSE,   group_time = FALSE,   subgroup = FALSE,   subgroup_time = FALSE,   time = TRUE )"},{"path":"/reference/brm_formula_sigma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Formula for standard deviation parameters — brm_formula_sigma","text":"data classed data frame brm_data(), informative prior archetype function like brm_archetype_successive_cells(). check_rank TRUE check rank model matrix sigma throw error rank deficiency detected. FALSE skip check. Rank-deficiency may cause sigma non-identifiable, may prevent MCMC converging. intercept Logical length 1. TRUE (default) include intercept, FALSE omit. baseline Logical length 1. TRUE include additive effect baseline response, FALSE omit. TRUE, effect size omitted output brm_marginal_draws(). baseline_subgroup Logical length 1. baseline_subgroup_time Logical length 1. TRUE include baseline--subgroup--time interaction, FALSE omit. TRUE, effect size omitted output brm_marginal_draws(). baseline_time Logical length 1. TRUE include baseline--time interaction, FALSE omit. TRUE, effect size omitted output brm_marginal_draws(). covariates Logical length 1. TRUE (default) include additive covariates declared covariates argument brm_data(), FALSE omit. TRUE, effect size omitted output brm_marginal_draws(). group Logical length 1. TRUE (default) include additive effects treatment groups, FALSE omit. group_subgroup Logical length 1. TRUE include group--subgroup interaction, FALSE omit. group_subgroup_time Logical length 1. TRUE include group--subgroup--time interaction, FALSE omit. group_time Logical length 1. subgroup Logical length 1. TRUE include additive fixed effects subgroup levels, FALSE omit. subgroup_time Logical length 1. TRUE include subgroup--time interaction, FALSE omit. time Logical length 1.","code":""},{"path":"/reference/brm_formula_sigma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Formula for standard deviation parameters — brm_formula_sigma","text":"base R formula S3 class \"brms_mmrm_formula_sigma\". formula controls parameterization sigma, linear-scale brms distributional parameters represent standard deviations.","code":""},{"path":"/reference/brm_formula_sigma.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Formula for standard deviation parameters — brm_formula_sigma","text":"brms, standard deviations residuals modeled parameter vector called sigma. brms.mmrm always treats sigma distributional parameter (https://paul-buerkner.github.io/brms/articles/brms_distreg.html). brm_formula_sigma() lets control parameterization sigma. output brm_formula_sigma() serves input sigma argument brm_formula(). default sigma formula sigma ~ 0 + time, time discrete time variable data. usual heterogeneous variance structure declares one standard deviation parameter time point data. Alternatively, write brm_formula_sigma(data, intercept = TRUE, time = FALSE). produce sigma ~ 1, yields single scalar variance (structure termed \"homogeneous variance\"). arguments like baseline covariates, can specify extremely complicated variance structures. However, baseline covariates used, output brm_marginal_draws() omit effect size due statistical challenges calculating marginal means draws sigma uncommon scenario.","code":""},{"path":[]},{"path":"/reference/brm_formula_sigma.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Formula for standard deviation parameters — brm_formula_sigma","text":"","code":"set.seed(0) data <- brm_data(   data = brm_simulate_simple()$data,   outcome = \"response\",   role = \"response\",   group = \"group\",   time = \"time\",   patient = \"patient\",   reference_group = \"group_1\",   reference_time = \"time_1\" ) homogeneous <- brm_formula_sigma(data, time = FALSE, intercept = TRUE) by_group <- brm_formula_sigma(data, group = TRUE, intercept = TRUE) homogeneous #> sigma ~ 1 #> attr(,\"brm_allow_effect_size\") #> [1] TRUE #> <environment: 0x557e7a616478> by_group #> sigma ~ group + time #> attr(,\"brm_allow_effect_size\") #> [1] TRUE #> <environment: 0x557e7a7db230> brm_formula(data, sigma = homogeneous) #> response ~ group + group:time + time + unstr(time = time, gr = patient)  #> sigma ~ 1 brm_formula(data, sigma = by_group) #> response ~ group + group:time + time + unstr(time = time, gr = patient)  #> sigma ~ group + time"},{"path":"/reference/brm_marginal_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Marginal summaries of the data. — brm_marginal_data","title":"Marginal summaries of the data. — brm_marginal_data","text":"Marginal summaries data.","code":""},{"path":"/reference/brm_marginal_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Marginal summaries of the data. — brm_marginal_data","text":"","code":"brm_marginal_data(   data,   level = 0.95,   use_subgroup = !is.null(attr(data, \"brm_subgroup\")) )"},{"path":"/reference/brm_marginal_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Marginal summaries of the data. — brm_marginal_data","text":"data classed data frame brm_data(), informative prior archetype function like brm_archetype_successive_cells(). level Numeric length 1 0 1, level confidence intervals. use_subgroup Logical length 1, whether summarize data subgroup level.","code":""},{"path":"/reference/brm_marginal_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Marginal summaries of the data. — brm_marginal_data","text":"tibble one row per summary statistic following columns: group: treatment group. subgroup: subgroup level. included subgroup argument brm_marginal_data() TRUE. time: discrete time point. statistic: type summary statistic. value: numeric value estimate. statistic column following possible values: mean: observed mean response removing missing values. median: observed median response removing missing values. sd: observed standard deviation response removing missing values. lower: lower bound normal equal-tailed confidence interval confidence level determined level argument. upper: upper bound normal equal-tailed confidence interval confidence level determined level argument. n_observe: number non-missing values response. n_total: number total records data given group/time combination, including observed missing values.","code":""},{"path":[]},{"path":"/reference/brm_marginal_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Marginal summaries of the data. — brm_marginal_data","text":"","code":"set.seed(0L) data <- brm_data(   data = brm_simulate_simple()$data,   outcome = \"response\",   role = \"response\",   group = \"group\",   time = \"time\",   patient = \"patient\",   reference_group = \"group_1\",   reference_time = \"time_1\" ) brm_marginal_data(data = data) #> # A tibble: 56 × 4 #>    statistic group   time    value #>    <chr>     <chr>   <chr>   <dbl> #>  1 lower     group_1 time_1  1.39  #>  2 lower     group_1 time_2  2.73  #>  3 lower     group_1 time_3  2.70  #>  4 lower     group_1 time_4  1.88  #>  5 lower     group_2 time_1 -0.118 #>  6 lower     group_2 time_2  1.23  #>  7 lower     group_2 time_3  1.12  #>  8 lower     group_2 time_4  0.300 #>  9 mean      group_1 time_1  1.23  #> 10 mean      group_1 time_2  2.57  #> # ℹ 46 more rows"},{"path":"/reference/brm_marginal_draws.html","id":null,"dir":"Reference","previous_headings":"","what":"MCMC draws from the marginal posterior of an MMRM — brm_marginal_draws","title":"MCMC draws from the marginal posterior of an MMRM — brm_marginal_draws","text":"Get marginal posterior draws fitted MMRM.","code":""},{"path":"/reference/brm_marginal_draws.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MCMC draws from the marginal posterior of an MMRM — brm_marginal_draws","text":"","code":"brm_marginal_draws(   data,   formula,   model,   transform = brms.mmrm::brm_transform_marginal(data, formula),   effect_size = TRUE,   use_subgroup = NULL,   control = NULL,   baseline = NULL )"},{"path":"/reference/brm_marginal_draws.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MCMC draws from the marginal posterior of an MMRM — brm_marginal_draws","text":"data classed data frame brm_data(), informative prior archetype function like brm_archetype_successive_cells(). formula object class \"brmsformula\" brm_formula() brms::brmsformula(). include full mapping model, including fixed effects, residual correlation, heterogeneity discrete-time-specific residual variance components. model fitted model object brm_model(). transform Matrix one row per marginal mean one column per model parameter. brm_marginal_draws() uses matrix map posterior draws model parameters posterior draws marginal means using matrix multiplication. Please use brm_transform_marginal() compute matrix modify necessary. See methods vignettes details matrix, well brms.mmrm computes marginal means generally. effect_size Logical, TRUE derive posterior samples effect size (treatment effect divided residual standard deviation). FALSE omit. brms.mmrm support effect size baseline covariates included brm_formula_sigma() formula. effect_size TRUE case, brm_marginal_draws() automatically omit effect size throw informative warning. use_subgroup Deprecated. longer used. brm_marginal_draws() longer marginalizes subgroup declared brm_data(). marginalize subgroup, declare variable covariates instead. control Deprecated. Set control group level brm_data(). baseline Deprecated. Set control group level brm_data().","code":""},{"path":"/reference/brm_marginal_draws.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"MCMC draws from the marginal posterior of an MMRM — brm_marginal_draws","text":"named list tibbles MCMC draws marginal posterior distribution treatment group time point. marginals also subgroup-specific brm_formula() included fixed effects use subgroup variable originally declared brm_data(). tibble, 1 row per posterior sample one column type marginal distribution (.e. combination treatment group discrete time point. specific tibbles returned list described : response: scale response variable. difference_time: change baseline: response particular time minus response baseline (reference_time). returned role argument brm_data() \"response\". (role \"change\", response already represents change baseline.) difference_group: treatment effect: difference_time active group minus difference_time control group (reference_group). role \"change\", treatment group instead difference response active group minus response control group. difference_subgroup: subgroup differences: difference_group subgroup level minus difference_group subgroup reference level (reference_subgroup). effect: effect size, defined treatment difference divided residual standard deviation. Omitted effect_size argument FALSE brm_formula_sigma() includes baseline covariates.","code":""},{"path":"/reference/brm_marginal_draws.html","id":"separation-string","dir":"Reference","previous_headings":"","what":"Separation string","title":"MCMC draws from the marginal posterior of an MMRM — brm_marginal_draws","text":"Post-processing brm_marginal_draws() names group--time marginal means delimiting character string Sys.getenv(\"BRM_SEP\", unset = \"|\"). Neither column names element names group time variables can contain string. set custom string , use Sys.setenv(BRM_SEP = \"YOUR_CUSTOM_STRING\").","code":""},{"path":[]},{"path":"/reference/brm_marginal_draws.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"MCMC draws from the marginal posterior of an MMRM — brm_marginal_draws","text":"","code":"if (identical(Sys.getenv(\"BRM_EXAMPLES\", unset = \"\"), \"true\")) { set.seed(0L) data <- brm_data(   data = brm_simulate_simple()$data,   outcome = \"response\",   role = \"response\",   group = \"group\",   time = \"time\",   patient = \"patient\",   reference_group = \"group_1\",   reference_time = \"time_1\" ) formula <- brm_formula(   data = data,   baseline = FALSE,   baseline_time = FALSE ) tmp <- utils::capture.output(   suppressMessages(     suppressWarnings(       model <- brm_model(         data = data,         formula = formula,         chains = 1,         iter = 100,         refresh = 0       )     )   ) ) brm_marginal_draws(data = data, formula = formula, model = model) }"},{"path":"/reference/brm_marginal_draws_average.html","id":null,"dir":"Reference","previous_headings":"","what":"Average marginal MCMC draws across time points. — brm_marginal_draws_average","title":"Average marginal MCMC draws across time points. — brm_marginal_draws_average","text":"Simple un-weighted arithmetic mean marginal MCMC draws across time points.","code":""},{"path":"/reference/brm_marginal_draws_average.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Average marginal MCMC draws across time points. — brm_marginal_draws_average","text":"","code":"brm_marginal_draws_average(data, draws, times = NULL, label = \"average\")"},{"path":"/reference/brm_marginal_draws_average.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Average marginal MCMC draws across time points. — brm_marginal_draws_average","text":"data classed data frame brm_data(), informative prior archetype function like brm_archetype_successive_cells(). draws List posterior draws brm_marginal_draws(). times Character vector discrete time point levels average MCMC samples within treatment group levels. Set NULL average across time points. Levels automatically sanitized make.names(unique = FALSE, allow_ = TRUE) ensure agreement brms variable names downstream computations. label Character length 1, time point label averages. Automatically sanitized make.names(unique = FALSE, allow_ = TRUE). Must conflict existing time point labels data label time points sanitized.","code":""},{"path":"/reference/brm_marginal_draws_average.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Average marginal MCMC draws across time points. — brm_marginal_draws_average","text":"named list tibbles MCMC draws marginal posterior distribution treatment group time point (group--subgroup--time, applicable). tibble, 1 row per posterior sample sand one column type marginal distribution (.e. combination treatment group discrete time point. specific tibbles returned list described : response: scale response variable. difference_time: change baseline: response particular time minus response baseline (reference_time). returned role argument brm_data() \"response\". (role \"change\", response already represents change baseline.) difference_group: treatment effect: difference_time active group minus difference_time control group (reference_group). role \"change\", treatment group instead difference response active group minus response control group. difference_subgroup: subgroup differences: difference_group subgroup level minus difference_group subgroup reference level (reference_subgroup).","code":""},{"path":"/reference/brm_marginal_draws_average.html","id":"separation-string","dir":"Reference","previous_headings":"","what":"Separation string","title":"Average marginal MCMC draws across time points. — brm_marginal_draws_average","text":"Post-processing brm_marginal_draws() names group--time marginal means delimiting character string Sys.getenv(\"BRM_SEP\", unset = \"|\"). Neither column names element names group time variables can contain string. set custom string , use Sys.setenv(BRM_SEP = \"YOUR_CUSTOM_STRING\").","code":""},{"path":[]},{"path":"/reference/brm_marginal_draws_average.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Average marginal MCMC draws across time points. — brm_marginal_draws_average","text":"","code":"if (identical(Sys.getenv(\"BRM_EXAMPLES\", unset = \"\"), \"true\")) { set.seed(0L) data <- brm_data(   data = brm_simulate_simple()$data,   outcome = \"response\",   role = \"response\",   group = \"group\",   time = \"time\",   patient = \"patient\",   reference_group = \"group_1\",   reference_time = \"time_1\" ) formula <- brm_formula(   data = data,   baseline = FALSE,   baseline_time = FALSE ) tmp <- utils::capture.output(   suppressMessages(     suppressWarnings(       model <- brm_model(         data = data,         formula = formula,         chains = 1,         iter = 100,         refresh = 0       )     )   ) ) draws <- brm_marginal_draws(data = data, formula = formula, model = model) brm_marginal_draws_average(draws = draws, data = data) brm_marginal_draws_average(   draws = draws,   data = data,   times = c(\"time_1\", \"time_2\"),   label = \"mean\" ) }"},{"path":"/reference/brm_marginal_probabilities.html","id":null,"dir":"Reference","previous_headings":"","what":"Marginal probabilities on the treatment effect for an MMRM. — brm_marginal_probabilities","title":"Marginal probabilities on the treatment effect for an MMRM. — brm_marginal_probabilities","text":"Marginal probabilities treatment effect MMRM.","code":""},{"path":"/reference/brm_marginal_probabilities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Marginal probabilities on the treatment effect for an MMRM. — brm_marginal_probabilities","text":"","code":"brm_marginal_probabilities(draws, direction = \"greater\", threshold = 0)"},{"path":"/reference/brm_marginal_probabilities.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Marginal probabilities on the treatment effect for an MMRM. — brm_marginal_probabilities","text":"draws Posterior draws marginal posterior obtained brm_marginal_draws(). direction Character vector length threshold. \"greater\" compute marginal posterior probability treatment effect greater threshold, \"less\" compute marginal posterior probability treatment effect less threshold. element direction[] corresponds threshold[] 1 length(direction). threshold Numeric vector length direction, treatment effect threshold computing posterior probabilities. element direction[] corresponds threshold[] 1 length(direction).","code":""},{"path":"/reference/brm_marginal_probabilities.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Marginal probabilities on the treatment effect for an MMRM. — brm_marginal_probabilities","text":"tibble probabilities form Prob(treatment effect > threshold | data) /Prob(treatment effect < threshold | data). one row per probability following columns: * group: treatment group. * subgroup: subgroup level, applicable. * time: discrete time point, * direction: direction comparison marginal probability: \"greater\" >, \"less\" < * threshold: treatment effect threshold probability statement. * value: numeric value estimate probability.","code":""},{"path":[]},{"path":"/reference/brm_marginal_probabilities.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Marginal probabilities on the treatment effect for an MMRM. — brm_marginal_probabilities","text":"","code":"if (identical(Sys.getenv(\"BRM_EXAMPLES\", unset = \"\"), \"true\")) { set.seed(0L) data <- brm_data(   data = brm_simulate_simple()$data,   outcome = \"response\",   role = \"response\",   group = \"group\",   time = \"time\",   patient = \"patient\",   reference_group = \"group_1\",   reference_time = \"time_1\" ) formula <- brm_formula(   data = data,   baseline = FALSE,   baseline_time = FALSE ) tmp <- utils::capture.output(   suppressMessages(     suppressWarnings(       model <- brm_model(         data = data,         formula = formula,         chains = 1,         iter = 100,         refresh = 0       )     )   ) ) draws <- brm_marginal_draws(data = data, formula = formula, model = model) brm_marginal_probabilities(draws, direction = \"greater\", threshold = 0) }"},{"path":"/reference/brm_marginal_summaries.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary statistics of the marginal posterior of an MMRM. — brm_marginal_summaries","title":"Summary statistics of the marginal posterior of an MMRM. — brm_marginal_summaries","text":"Summary statistics marginal posterior MMRM.","code":""},{"path":"/reference/brm_marginal_summaries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary statistics of the marginal posterior of an MMRM. — brm_marginal_summaries","text":"","code":"brm_marginal_summaries(draws, level = 0.95)"},{"path":"/reference/brm_marginal_summaries.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary statistics of the marginal posterior of an MMRM. — brm_marginal_summaries","text":"draws Posterior draws marginal posterior obtained brm_marginal_draws(). level Numeric length 1 0 1, credible level credible intervals.","code":""},{"path":"/reference/brm_marginal_summaries.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary statistics of the marginal posterior of an MMRM. — brm_marginal_summaries","text":"tibble one row per summary statistic following columns: marginal: type marginal distribution. outcome \"response\" brm_marginal_draws(), possible values include \"response\" response raw scale, \"change\" change baseline, \"difference\" treatment difference terms change baseline. outcome \"change\", possible values include \"response\" response one change baseline scale \"difference\" treatment difference. statistic: type summary statistic. \"lower\" \"upper\" bounds equal-tailed quantile-based credible interval. group: treatment group. subgroup: subgroup level, applicable. time: discrete time point. value: numeric value estimate. mcse: Monte Carlo standard error estimate. statistic column following possible values: mean: posterior mean. median: posterior median. sd: posterior standard deviation mean. lower: lower bound equal-tailed credible interval mean, credible level determined level argument. upper: upper bound equal-tailed credible interval credible level determined level argument.","code":""},{"path":[]},{"path":"/reference/brm_marginal_summaries.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary statistics of the marginal posterior of an MMRM. — brm_marginal_summaries","text":"","code":"if (identical(Sys.getenv(\"BRM_EXAMPLES\", unset = \"\"), \"true\")) { set.seed(0L) data <- brm_data(   data = brm_simulate_simple()$data,   outcome = \"response\",   role = \"response\",   group = \"group\",   time = \"time\",   patient = \"patient\",   reference_group = \"group_1\",   reference_time = \"time_1\" ) formula <- brm_formula(   data = data,   baseline = FALSE,   baseline_time = FALSE ) tmp <- utils::capture.output(   suppressMessages(     suppressWarnings(       model <- brm_model(         data = data,         formula = formula,         chains = 1,         iter = 100,         refresh = 0       )     )   ) ) draws <- brm_marginal_draws(data = data, formula = formula, model = model) suppressWarnings(brm_marginal_summaries(draws)) }"},{"path":"/reference/brm_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit an MMRM. — brm_model","title":"Fit an MMRM. — brm_model","text":"Fit MMRM model using brms.","code":""},{"path":"/reference/brm_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit an MMRM. — brm_model","text":"","code":"brm_model(   data,   formula,   ...,   prior = NULL,   family = brms::brmsfamily(family = \"gaussian\") )"},{"path":"/reference/brm_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit an MMRM. — brm_model","text":"data classed data frame brm_data(), informative prior archetype function like brm_archetype_successive_cells(). formula object class \"brmsformula\" brm_formula() brms::brmsformula(). include full mapping model, including fixed effects, residual correlation, heterogeneity discrete-time-specific residual variance components. ... Arguments brms::brm() data, formula, prior. prior Either NULL default priors \"brmsprior\" object brms::prior(). family brms family object generated brms::brmsfamily(). Must fit continuous outcome variable identity link.","code":""},{"path":"/reference/brm_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit an MMRM. — brm_model","text":"fitted model object brms.","code":""},{"path":"/reference/brm_model.html","id":"parameterization","dir":"Reference","previous_headings":"","what":"Parameterization","title":"Fit an MMRM. — brm_model","text":"formula brm_data() dataset, formula factor determines fixed effect mapping. ordering categorical variables data, well contrast option R, affect construction model matrix. see model matrix ultimately used brm_model(), run brms::make_standata() examine X element returned list. See examples demonstration.","code":""},{"path":[]},{"path":"/reference/brm_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit an MMRM. — brm_model","text":"","code":"if (identical(Sys.getenv(\"BRM_EXAMPLES\", unset = \"\"), \"true\")) { set.seed(0L) data <- brm_data(   data = brm_simulate_simple()$data,   outcome = \"response\",   role = \"response\",   group = \"group\",   time = \"time\",   patient = \"patient\",   reference_group = \"group_1\",   reference_time = \"time_1\" ) formula <- brm_formula(   data = data,   baseline = FALSE,   baseline_time = FALSE ) # Optional: set the contrast option, which determines the model matrix. options(contrasts = c(unordered = \"contr.SAS\", ordered = \"contr.poly\")) # See the fixed effect mapping you get from the data: head(brms::make_standata(formula = formula, data = data)$X) # Specify a different contrast method to use an alternative # mapping when fitting the model with brm_model(): options(   contrasts = c(unordered = \"contr.treatment\", ordered = \"contr.poly\") ) # different model matrix than before: head(brms::make_standata(formula = formula, data = data)$X) tmp <- utils::capture.output(   suppressMessages(     suppressWarnings(       model <- brm_model(         data = data,         formula = formula,         chains = 1,         iter = 100,         refresh = 0       )     )   ) ) # The output model is a brms model fit object. suppressWarnings(print(model)) # The `prior_summary()` function shows the full prior specification # which reflects the fully realized fixed effects mapping. brms::prior_summary(model) }"},{"path":"/reference/brm_plot_compare.html","id":null,"dir":"Reference","previous_headings":"","what":"Visually compare the marginals of multiple models and/or datasets. — brm_plot_compare","title":"Visually compare the marginals of multiple models and/or datasets. — brm_plot_compare","text":"Visually compare marginals multiple models /datasets.","code":""},{"path":"/reference/brm_plot_compare.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visually compare the marginals of multiple models and/or datasets. — brm_plot_compare","text":"","code":"brm_plot_compare(   ...,   marginal = \"response\",   compare = \"source\",   axis = \"time\",   facet = c(\"group\", \"subgroup\") )"},{"path":"/reference/brm_plot_compare.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visually compare the marginals of multiple models and/or datasets. — brm_plot_compare","text":"... Named tibbles marginals posterior summaries brm_marginal_summaries() /brm_marginal_data(). marginal Character length 1, kind marginal visualize. Must value marginal column supplied tibbles ... argument. applies MCMC output, data always scale response variable. compare Character length 1 identifying variable display using back--back interval plots different colors. primary comparison interest. Must one \"source\" (source marginal summaries, e.g. model dataset), \"time\" \"group\" (non-subgroup case). Can also \"subgroup\" marginal summaries subgroup-specific. value must axis facet. axis Character length 1 identifying quantity put horizontal axis. Must one \"source\" (source marginal summaries, e.g. model dataset), \"time\", \"group\" (non-subgroup case). marginals subgroup-specific, axis can also \"subgroup\". value must compare facet. facet Character vector length 1 2 quantities generate facets. element must \"source\" (source marginal summaries, e.g. model dataset), \"time\", \"group\", \"subgroup\", c(axis, facet) must unique elements. \"subgroup\" automatically removed marginal summaries subgroup column. facet length 1, faceting wrapped. facet length 2, faceting grid, first element horizontal facet.","code":""},{"path":"/reference/brm_plot_compare.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visually compare the marginals of multiple models and/or datasets. — brm_plot_compare","text":"ggplot object.","code":""},{"path":"/reference/brm_plot_compare.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Visually compare the marginals of multiple models and/or datasets. — brm_plot_compare","text":"default, brm_plot_compare() compares multiple models /datasets side--side. compare argument selects primary comparison interest, arguments axis facet control arrangement various components plot. subgroup variable automatically included supplied marginal summaries subgroup column.","code":""},{"path":[]},{"path":"/reference/brm_plot_compare.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visually compare the marginals of multiple models and/or datasets. — brm_plot_compare","text":"","code":"if (identical(Sys.getenv(\"BRM_EXAMPLES\", unset = \"\"), \"true\")) { set.seed(0L) data <- brm_data(   data = brm_simulate_simple()$data,   outcome = \"response\",   role = \"response\",   group = \"group\",   time = \"time\",   patient = \"patient\",   reference_group = \"group_1\",   reference_time = \"time_1\" ) formula <- brm_formula(   data = data,   baseline = FALSE,   baseline_time = FALSE ) tmp <- utils::capture.output(   suppressMessages(     suppressWarnings(       model <- brm_model(         data = data,         formula = formula,         chains = 1,         iter = 100,         refresh = 0       )     )   ) ) draws <- brm_marginal_draws(data = data, formula = formula, model = model) suppressWarnings(summaries_draws <- brm_marginal_summaries(draws)) summaries_data <- brm_marginal_data(data) brm_plot_compare(   model1 = summaries_draws,   model2 = summaries_draws,   data = summaries_data ) brm_plot_compare(   model1 = summaries_draws,   model2 = summaries_draws,   marginal = \"difference\" ) }"},{"path":"/reference/brm_plot_draws.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize posterior draws of marginals. — brm_plot_draws","title":"Visualize posterior draws of marginals. — brm_plot_draws","text":"Visualize posterior draws marginals.","code":""},{"path":"/reference/brm_plot_draws.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize posterior draws of marginals. — brm_plot_draws","text":"","code":"brm_plot_draws(draws, axis = \"time\", facet = c(\"group\", \"subgroup\"))"},{"path":"/reference/brm_plot_draws.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize posterior draws of marginals. — brm_plot_draws","text":"draws data frame draws element output list brm_marginal_summaries(). axis Character length 1 identifying quantity put horizontal axis. Must one \"time\" \"group\" marginal summaries subgroup-specific. marginals subgroup-specific, axis must one \"time\", \"group\", \"subgroup\". facet Character vector length 1 2 quantities generate facets. element must \"time\", \"group\", \"subgroup\", c(axis, facet) must unique elements. \"subgroup\" automatically removed marginals subgroup. facet length 1, faceting wrapped. facet length 2, faceting grid, first element horizontal facet.","code":""},{"path":"/reference/brm_plot_draws.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize posterior draws of marginals. — brm_plot_draws","text":"ggplot object.","code":""},{"path":[]},{"path":"/reference/brm_plot_draws.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize posterior draws of marginals. — brm_plot_draws","text":"","code":"if (identical(Sys.getenv(\"BRM_EXAMPLES\", unset = \"\"), \"true\")) { set.seed(0L) data <- brm_data(   data = brm_simulate_simple()$data,   outcome = \"response\",   role = \"response\",   group = \"group\",   time = \"time\",   patient = \"patient\",   reference_group = \"group_1\",   reference_time = \"time_1\" ) formula <- brm_formula(   data = data,   baseline = FALSE,   baseline_time = FALSE ) tmp <- utils::capture.output(   suppressMessages(     suppressWarnings(       model <- brm_model(         data = data,         formula = formula,         chains = 1,         iter = 100,         refresh = 0       )     )   ) ) draws <- brm_marginal_draws(data = data, formula = formula, model = model) brm_plot_draws(draws = draws$difference_time) }"},{"path":"/reference/brm_prior_archetype.html","id":null,"dir":"Reference","previous_headings":"","what":"Informative priors for fixed effects in archetypes — brm_prior_archetype","title":"Informative priors for fixed effects in archetypes — brm_prior_archetype","text":"Create brms prior fixed effects archetype.","code":""},{"path":"/reference/brm_prior_archetype.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Informative priors for fixed effects in archetypes — brm_prior_archetype","text":"","code":"brm_prior_archetype(label, archetype)"},{"path":"/reference/brm_prior_archetype.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Informative priors for fixed effects in archetypes — brm_prior_archetype","text":"label data frame one row per model parameter archetype columns indicate mapping priors labels. Generate using brm_prior_label() manually. See examples informative prior archetypes vignette details. archetype informative prior archetype generated function like brm_archetype_successive_cells().","code":""},{"path":"/reference/brm_prior_archetype.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Informative priors for fixed effects in archetypes — brm_prior_archetype","text":"brms prior object can supply prior argument brm_model().","code":""},{"path":"/reference/brm_prior_archetype.html","id":"prior-labeling","dir":"Reference","previous_headings":"","what":"Prior labeling","title":"Informative priors for fixed effects in archetypes — brm_prior_archetype","text":"Informative prior archetypes use labeling scheme assign priors fixed effects. works:   informative prior archetypes, process much convenient robust manually calling brms::set_prior(). However, requires understanding labels priors map parameters model. mapping varies archetype archetype, documented help pages archetype-specific functions brm_archetype_successive_cells().","code":"1. First, assign the prior of each parameter a collection   of labels from the data. This can be done manually or with   successive calls to [brm_prior_label()]. 2. Supply the labeling scheme to [brm_prior_archetype()].   [brm_prior_archetype()] uses attributes of the archetype   to map labeled priors to their rightful parameters in the model."},{"path":[]},{"path":"/reference/brm_prior_archetype.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Informative priors for fixed effects in archetypes — brm_prior_archetype","text":"","code":"set.seed(0L) data <- brm_simulate_outline(   n_group = 2,   n_patient = 100,   n_time = 3,   rate_dropout = 0,   rate_lapse = 0 ) |>   dplyr::mutate(response = rnorm(n = dplyr::n())) |>   brm_simulate_continuous(names = c(\"biomarker1\", \"biomarker2\")) |>   brm_simulate_categorical(     names = c(\"status1\", \"status2\"),     levels = c(\"present\", \"absent\")   ) archetype <- brm_archetype_successive_cells(data) dplyr::distinct(data, group, time) #> # A tibble: 6 × 2 #>   group   time   #>   <chr>   <chr>  #> 1 group_1 time_1 #> 2 group_1 time_2 #> 3 group_1 time_3 #> 4 group_2 time_1 #> 5 group_2 time_2 #> 6 group_2 time_3 prior <- NULL |>   brm_prior_label(\"normal(1, 1)\", group = \"group_1\", time = \"time_1\") |>   brm_prior_label(\"normal(1, 2)\", group = \"group_1\", time = \"time_2\") |>   brm_prior_label(\"normal(1, 3)\", group = \"group_1\", time = \"time_3\") |>   brm_prior_label(\"normal(2, 1)\", group = \"group_2\", time = \"time_1\") |>   brm_prior_label(\"normal(2, 2)\", group = \"group_2\", time = \"time_2\") |>   brm_prior_label(\"normal(2, 3)\", group = \"group_2\", time = \"time_3\") |>   brm_prior_archetype(archetype = archetype) prior #>         prior class             coef group resp dpar nlpar   lb   ub source #>  normal(1, 1)     b x_group_1_time_1                       <NA> <NA>   user #>  normal(1, 2)     b x_group_1_time_2                       <NA> <NA>   user #>  normal(1, 3)     b x_group_1_time_3                       <NA> <NA>   user #>  normal(2, 1)     b x_group_2_time_1                       <NA> <NA>   user #>  normal(2, 2)     b x_group_2_time_2                       <NA> <NA>   user #>  normal(2, 3)     b x_group_2_time_3                       <NA> <NA>   user class(prior) #> [1] \"brmsprior\"  \"data.frame\""},{"path":"/reference/brm_prior_label.html","id":null,"dir":"Reference","previous_headings":"","what":"Label a prior with levels in the data. — brm_prior_label","title":"Label a prior with levels in the data. — brm_prior_label","text":"Label informative prior parameter using collection levels data.","code":""},{"path":"/reference/brm_prior_label.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Label a prior with levels in the data. — brm_prior_label","text":"","code":"brm_prior_label(label = NULL, code, group, subgroup = NULL, time)"},{"path":"/reference/brm_prior_label.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Label a prior with levels in the data. — brm_prior_label","text":"label tibble prior labeling scheme far, one row per model parameter columns Stan code, treatment group, subgroup, discrete time point parameter. code Character length 1, Stan code prior. string like \"normal(1, 2.2)\". full set priors given Stan Reference Manual, available https://mc-stan.org/. See documentation brms::set_prior() details. group Value length 1, level treatment group column data label prior. treatment group column one identified group argument brm_data(). subgroup Value length 1, level subgroup column data label prior. subgroup column one identified subgroup argument brm_data(), applicable. every dataset subgroup variable. , please either ignore argument set NULL. time Value length 1, level discrete time column data label prior. discrete time column one identified time argument brm_data().","code":""},{"path":"/reference/brm_prior_label.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Label a prior with levels in the data. — brm_prior_label","text":"tibble one row per model parameter columns Stan code, treatment group, subgroup, discrete time point parameter. can supply tibble label argument brm_prior_archetype().","code":""},{"path":"/reference/brm_prior_label.html","id":"prior-labeling","dir":"Reference","previous_headings":"","what":"Prior labeling","title":"Label a prior with levels in the data. — brm_prior_label","text":"Informative prior archetypes use labeling scheme assign priors fixed effects. works:   informative prior archetypes, process much convenient robust manually calling brms::set_prior(). However, requires understanding labels priors map parameters model. mapping varies archetype archetype, documented help pages archetype-specific functions brm_archetype_successive_cells().","code":"1. First, assign the prior of each parameter a collection   of labels from the data. This can be done manually or with   successive calls to [brm_prior_label()]. 2. Supply the labeling scheme to [brm_prior_archetype()].   [brm_prior_archetype()] uses attributes of the archetype   to map labeled priors to their rightful parameters in the model."},{"path":[]},{"path":"/reference/brm_prior_label.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Label a prior with levels in the data. — brm_prior_label","text":"","code":"set.seed(0L) data <- brm_simulate_outline(   n_group = 2,   n_patient = 100,   n_time = 3,   rate_dropout = 0,   rate_lapse = 0 ) |>   dplyr::mutate(response = rnorm(n = dplyr::n())) |>   brm_simulate_continuous(names = c(\"biomarker1\", \"biomarker2\")) |>   brm_simulate_categorical(     names = c(\"status1\", \"status2\"),     levels = c(\"present\", \"absent\")   ) archetype <- brm_archetype_successive_cells(data) dplyr::distinct(data, group, time) #> # A tibble: 6 × 2 #>   group   time   #>   <chr>   <chr>  #> 1 group_1 time_1 #> 2 group_1 time_2 #> 3 group_1 time_3 #> 4 group_2 time_1 #> 5 group_2 time_2 #> 6 group_2 time_3 label <- NULL |>   brm_prior_label(\"normal(1, 1)\", group = \"group_1\", time = \"time_1\") |>   brm_prior_label(\"normal(1, 2)\", group = \"group_1\", time = \"time_2\") |>   brm_prior_label(\"normal(1, 3)\", group = \"group_1\", time = \"time_3\") |>   brm_prior_label(\"normal(2, 1)\", group = \"group_2\", time = \"time_1\") |>   brm_prior_label(\"normal(2, 2)\", group = \"group_2\", time = \"time_2\") |>   brm_prior_label(\"normal(2, 3)\", group = \"group_2\", time = \"time_3\") label #> # A tibble: 6 × 3 #>   code         group   time   #>   <chr>        <chr>   <chr>  #> 1 normal(1, 1) group_1 time_1 #> 2 normal(1, 2) group_1 time_2 #> 3 normal(1, 3) group_1 time_3 #> 4 normal(2, 1) group_2 time_1 #> 5 normal(2, 2) group_2 time_2 #> 6 normal(2, 3) group_2 time_3"},{"path":"/reference/brm_prior_simple.html","id":null,"dir":"Reference","previous_headings":"","what":"Simple prior for a brms MMRM — brm_prior_simple","title":"Simple prior for a brms MMRM — brm_prior_simple","text":"Generate simple prior brms MMRM.","code":""},{"path":"/reference/brm_prior_simple.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simple prior for a brms MMRM — brm_prior_simple","text":"","code":"brm_prior_simple(   data,   formula,   intercept = \"student_t(3, 0, 2.5)\",   coefficients = \"student_t(3, 0, 2.5)\",   sigma = \"student_t(3, 0, 2.5)\",   unstructured = \"lkj(1)\",   autoregressive = \"\",   moving_average = \"\",   compound_symmetry = \"\",   correlation = NULL )"},{"path":"/reference/brm_prior_simple.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simple prior for a brms MMRM — brm_prior_simple","text":"data classed data frame brm_data(), informative prior archetype function like brm_archetype_successive_cells(). formula object class \"brmsformula\" brm_formula() brms::brmsformula(). include full mapping model, including fixed effects, residual correlation, heterogeneity discrete-time-specific residual variance components. intercept Character length 1, Stan code prior set intercept parameter. coefficients Character length 1, Stan code prior set independently non-intercept model coefficients. sigma Character length 1, Stan code prior set independently log-scale standard deviation parameters. symmetric prior situations. unstructured Character length 1, Stan code unstructured correlation prior. Supply empty string \"\" set flat prior (default). Applies \"cortime parameter class brms priors. Used formulas created brm_formula(correlation = \"unstructured\"). LKJ recommended. See also brms::unstr(). autoregressive Character length 1, Stan code prior autoregressive correlation parameters. Supply empty string \"\" set flat prior (default). Applies \"ar parameter class brms priors. Used formulas created brm_formula(correlation = \"autoregressive\") brm_formula(correlation = \"autoregressive_moving_average\"). See also brms::ar() brms::arma(). moving_average Character length 1, Stan code prior moving average correlation parameters. Supply empty string \"\" set flat prior (default). Applies \"ma parameter class brms priors. Used formulas created brm_formula(correlation = \"moving_average\") brm_formula(correlation = \"autoregressive_moving_average\"). See also brms::ma() brms::arma(). compound_symmetry Character length 1, Stan code prior compound symmetry correlation parameters. Supply empty string \"\" set flat prior (default). Applies \"cosy parameter class brms priors. Used formulas created brm_formula(correlation = \"compound_symmetry\"). See also brms::cosy(). correlation Deprecated 2024-04-22 (version 0.1.0.9004). Please use arguments like \"unstructured\", /\"autoregressive\" supply correlation-specific priors.","code":""},{"path":"/reference/brm_prior_simple.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simple prior for a brms MMRM — brm_prior_simple","text":"classed data frame brms prior.","code":""},{"path":"/reference/brm_prior_simple.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simple prior for a brms MMRM — brm_prior_simple","text":"brm_prior_simple(), can separately choose priors intercept, model coefficients, log-scale standard deviations, pairwise correlations time points within patients. However, class parameters set whole. words, brm_prior_simple() assign different priors different fixed effect parameters.","code":""},{"path":[]},{"path":"/reference/brm_prior_simple.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simple prior for a brms MMRM — brm_prior_simple","text":"","code":"set.seed(0L) data <- brm_simulate_outline() data <- brm_simulate_continuous(data, names = c(\"age\", \"biomarker\")) formula <- brm_formula(   data = data,   baseline = FALSE,   baseline_time = FALSE,   check_rank = FALSE ) brm_prior_simple(   data = data,   formula = formula,   intercept = \"student_t(3, 0, 2.5)\",   coefficients = \"normal(0, 10)\",   sigma = \"student_t(2, 0, 4)\",   unstructured = \"lkj(2.5)\" ) #>                 prior     class coef group resp  dpar nlpar lb ub  source #>  student_t(3, 0, 2.5) Intercept                                   default #>         normal(0, 10)         b                                   default #>              lkj(2.5)   cortime                                   default #>    student_t(2, 0, 4)         b                 sigma             default"},{"path":"/reference/brm_recenter_nuisance.html","id":null,"dir":"Reference","previous_headings":"","what":"Recenter nuisance variables — brm_recenter_nuisance","title":"Recenter nuisance variables — brm_recenter_nuisance","text":"Change center nuisance variable informative prior archetype.","code":""},{"path":"/reference/brm_recenter_nuisance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recenter nuisance variables — brm_recenter_nuisance","text":"","code":"brm_recenter_nuisance(data, nuisance, center)"},{"path":"/reference/brm_recenter_nuisance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recenter nuisance variables — brm_recenter_nuisance","text":"data informative prior archetype data frame output brm_archetype_cells() similar. nuisance Character length 1, name nuisance column data shift center. center Numeric length 1, value center shift column nuisance. affected column returned archetype data frame look centered value begin .","code":""},{"path":"/reference/brm_recenter_nuisance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recenter nuisance variables — brm_recenter_nuisance","text":"informative prior archetype data frame one variables re-centered.","code":""},{"path":"/reference/brm_recenter_nuisance.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Recenter nuisance variables — brm_recenter_nuisance","text":"\"centering vector y scalar x\", mean taking difference z = y - x. x mean, mean(z) 0. Informative prior archetypes center nuisance variables means parameters can interpreted correctly setting informative priors. appropriate time, sometimes better center column pre-specified scientifically meaningful fixed number. want nuisance column centered fixed value mean, use brm_recenter_nuisance() shift center. function can handle nuisance variable","code":""},{"path":"/reference/brm_recenter_nuisance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Recenter nuisance variables — brm_recenter_nuisance","text":"","code":"set.seed(0L) data <- brm_simulate_outline(   n_group = 2,   n_patient = 100,   n_time = 4,   rate_dropout = 0,   rate_lapse = 0 ) |>   dplyr::mutate(response = rnorm(n = dplyr::n())) |>   brm_data_change() |>   brm_simulate_continuous(names = c(\"biomarker1\", \"biomarker2\")) |>   brm_simulate_categorical(     names = c(\"status1\", \"status2\"),     levels = c(\"present\", \"absent\")   ) archetype <- brm_archetype_cells(data) mean(archetype$nuisance_biomarker1) # after original centering #> [1] -2.088553e-17 center <- mean(data$biomarker1) center # original center, before the centering from brm_archetype_cells() #> [1] -0.05507499 attr(archetype$nuisance_biomarker1, \"brm_center\") # original center #> [1] -0.05507499 max(abs((data$biomarker1 - center) - archetype$nuisance_biomarker1)) #> [1] 0 # Re-center nuisance_biomarker1 at 0.75. archetype <- brm_recenter_nuisance(   data = archetype,   nuisance = \"nuisance_biomarker1\",   center = 0.75 ) attr(archetype$nuisance_biomarker1, \"brm_center\") # new center #> [1] 0.75 mean(archetype$nuisance_biomarker1) # no longer equal to the center #> [1] -0.805075 # nuisance_biomarker1 is now as though we centered it at 0.75. max(abs((data$biomarker1 - 0.75) - archetype$nuisance_biomarker1)) #> [1] 2.220446e-16"},{"path":"/reference/brm_simulate.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated: simulate an MMRM. — brm_simulate","title":"Deprecated: simulate an MMRM. — brm_simulate","text":"Deprecated 2023-09-01 (version 0.0.2.9001). Use brm_simulate_simple() instead.","code":""},{"path":"/reference/brm_simulate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated: simulate an MMRM. — brm_simulate","text":"","code":"brm_simulate(   n_group = 2L,   n_patient = 100L,   n_time = 4L,   hyper_beta = 1,   hyper_sigma = 1,   hyper_correlation = 1 )"},{"path":"/reference/brm_simulate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deprecated: simulate an MMRM. — brm_simulate","text":"n_group Positive integer length 1, number treatment groups. n_patient Positive integer length 1, number patients per treatment group. n_time Positive integer length 1, number discrete time points (e.g. scheduled study visits) per patient. hyper_beta Positive numeric length 1, hyperparameter. Prior standard deviation fixed effect parameters. hyper_sigma Positive numeric length 1, hyperparameter. Uniform prior upper bound time-specific residual standard deviation parameters. hyper_correlation Positive numeric length 1, hyperparameter. LKJ shape parameter correlation matrix among repeated measures within patient.","code":""},{"path":"/reference/brm_simulate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Deprecated: simulate an MMRM. — brm_simulate","text":"list three objects: data: tidy dataset one row per patient per discrete time point columns response covariates. model_matrix: matrix one row per row data columns represent levels covariates. parameters: named list parameter values sampled prior.","code":""},{"path":"/reference/brm_simulate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Deprecated: simulate an MMRM. — brm_simulate","text":"","code":"set.seed(0L) simulation <- suppressWarnings(brm_simulate()) simulation$data #> # A tibble: 800 × 4 #>    response group   patient   time   #>       <dbl> <chr>   <chr>     <chr>  #>  1     1.30 group 1 patient 1 time 1 #>  2     2.52 group 1 patient 1 time 2 #>  3     2.63 group 1 patient 1 time 3 #>  4     1.98 group 1 patient 1 time 4 #>  5     1.22 group 1 patient 2 time 1 #>  6     2.63 group 1 patient 2 time 2 #>  7     2.38 group 1 patient 2 time 3 #>  8     2.52 group 1 patient 2 time 4 #>  9     1.32 group 1 patient 3 time 1 #> 10     2.63 group 1 patient 3 time 2 #> # ℹ 790 more rows"},{"path":"/reference/brm_simulate_categorical.html","id":null,"dir":"Reference","previous_headings":"","what":"Append simulated categorical covariates — brm_simulate_categorical","title":"Append simulated categorical covariates — brm_simulate_categorical","text":"Simulate append non-time-varying categorical covariates existing brm_data() dataset.","code":""},{"path":"/reference/brm_simulate_categorical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Append simulated categorical covariates — brm_simulate_categorical","text":"","code":"brm_simulate_categorical(data, names, levels, probabilities = NULL)"},{"path":"/reference/brm_simulate_categorical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Append simulated categorical covariates — brm_simulate_categorical","text":"data Classed tibble brm_data() brm_simulate_outline(). names Character vector names new covariates simulate append. Names must unique must already column names data. levels Character vector unique levels simulated categorical covariates. probabilities Either NULL numeric vector length length(levels) levels 0 1 elements sum 1. NULL, levels equally likely drawn. NULL, probabilities vector sampling probabilities corresponding respective level levels.","code":""},{"path":"/reference/brm_simulate_categorical.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Append simulated categorical covariates — brm_simulate_categorical","text":"classed tibble, like brm_data() brm_simulate_outline(), new categorical covariate columns names new covariates appended brm_covariates attribute. new categorical covariate column character vector, factor type base R.","code":""},{"path":"/reference/brm_simulate_categorical.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Append simulated categorical covariates — brm_simulate_categorical","text":"covariate new column dataset one independent random categorical draw patient, using fixed set levels (via base::sample() replace = TRUE). covariates simulated way independent everything else data, including covariates (extent random number generators R work intended).","code":""},{"path":[]},{"path":"/reference/brm_simulate_categorical.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Append simulated categorical covariates — brm_simulate_categorical","text":"","code":"data <- brm_simulate_outline() brm_simulate_categorical(   data = data,   names = c(\"site\", \"region\"),   levels = c(\"area1\", \"area2\") ) #> # A tibble: 800 × 7 #>    response missing group   time   patient     site  region #>       <dbl> <lgl>   <chr>   <chr>  <chr>       <chr> <chr>  #>  1       NA FALSE   group_1 time_1 patient_001 area2 area2  #>  2       NA FALSE   group_1 time_2 patient_001 area2 area2  #>  3       NA FALSE   group_1 time_3 patient_001 area2 area2  #>  4       NA FALSE   group_1 time_4 patient_001 area2 area2  #>  5       NA FALSE   group_1 time_1 patient_002 area1 area2  #>  6       NA FALSE   group_1 time_2 patient_002 area1 area2  #>  7       NA TRUE    group_1 time_3 patient_002 area1 area2  #>  8       NA TRUE    group_1 time_4 patient_002 area1 area2  #>  9       NA FALSE   group_1 time_1 patient_003 area2 area2  #> 10       NA FALSE   group_1 time_2 patient_003 area2 area2  #> # ℹ 790 more rows brm_simulate_categorical(   data = data,   names = c(\"site\", \"region\"),   levels = c(\"area1\", \"area2\"),   probabilities = c(0.1, 0.9) ) #> # A tibble: 800 × 7 #>    response missing group   time   patient     site  region #>       <dbl> <lgl>   <chr>   <chr>  <chr>       <chr> <chr>  #>  1       NA FALSE   group_1 time_1 patient_001 area2 area2  #>  2       NA FALSE   group_1 time_2 patient_001 area2 area2  #>  3       NA FALSE   group_1 time_3 patient_001 area2 area2  #>  4       NA FALSE   group_1 time_4 patient_001 area2 area2  #>  5       NA FALSE   group_1 time_1 patient_002 area2 area2  #>  6       NA FALSE   group_1 time_2 patient_002 area2 area2  #>  7       NA TRUE    group_1 time_3 patient_002 area2 area2  #>  8       NA TRUE    group_1 time_4 patient_002 area2 area2  #>  9       NA FALSE   group_1 time_1 patient_003 area2 area2  #> 10       NA FALSE   group_1 time_2 patient_003 area2 area2  #> # ℹ 790 more rows"},{"path":"/reference/brm_simulate_continuous.html","id":null,"dir":"Reference","previous_headings":"","what":"Append simulated continuous covariates — brm_simulate_continuous","title":"Append simulated continuous covariates — brm_simulate_continuous","text":"Simulate append non-time-varying continuous covariates existing brm_data() dataset.","code":""},{"path":"/reference/brm_simulate_continuous.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Append simulated continuous covariates — brm_simulate_continuous","text":"","code":"brm_simulate_continuous(data, names, mean = 0, sd = 1)"},{"path":"/reference/brm_simulate_continuous.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Append simulated continuous covariates — brm_simulate_continuous","text":"data Classed tibble brm_data() brm_simulate_outline(). names Character vector names new covariates simulate append. Names must unique must already column names data. mean Numeric length 1, mean normal distribution simulating covariate. sd Positive numeric length 1, standard deviation normal distribution simulating covariate.","code":""},{"path":"/reference/brm_simulate_continuous.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Append simulated continuous covariates — brm_simulate_continuous","text":"classed tibble, like brm_data() brm_simulate_outline(), new numeric covariate columns names new covariates appended brm_covariates attribute.","code":""},{"path":"/reference/brm_simulate_continuous.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Append simulated continuous covariates — brm_simulate_continuous","text":"covariate new column dataset one independent random univariate normal draw patient. covariates simulated way independent everything else data, including covariates (extent random number generators R work intended).","code":""},{"path":[]},{"path":"/reference/brm_simulate_continuous.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Append simulated continuous covariates — brm_simulate_continuous","text":"","code":"data <- brm_simulate_outline() brm_simulate_continuous(   data = data,   names = c(\"age\", \"biomarker\") ) #> # A tibble: 800 × 7 #>    response missing group   time   patient         age biomarker #>       <dbl> <lgl>   <chr>   <chr>  <chr>         <dbl>     <dbl> #>  1       NA FALSE   group_1 time_1 patient_001 -0.0499    -1.30  #>  2       NA FALSE   group_1 time_2 patient_001 -0.0499    -1.30  #>  3       NA FALSE   group_1 time_3 patient_001 -0.0499    -1.30  #>  4       NA FALSE   group_1 time_4 patient_001 -0.0499    -1.30  #>  5       NA FALSE   group_1 time_1 patient_002  1.75       0.592 #>  6       NA FALSE   group_1 time_2 patient_002  1.75       0.592 #>  7       NA FALSE   group_1 time_3 patient_002  1.75       0.592 #>  8       NA FALSE   group_1 time_4 patient_002  1.75       0.592 #>  9       NA FALSE   group_1 time_1 patient_003  0.400      1.05  #> 10       NA FALSE   group_1 time_2 patient_003  0.400      1.05  #> # ℹ 790 more rows brm_simulate_continuous(   data = data,   names = c(\"biomarker1\", \"biomarker2\"),   mean = 1000,   sd = 100 ) #> # A tibble: 800 × 7 #>    response missing group   time   patient     biomarker1 biomarker2 #>       <dbl> <lgl>   <chr>   <chr>  <chr>            <dbl>      <dbl> #>  1       NA FALSE   group_1 time_1 patient_001      1154.      1066. #>  2       NA FALSE   group_1 time_2 patient_001      1154.      1066. #>  3       NA FALSE   group_1 time_3 patient_001      1154.      1066. #>  4       NA FALSE   group_1 time_4 patient_001      1154.      1066. #>  5       NA FALSE   group_1 time_1 patient_002      1108.      1084. #>  6       NA FALSE   group_1 time_2 patient_002      1108.      1084. #>  7       NA FALSE   group_1 time_3 patient_002      1108.      1084. #>  8       NA FALSE   group_1 time_4 patient_002      1108.      1084. #>  9       NA FALSE   group_1 time_1 patient_003       714.      1111. #> 10       NA FALSE   group_1 time_2 patient_003       714.      1111. #> # ℹ 790 more rows"},{"path":"/reference/brm_simulate_outline.html","id":null,"dir":"Reference","previous_headings":"","what":"Start a simulated dataset — brm_simulate_outline","title":"Start a simulated dataset — brm_simulate_outline","text":"Begin creating simulated dataset.","code":""},{"path":"/reference/brm_simulate_outline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Start a simulated dataset — brm_simulate_outline","text":"","code":"brm_simulate_outline(   n_group = 2L,   n_subgroup = NULL,   n_patient = 100L,   n_time = 4L,   rate_dropout = 0.1,   rate_lapse = 0.05 )"},{"path":"/reference/brm_simulate_outline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Start a simulated dataset — brm_simulate_outline","text":"n_group Positive integer length 1, number treatment groups. n_subgroup Positive integer length 1, number subgroup levels. Set NULL omit subgroup entirely. n_patient Positive integer length 1. n_subgroup NULL, n_patient number patients per treatment group. Otherwise, n_patient number patients per treatment group per subgroup. cases, total number patients whole simulated dataset usually much greater n_patients argument brm_simulate_outline(). n_time Positive integer length 1, number discrete time points (e.g. scheduled study visits) per patient. rate_dropout Numeric length 1 0 1, post-baseline dropout rate. dropout intercurrent event data collection patient stops permanently, causing outcomes patient missing dropout occurred. first time point assumed baseline, dropout . Dropouts equally likely occur post-baseline time points. rate_lapse Numeric length 1, expected proportion post-baseline outcomes missing. Missing outcomes type independent uniformly distributed across data.","code":""},{"path":"/reference/brm_simulate_outline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Start a simulated dataset — brm_simulate_outline","text":"data frame brm_data() attributes define roles various columns dataset. data frame one row per patient per time point following columns: group: integer index treatment group. patient: integer index patient. time: integer index discrete time point.","code":""},{"path":[]},{"path":"/reference/brm_simulate_outline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Start a simulated dataset — brm_simulate_outline","text":"","code":"brm_simulate_outline() #> # A tibble: 800 × 5 #>    response missing group   time   patient     #>       <dbl> <lgl>   <chr>   <chr>  <chr>       #>  1       NA FALSE   group_1 time_1 patient_001 #>  2       NA FALSE   group_1 time_2 patient_001 #>  3       NA FALSE   group_1 time_3 patient_001 #>  4       NA FALSE   group_1 time_4 patient_001 #>  5       NA FALSE   group_1 time_1 patient_002 #>  6       NA FALSE   group_1 time_2 patient_002 #>  7       NA FALSE   group_1 time_3 patient_002 #>  8       NA FALSE   group_1 time_4 patient_002 #>  9       NA FALSE   group_1 time_1 patient_003 #> 10       NA FALSE   group_1 time_2 patient_003 #> # ℹ 790 more rows"},{"path":"/reference/brm_simulate_prior.html","id":null,"dir":"Reference","previous_headings":"","what":"Prior predictive draws. — brm_simulate_prior","title":"Prior predictive draws. — brm_simulate_prior","text":"Simulate outcome variable prior predictive distribution MMRM using brms.","code":""},{"path":"/reference/brm_simulate_prior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prior predictive draws. — brm_simulate_prior","text":"","code":"brm_simulate_prior(   data,   formula,   prior = brms.mmrm::brm_prior_simple(data = data, formula = formula),   ... )"},{"path":"/reference/brm_simulate_prior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prior predictive draws. — brm_simulate_prior","text":"data classed data frame brm_data(), informative prior archetype function like brm_archetype_successive_cells(). formula object class \"brmsformula\" brm_formula() brms::brmsformula(). include full mapping model, including fixed effects, residual correlation, heterogeneity discrete-time-specific residual variance components. prior valid brms prior object proper priors parameters b (model coefficients), b_sigma (log residual standard deviations time point), cortime (residual correlations among time points within patients). See brm_prior_simple() function example. ... Arguments brms::brm() data, formula, prior.","code":""},{"path":"/reference/brm_simulate_prior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prior predictive draws. — brm_simulate_prior","text":"list following elements: data: classed tibble outcome variable simulated draw prior predictive distribution (final row outcome output). simulated missingness pattern brm_simulate_outline(), missingness pattern applied appropriate values outcome variable set NA. model: brms model fit object. model_matrix: model matrix fixed effects, obtained brms::make_standata(). outcome: numeric matrix one column per row data one row per saved prior predictive draw. parameters: tibble saved parameter draws prior predictive distribution.","code":""},{"path":"/reference/brm_simulate_prior.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Prior predictive draws. — brm_simulate_prior","text":"brm_simulate_prior() calls brms::brm() sample_prior = \"\", sets default intercept prior using outcome variable requires least elements outcome variable non-missing advance. provide feasible consistent output, brm_simulate_prior() temporarily sets outcome variable zeros invoking brms::brm().","code":""},{"path":[]},{"path":"/reference/brm_simulate_prior.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prior predictive draws. — brm_simulate_prior","text":"","code":"if (identical(Sys.getenv(\"BRM_EXAMPLES\", unset = \"\"), \"true\")) { set.seed(0L) data <- brm_simulate_outline() data <- brm_simulate_continuous(data, names = c(\"age\", \"biomarker\")) data$response <- rnorm(nrow(data)) formula <- brm_formula(   data = data,   baseline = FALSE,   baseline_time = FALSE ) tmp <- utils::capture.output(   suppressMessages(     suppressWarnings(       out <- brm_simulate_prior(         data = data,         formula = formula       )     )   ) ) out$data }"},{"path":"/reference/brm_simulate_simple.html","id":null,"dir":"Reference","previous_headings":"","what":"Simple MMRM simulation. — brm_simulate_simple","title":"Simple MMRM simulation. — brm_simulate_simple","text":"Simple function simulate dataset simple specialized MMRM.","code":""},{"path":"/reference/brm_simulate_simple.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simple MMRM simulation. — brm_simulate_simple","text":"","code":"brm_simulate_simple(   n_group = 2L,   n_patient = 100L,   n_time = 4L,   hyper_beta = 1,   hyper_tau = 0.1,   hyper_lambda = 1 )"},{"path":"/reference/brm_simulate_simple.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simple MMRM simulation. — brm_simulate_simple","text":"n_group Positive integer length 1, number treatment groups. n_patient Positive integer length 1, number patients per treatment group. n_time Positive integer length 1, number discrete time points (e.g. scheduled study visits) per patient. hyper_beta Positive numeric length 1, hyperparameter. Prior standard deviation fixed effect parameters beta. hyper_tau Positive numeric length 1, hyperparameter. Prior standard deviation parameter residual log standard deviation parameters tau hyper_lambda Positive numeric length 1, hyperparameter. Prior shape parameter LKJ correlation matrix residuals among discrete time points.","code":""},{"path":"/reference/brm_simulate_simple.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simple MMRM simulation. — brm_simulate_simple","text":"list three objects: data: tidy dataset one row per patient per discrete time point columns outcome ID variables. model_matrix: matrix one row per row data columns represent levels covariates. parameters: named list parameter draws sampled prior: beta: numeric vector fixed effects. tau: numeric vector residual log standard parameters time point. sigma: numeric vector residual standard parameters time point. sigma equal exp(tau). lambda: correlation matrix residuals among time points within patient. covariance: covariance matrix residuals among time points within patient. covariance equal diag(sigma) %*% lambda %*% diag(sigma).","code":""},{"path":"/reference/brm_simulate_simple.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simple MMRM simulation. — brm_simulate_simple","text":"Refer methods vignette full model specification. brm_simulate_simple() function simulates dataset simple pre-defined MMRM. assumes cell means structure fixed effects, means one fixed effect scalar parameter (element vector beta) unique combination levels treatment group discrete time point. elements beta independent univariate normal priors mean 0 standard deviation hyper_beta. residual log standard deviation parameters (elements vector tau) normal priors mean 0 standard deviation hyper_tau. residual correlation matrix parameter lambda LKJ correlation prior shape parameter hyper_lambda.","code":""},{"path":[]},{"path":"/reference/brm_simulate_simple.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simple MMRM simulation. — brm_simulate_simple","text":"","code":"set.seed(0L) simulation <- brm_simulate_simple() simulation$data #> # A tibble: 800 × 4 #>    response group   time   patient     #>       <dbl> <chr>   <chr>  <chr>       #>  1    1.47  group_1 time_1 patient_001 #>  2    3.10  group_1 time_2 patient_001 #>  3    2.22  group_1 time_3 patient_001 #>  4    0.215 group_1 time_4 patient_001 #>  5    1.03  group_1 time_1 patient_002 #>  6    2.28  group_1 time_2 patient_002 #>  7    2.36  group_1 time_3 patient_002 #>  8    2.33  group_1 time_4 patient_002 #>  9    0.128 group_1 time_1 patient_003 #> 10    1.89  group_1 time_2 patient_003 #> # ℹ 790 more rows"},{"path":"/reference/brm_transform_marginal.html","id":null,"dir":"Reference","previous_headings":"","what":"Marginal mean transformation — brm_transform_marginal","title":"Marginal mean transformation — brm_transform_marginal","text":"Transformation model parameters marginal means.","code":""},{"path":"/reference/brm_transform_marginal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Marginal mean transformation — brm_transform_marginal","text":"","code":"brm_transform_marginal(   data,   formula,   average_within_subgroup = NULL,   prefix = \"b_\" )"},{"path":"/reference/brm_transform_marginal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Marginal mean transformation — brm_transform_marginal","text":"data classed data frame brm_data(), informative prior archetype function like brm_archetype_successive_cells(). formula object class \"brmsformula\" brm_formula() brms::brmsformula(). include full mapping model, including fixed effects, residual correlation, heterogeneity discrete-time-specific residual variance components. average_within_subgroup TRUE average concomitant covariates proportionally within subgroup levels, FALSE average covariates across whole dataset. average_within_subgroup NULL (default), model subgroup nuisance variables, brm_transform_marginal() prints informative message (per session) sets average_within_subgroup FALSE. see message, please read https://openpharma.github.io/brms.mmrm/articles/inference.html, decide whether set average_within_subgroup TRUE FALSE brm_transform_marginal(), manually supply output brm_transform_marginal() transform argument brm_marginal_draws(). create marginal means, brms.mmrm conditions nuisance covariates averages across whole dataset (average_within_subgroup = FALSE NULL brm_transform_marginal()). may reasonable cases, mitigates kind hidden confounding subgroup variables may otherwise cause Simpson's paradox. However, subgroup-specific marginal means, may realistic condition single point estimate levels reference grid (example, subgroup female vs male, marginal means condition single overall observed pregnancy rate 5%). situations, may appropriate instead condition subgroup-specific averages nuisance variables (average_within_subgroup = TRUE brm_transform_marginal()). , responsibility investigate understand hidden interactions confounding dataset. information, please visit https://openpharma.github.io/brms.mmrm/articles/inference.html https://cran.r-project.org/package=emmeans/vignettes/interactions.html. prefix Character length 1, prefix add model matrix (\"X\") brms::make_standata() order reconstruct brms model parameter names. argument modified testing purposes.","code":""},{"path":"/reference/brm_transform_marginal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Marginal mean transformation — brm_transform_marginal","text":"matrix transform model parameters (columns) marginal means (rows).","code":""},{"path":"/reference/brm_transform_marginal.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Marginal mean transformation — brm_transform_marginal","text":"matrix brm_transform_marginal() passed transform_marginal argument brm_marginal_draws(), transforms posterior draws model parameters posterior draws marginal means. may customize output brm_transform_marginal() passing brm_marginal_draws(). However, please modify dimensions, row names, column names.","code":""},{"path":"/reference/brm_transform_marginal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Marginal mean transformation — brm_transform_marginal","text":"","code":"if (identical(Sys.getenv(\"BRM_EXAMPLES\", unset = \"\"), \"true\")) { set.seed(0L) data <- brm_data(   data = brm_simulate_simple()$data,   outcome = \"response\",   role = \"response\",   group = \"group\",   time = \"time\",   patient = \"patient\",   reference_group = \"group_1\",   reference_time = \"time_1\" ) formula <- brm_formula(   data = data,   baseline = FALSE,   baseline_time = FALSE ) transform <- brm_transform_marginal(data = data, formula = formula) print(transform) }"},{"path":"/reference/brms.mmrm-package.html","id":null,"dir":"Reference","previous_headings":"","what":"brms.mmrm: Bayesian MMRMs using brms — brms.mmrm-package","title":"brms.mmrm: Bayesian MMRMs using brms — brms.mmrm-package","text":"mixed model repeated measures (MMRM) popular model longitudinal clinical trial data continuous endpoints, brms powerful versatile package fitting Bayesian regression models. brms.mmrm R package leverages brms run MMRMs, supports simplified interfaced reduce difficulty align best practices life sciences.","code":""},{"path":"/reference/brms.mmrm-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"brms.mmrm: Bayesian MMRMs using brms — brms.mmrm-package","text":"Bürkner, P.-C. (2017), \"brms: R package Bayesian multilevel models using Stan,\" Journal Statistical Software, 80, 1–28. https://doi.org/10.18637/jss.v080.i01. Holzhauer, B., Weber, S. (2024), \"Bayesian mixed effects model repeated measures,\" Applied Modeling Drug Development, Novartis AG. https://opensource.nibr.com/bamdd/src/02h_mmrm.html. Mallinckrodt, C. H., Lane, P. W., Schnell, D., others (2008), \"Recommendations primary analysis continuous endpoints longitudinal clinical trials,\" Therapeutic Innovation Regulatory Science, 42, 303–319. https://doi.org/10.1177/009286150804200402. Mallinckrodt, C. H., Lipkovich, . (2017), Analyzing longitudinal clinical trial data: practical guide, CRC Press, Taylor & Francis Group.","code":""},{"path":[]},{"path":"/news/index.html","id":"new-features-1-0-0","dir":"Changelog","previous_headings":"","what":"New features","title":"brms.mmrm 1.0.0","text":"Add informative prior archetypes (#96, #101). Add [brm_formula_sigma()] allow flexibility modeling standard deviations distributional parameters (#102). Due complexities computing marginal means standard deviations rare scenarios, [brm_marginal_draws()] return effect size [brm_formula_sigma()] uses baseline covariates.","code":""},{"path":"/news/index.html","id":"guardrails-to-ensure-the-appropriateness-of-marginal-mean-estimation-1-0-0","dir":"Changelog","previous_headings":"","what":"Guardrails to ensure the appropriateness of marginal mean estimation","title":"brms.mmrm 1.0.0","text":"Require new formula argument brm_marginal_draws(). Change class name \"brm_data\" \"brms_mmrm_data\" align class names. Create special \"brms_mmrm_formula\" class wrap around model formula. class ensures formulas passed model created brms_formula(), attributes store user’s choice fixed effects. Create special \"brms_mmrm_model\" class fitted model objects. class ensures fitted models created brms_model(), attributes store \"brms_mmrm_formula\" object way brms modify. Deprecate use_subgroup brm_marginal_draws(). subgroup now always part reference grid declared brm_data(). marginalize subgroup, declare covariates instead. Prevent overplotting multiple subgroups brm_plot_compare(). Update subgroup vignette reflect changes .","code":""},{"path":"/news/index.html","id":"custom-estimation-of-marginal-means-1-0-0","dir":"Changelog","previous_headings":"","what":"Custom estimation of marginal means","title":"brms.mmrm 1.0.0","text":"Implement new brm_transform_marginal() transform model parameters marginal means (#53). Use brm_transform_marginal() instead emmeans brm_marginal_draws() derive posterior draws marginal means based posterior draws model parameters (#53). Explain custom marginal mean calculation new inference.Rmd vignette. Rename methods.Rmd model.Rmd since inference.Rmd also discusses methods.","code":""},{"path":"/news/index.html","id":"other-improvements-1-0-0","dir":"Changelog","previous_headings":"","what":"Other improvements","title":"brms.mmrm 1.0.0","text":"Extend brm_formula() brm_marginal_draws() optionally model homogeneous variances, well ARMA, AR, MA, compound symmetry correlation structures. Restrict brm_model() continuous families identity links. brm_prior_simple(), deprecate correlation argument favor individual correlation-specific arguments unstructured compound_symmetry. Ensure model matrices full rank (#99).","code":""},{"path":"/news/index.html","id":"brmsmmrm-010","dir":"Changelog","previous_headings":"","what":"brms.mmrm 0.1.0","title":"brms.mmrm 0.1.0","text":"CRAN release: 2024-02-15 Deprecate brm_simulate() favor brm_simulate_simple() (#3). latter specific name disambiguate simulation functions, parameterization conforms one methods vignette. Add new functions nuanced simulations: brm_simulate_outline(), brm_simulate_continuous(), brm_simulate_categorical() (#3). brm_model(), remove rows missing responses. rows automatically removed brms anyway, handling handling brms.mmrm, avoid warning. Add subgroup analysis functionality validate subgroup model simulation-based calibration (#18). Zero-pad numeric indexes simulated data levels sort expected. brm_data(), deprecate level_control favor reference_group. brm_data(), deprecate level_baseline favor reference_time. brm_formula(), deprecate arguments effect_baseline, effect_group, effect_time, interaction_baseline, interaction_group favor baseline, group, time, baseline_time, group_time, respectively. Propagate values missing column brm_data_change() value change baseline labeled missing either baseline response missing post-baseline response missing. Change names output brm_marginal_draws() internally consistent fit better addition subgroup-specific marginals (#18). Allow brm_plot_compare() brm_plot_draws() select x axis variable faceting variables. Allow brm_plot_compare() choose primary comparison interest (source data, discrete time, treatment group, subgroup level).","code":""},{"path":"/news/index.html","id":"brmsmmrm-002","dir":"Changelog","previous_headings":"","what":"brms.mmrm 0.0.2","title":"brms.mmrm 0.0.2","text":"CRAN release: 2023-08-18 Fix grammatical issues description.","code":""},{"path":"/news/index.html","id":"brmsmmrm-001","dir":"Changelog","previous_headings":"","what":"brms.mmrm 0.0.1","title":"brms.mmrm 0.0.1","text":"First version.","code":""}]
